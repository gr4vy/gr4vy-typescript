/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { paymentOptionsListPaymentOptions } from "../funcs/paymentOptionsListPaymentOptions.js";
import { paymentOptionsPostListPaymentOptions } from "../funcs/paymentOptionsPostListPaymentOptions.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as components from "../models/components/index.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class PaymentOptions extends ClientSDK {
    /**
     * List payment options
     *
     * @remarks
     * Returns a list of available payment method options for the combination of
     * amount, currency, country and metadata.
     *
     * If the amount is zero, payment options which do not support zero amounts,
     * will be omitted in the response.
     *
     * Checkout flow rules are used to limit these result.
     */
    async listPaymentOptions(
        request: operations.ListPaymentOptionsRequest,
        options?: RequestOptions
    ): Promise<components.PaymentOptions> {
        return unwrapAsync(paymentOptionsListPaymentOptions(this, request, options));
    }

    /**
     * List payment options with POST
     *
     * @remarks
     * Returns a list of available payment method options for the combination of
     * amount, currency, country, metadata and list of cart items.
     *
     * If the amount is zero, payment options which do not support zero amounts,
     * will be omitted in the response.
     *
     * Checkout flow rules are used to limit these result.
     */
    async postListPaymentOptions(
        request?: components.PaymentOptionsRequest | undefined,
        options?: RequestOptions
    ): Promise<components.PaymentOptions> {
        return unwrapAsync(paymentOptionsPostListPaymentOptions(this, request, options));
    }
}

/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { digitalWalletsSessionsApplePay } from "../funcs/digitalWalletsSessionsApplePay.js";
import { digitalWalletsSessionsClickToPay } from "../funcs/digitalWalletsSessionsClickToPay.js";
import { digitalWalletsSessionsGooglePay } from "../funcs/digitalWalletsSessionsGooglePay.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as components from "../models/components/index.js";
import { unwrapAsync } from "../types/fp.js";

export class Sessions extends ClientSDK {
  /**
   * Create a Google Pay session
   *
   * @remarks
   * Create a session for use with Google Pay.
   */
  async googlePay(
    request: components.GooglePaySessionRequest,
    options?: RequestOptions,
  ): Promise<components.GooglePaySession> {
    return unwrapAsync(digitalWalletsSessionsGooglePay(
      this,
      request,
      options,
    ));
  }

  /**
   * Create a Apple Pay session
   *
   * @remarks
   * Create a session for use with Apple Pay.
   */
  async applePay(
    request: components.ApplePaySessionRequest,
    options?: RequestOptions,
  ): Promise<{ [k: string]: any }> {
    return unwrapAsync(digitalWalletsSessionsApplePay(
      this,
      request,
      options,
    ));
  }

  /**
   * Create a Click to Pay session
   *
   * @remarks
   * Create a session for use with Click to Pay.
   */
  async clickToPay(
    request: components.ClickToPaySessionRequest,
    options?: RequestOptions,
  ): Promise<components.ClickToPaySession> {
    return unwrapAsync(digitalWalletsSessionsClickToPay(
      this,
      request,
      options,
    ));
  }
}

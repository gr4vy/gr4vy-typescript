/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { healthDashboardGetHealthDashboardStatus } from "../funcs/healthDashboardGetHealthDashboardStatus.js";
import { healthDashboardGetHealthDashboardTotal } from "../funcs/healthDashboardGetHealthDashboardTotal.js";
import { healthDashboardGetHealthDashboardTotalVolume } from "../funcs/healthDashboardGetHealthDashboardTotalVolume.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as components from "../models/components/index.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class HealthDashboard extends ClientSDK {
    /**
     * Get Health Dashboard status
     *
     * @remarks
     * Retrieves the Health Dashboard status summary.
     */
    async getHealthDashboardStatus(
        options?: RequestOptions
    ): Promise<components.HealthDashboardStatus> {
        return unwrapAsync(healthDashboardGetHealthDashboardStatus(this, options));
    }

    /**
     * Get Health Dashboard total
     *
     * @remarks
     * Retrieves the Health Dashboard line chart data.
     */
    async getHealthDashboardTotal(
        period: operations.Period,
        options?: RequestOptions
    ): Promise<components.HealthDashboardTotal> {
        return unwrapAsync(healthDashboardGetHealthDashboardTotal(this, period, options));
    }

    /**
     * Get Health Dashboard total volume
     *
     * @remarks
     * Retrieves the Health Dashboard volume line chart data.
     */
    async getHealthDashboardTotalVolume(
        currency: string,
        period: operations.QueryParamPeriod,
        options?: RequestOptions
    ): Promise<components.HealthDashboardTotalVolume> {
        return unwrapAsync(
            healthDashboardGetHealthDashboardTotalVolume(this, currency, period, options)
        );
    }
}

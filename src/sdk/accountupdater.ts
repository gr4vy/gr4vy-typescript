/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { accountUpdaterNewAccountUpdaterJob } from "../funcs/accountUpdaterNewAccountUpdaterJob.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as components from "../models/components/index.js";
import { unwrapAsync } from "../types/fp.js";

export class AccountUpdater extends ClientSDK {
    /**
     * Create Account Updater job
     *
     * @remarks
     * Creates an Account Updater job.
     *
     * A request is submitted to a third-party service, containing inquiries for a given
     * set of payment methods. The job is not processed right away, but once created, it
     * will store new card details automatically, if there are, when results are ready.
     *
     * A payment method is considered for the job if the following conditions are met:
     * * It exists.
     * * It's in a valid state: `status` is either `succeeded` or `processing`.
     * * It corresponds to a card: `method` is `card`.
     * * Its scheme is supported: `scheme` is `amex`, `discover`, `mastercard` or `visa`.
     * * It doesn't have an in-progress inquiry already.
     *
     * The endpoint works in a best-efforts basis and it doesn't return any error when a payment
     * method doesn't qualify for an inquiry. To determine what payment methods were considered
     * for the job, an `inquiries` field, returned in the response body, contains the submitted
     * inquiries. If none of the payment methods qualified for an inquiry, the job is not created
     * and a `204 No Content` status code is returned.
     */
    async newAccountUpdaterJob(
        request?: components.AccountUpdaterJobCreate | undefined,
        options?: RequestOptions
    ): Promise<components.AccountUpdaterJob | undefined> {
        return unwrapAsync(accountUpdaterNewAccountUpdaterJob(this, request, options));
    }
}

/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { transactionsEventsList } from "../funcs/transactionsEventsList.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as components from "../models/components/index.js";
import { unwrapAsync } from "../types/fp.js";

export class Events extends ClientSDK {
  /**
   * List transaction events
   *
   * @remarks
   * Retrieve a paginated list of events related to processing a transaction, including status changes, API requests, and webhook delivery attempts. Events are listed in chronological order, with the most recent events first.
   */
  async list(
    transactionId: string,
    cursor?: string | null | undefined,
    limit?: number | undefined,
    merchantAccountId?: string | null | undefined,
    options?: RequestOptions,
  ): Promise<components.TransactionEvents> {
    return unwrapAsync(transactionsEventsList(
      this,
      transactionId,
      cursor,
      limit,
      merchantAccountId,
      options,
    ));
  }
}

/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { transactionsRefundsCreate } from "../funcs/transactionsRefundsCreate.js";
import { transactionsRefundsGet } from "../funcs/transactionsRefundsGet.js";
import { transactionsRefundsList } from "../funcs/transactionsRefundsList.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as components from "../models/components/index.js";
import { unwrapAsync } from "../types/fp.js";
import { All } from "./all.js";

export class Gr4vyRefunds extends ClientSDK {
  private _all?: All;
  get all(): All {
    return (this._all ??= new All(this._options));
  }

  /**
   * List transaction refunds
   *
   * @remarks
   * List refunds for a transaction.
   */
  async list(
    transactionId: string,
    applicationName?: string | undefined,
    merchantAccountId?: string | null | undefined,
    options?: RequestOptions,
  ): Promise<components.CollectionRefund> {
    return unwrapAsync(transactionsRefundsList(
      this,
      transactionId,
      applicationName,
      merchantAccountId,
      options,
    ));
  }

  /**
   * Create transaction refund
   *
   * @remarks
   * Create a refund for a transaction.
   */
  async create(
    transactionRefundCreate: components.TransactionRefundCreate,
    transactionId: string,
    applicationName?: string | undefined,
    merchantAccountId?: string | null | undefined,
    options?: RequestOptions,
  ): Promise<components.Refund> {
    return unwrapAsync(transactionsRefundsCreate(
      this,
      transactionRefundCreate,
      transactionId,
      applicationName,
      merchantAccountId,
      options,
    ));
  }

  /**
   * Get transaction refund
   *
   * @remarks
   * Fetch refund for a transaction.
   */
  async get(
    transactionId: string,
    refundId: string,
    applicationName?: string | undefined,
    merchantAccountId?: string | null | undefined,
    options?: RequestOptions,
  ): Promise<components.Refund> {
    return unwrapAsync(transactionsRefundsGet(
      this,
      transactionId,
      refundId,
      applicationName,
      merchantAccountId,
      options,
    ));
  }
}

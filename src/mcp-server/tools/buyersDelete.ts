/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { buyersDelete } from "../../funcs/buyersDelete.js";
import { formatResult, ToolDefinition } from "../tools.js";

const args = {
  buyerId: z.string(),
  timeoutInSeconds: z.number().default(1),
};

export const tool$buyersDelete: ToolDefinition<typeof args> = {
  name: "buyers-delete",
  description: `Delete a buyer

Permanently removes a buyer record.`,
  args,
  tool: async (client, args, ctx) => {
    const [result, apiCall] = await buyersDelete(
      client,
      args.buyerId,
      args.timeoutInSeconds,
      { fetchOptions: { signal: ctx.signal } },
    ).$inspect();

    if (!result.ok) {
      return {
        content: [{ type: "text", text: result.error.message }],
        isError: true,
      };
    }

    return formatResult(void 0, apiCall);
  },
};

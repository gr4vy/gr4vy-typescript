/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { paymentServiceDefinitionsList } from "../../funcs/paymentServiceDefinitionsList.js";
import { formatResult, ToolDefinition } from "../tools.js";

const args = {
  cursor: z.nullable(z.string()).optional(),
  limit: z.number().int().default(20),
  applicationName: z.string().default("core-api"),
};

export const tool$paymentServiceDefinitionsList: ToolDefinition<typeof args> = {
  name: "payment-service-definitions-list",
  description: `List payment service definitions

List the definitions of each payment service that can be configured.`,
  args,
  tool: async (client, args, ctx) => {
    const [result, apiCall] = await paymentServiceDefinitionsList(
      client,
      args.cursor,
      args.limit,
      args.applicationName,
      { fetchOptions: { signal: ctx.signal } },
    ).$inspect();

    if (!result.ok) {
      return {
        content: [{ type: "text", text: result.error.message }],
        isError: true,
      };
    }

    const value = result.value.result;

    return formatResult(value, apiCall);
  },
};

/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { digitalWalletsSessionsApplePay } from "../../funcs/digitalWalletsSessionsApplePay.js";
import * as components from "../../models/components/index.js";
import { formatResult, ToolDefinition } from "../tools.js";

const args = {
  applePaySessionRequest: components.ApplePaySessionRequest$inboundSchema,
  applicationName: z.string().default("core-api"),
  merchantAccountId: z.nullable(z.string()).optional(),
};

export const tool$digitalWalletsSessionsApplePay: ToolDefinition<typeof args> =
  {
    name: "digital-wallets-sessions-apple-pay",
    description: `Create a Apple Pay session

Create a session for use with Apple Pay.`,
    args,
    tool: async (client, args, ctx) => {
      const [result, apiCall] = await digitalWalletsSessionsApplePay(
        client,
        args.applePaySessionRequest,
        args.applicationName,
        args.merchantAccountId,
        { fetchOptions: { signal: ctx.signal } },
      ).$inspect();

      if (!result.ok) {
        return {
          content: [{ type: "text", text: result.error.message }],
          isError: true,
        };
      }

      const value = result.value;

      return formatResult(value, apiCall);
    },
  };

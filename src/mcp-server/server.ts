/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { McpServer } from "@modelcontextprotocol/sdk/server/mcp.js";
import { Gr4vyCore } from "../core.js";
import { SDKOptions } from "../lib/config.js";
import type { ConsoleLogger } from "./console-logger.js";
import { createRegisterPrompt } from "./prompts.js";
import {
  createRegisterResource,
  createRegisterResourceTemplate,
} from "./resources.js";
import { MCPScope } from "./scopes.js";
import { createRegisterTool } from "./tools.js";
import { tool$accountUpdaterJobsCreate } from "./tools/accountUpdaterJobsCreate.js";
import { tool$auditLogsList } from "./tools/auditLogsList.js";
import { tool$buyersCreate } from "./tools/buyersCreate.js";
import { tool$buyersDelete } from "./tools/buyersDelete.js";
import { tool$buyersGet } from "./tools/buyersGet.js";
import { tool$buyersGiftCardsList } from "./tools/buyersGiftCardsList.js";
import { tool$buyersList } from "./tools/buyersList.js";
import { tool$buyersPaymentMethodsList } from "./tools/buyersPaymentMethodsList.js";
import { tool$buyersShippingDetailsCreate } from "./tools/buyersShippingDetailsCreate.js";
import { tool$buyersShippingDetailsDelete } from "./tools/buyersShippingDetailsDelete.js";
import { tool$buyersShippingDetailsGet } from "./tools/buyersShippingDetailsGet.js";
import { tool$buyersShippingDetailsList } from "./tools/buyersShippingDetailsList.js";
import { tool$buyersShippingDetailsUpdate } from "./tools/buyersShippingDetailsUpdate.js";
import { tool$buyersUpdate } from "./tools/buyersUpdate.js";
import { tool$cardSchemeDefinitionsList } from "./tools/cardSchemeDefinitionsList.js";
import { tool$checkoutSessionsCreate } from "./tools/checkoutSessionsCreate.js";
import { tool$checkoutSessionsDelete } from "./tools/checkoutSessionsDelete.js";
import { tool$checkoutSessionsGet } from "./tools/checkoutSessionsGet.js";
import { tool$checkoutSessionsUpdate } from "./tools/checkoutSessionsUpdate.js";
import { tool$digitalWalletsCreate } from "./tools/digitalWalletsCreate.js";
import { tool$digitalWalletsDelete } from "./tools/digitalWalletsDelete.js";
import { tool$digitalWalletsDomainsCreate } from "./tools/digitalWalletsDomainsCreate.js";
import { tool$digitalWalletsDomainsDelete } from "./tools/digitalWalletsDomainsDelete.js";
import { tool$digitalWalletsGet } from "./tools/digitalWalletsGet.js";
import { tool$digitalWalletsList } from "./tools/digitalWalletsList.js";
import { tool$digitalWalletsSessionsApplePay } from "./tools/digitalWalletsSessionsApplePay.js";
import { tool$digitalWalletsSessionsClickToPay } from "./tools/digitalWalletsSessionsClickToPay.js";
import { tool$digitalWalletsSessionsGooglePay } from "./tools/digitalWalletsSessionsGooglePay.js";
import { tool$digitalWalletsUpdate } from "./tools/digitalWalletsUpdate.js";
import { tool$giftCardsBalancesList } from "./tools/giftCardsBalancesList.js";
import { tool$giftCardsCreate } from "./tools/giftCardsCreate.js";
import { tool$giftCardsDelete } from "./tools/giftCardsDelete.js";
import { tool$giftCardsGet } from "./tools/giftCardsGet.js";
import { tool$giftCardsList } from "./tools/giftCardsList.js";
import { tool$paymentMethodsCreate } from "./tools/paymentMethodsCreate.js";
import { tool$paymentMethodsDelete } from "./tools/paymentMethodsDelete.js";
import { tool$paymentMethodsGet } from "./tools/paymentMethodsGet.js";
import { tool$paymentMethodsList } from "./tools/paymentMethodsList.js";
import { tool$paymentMethodsNetworkTokensCreate } from "./tools/paymentMethodsNetworkTokensCreate.js";
import { tool$paymentMethodsNetworkTokensCryptogramCreate } from "./tools/paymentMethodsNetworkTokensCryptogramCreate.js";
import { tool$paymentMethodsNetworkTokensDelete } from "./tools/paymentMethodsNetworkTokensDelete.js";
import { tool$paymentMethodsNetworkTokensList } from "./tools/paymentMethodsNetworkTokensList.js";
import { tool$paymentMethodsNetworkTokensResume } from "./tools/paymentMethodsNetworkTokensResume.js";
import { tool$paymentMethodsNetworkTokensSuspend } from "./tools/paymentMethodsNetworkTokensSuspend.js";
import { tool$paymentMethodsPaymentServiceTokensCreate } from "./tools/paymentMethodsPaymentServiceTokensCreate.js";
import { tool$paymentMethodsPaymentServiceTokensDelete } from "./tools/paymentMethodsPaymentServiceTokensDelete.js";
import { tool$paymentMethodsPaymentServiceTokensList } from "./tools/paymentMethodsPaymentServiceTokensList.js";
import { tool$paymentOptionsList } from "./tools/paymentOptionsList.js";
import { tool$payoutsCreate } from "./tools/payoutsCreate.js";
import { tool$payoutsGet } from "./tools/payoutsGet.js";
import { tool$payoutsList } from "./tools/payoutsList.js";
import { tool$refundsGet } from "./tools/refundsGet.js";
import { tool$transactionRefundsAllCreate } from "./tools/transactionRefundsAllCreate.js";
import { tool$transactionRefundsCreate } from "./tools/transactionRefundsCreate.js";
import { tool$transactionsCapture } from "./tools/transactionsCapture.js";
import { tool$transactionsCreate } from "./tools/transactionsCreate.js";
import { tool$transactionsGet } from "./tools/transactionsGet.js";
import { tool$transactionsList } from "./tools/transactionsList.js";
import { tool$transactionsRefundsGet } from "./tools/transactionsRefundsGet.js";
import { tool$transactionsRefundsList } from "./tools/transactionsRefundsList.js";
import { tool$transactionsSummary } from "./tools/transactionsSummary.js";
import { tool$transactionsSync } from "./tools/transactionsSync.js";
import { tool$transactionsVoid } from "./tools/transactionsVoid.js";

export function createMCPServer(deps: {
  logger: ConsoleLogger;
  allowedTools?: string[] | undefined;
  scopes?: MCPScope[] | undefined;
  serverURL?: string | undefined;
  bearerAuth?: SDKOptions["bearerAuth"] | undefined;
  merchantAccountId?: SDKOptions["merchantAccountId"] | undefined;
  server?: SDKOptions["server"] | undefined;
  id?: SDKOptions["id"] | undefined;
}) {
  const server = new McpServer({
    name: "Gr4vy",
    version: "0.18.0",
  });

  const client = new Gr4vyCore({
    bearerAuth: deps.bearerAuth,
    merchantAccountId: deps.merchantAccountId,
    serverURL: deps.serverURL,
    server: deps.server,
    id: deps.id,
  });

  const scopes = new Set(deps.scopes);

  const allowedTools = deps.allowedTools && new Set(deps.allowedTools);
  const tool = createRegisterTool(
    deps.logger,
    server,
    client,
    scopes,
    allowedTools,
  );
  const resource = createRegisterResource(deps.logger, server, client, scopes);
  const resourceTemplate = createRegisterResourceTemplate(
    deps.logger,
    server,
    client,
    scopes,
  );
  const prompt = createRegisterPrompt(deps.logger, server, client, scopes);
  const register = { tool, resource, resourceTemplate, prompt };
  void register; // suppress unused warnings

  tool(tool$buyersList);
  tool(tool$buyersCreate);
  tool(tool$buyersGet);
  tool(tool$buyersUpdate);
  tool(tool$buyersDelete);
  tool(tool$paymentMethodsList);
  tool(tool$paymentMethodsCreate);
  tool(tool$paymentMethodsGet);
  tool(tool$paymentMethodsDelete);
  tool(tool$giftCardsGet);
  tool(tool$giftCardsDelete);
  tool(tool$giftCardsCreate);
  tool(tool$giftCardsList);
  tool(tool$cardSchemeDefinitionsList);
  tool(tool$digitalWalletsCreate);
  tool(tool$digitalWalletsList);
  tool(tool$digitalWalletsGet);
  tool(tool$digitalWalletsDelete);
  tool(tool$digitalWalletsUpdate);
  tool(tool$transactionsList);
  tool(tool$transactionsCreate);
  tool(tool$transactionsGet);
  tool(tool$transactionsCapture);
  tool(tool$transactionsVoid);
  tool(tool$transactionsSummary);
  tool(tool$transactionsSync);
  tool(tool$refundsGet);
  tool(tool$paymentOptionsList);
  tool(tool$auditLogsList);
  tool(tool$checkoutSessionsCreate);
  tool(tool$checkoutSessionsUpdate);
  tool(tool$checkoutSessionsGet);
  tool(tool$checkoutSessionsDelete);
  tool(tool$payoutsList);
  tool(tool$payoutsCreate);
  tool(tool$payoutsGet);
  tool(tool$accountUpdaterJobsCreate);
  tool(tool$buyersPaymentMethodsList);
  tool(tool$buyersGiftCardsList);
  tool(tool$buyersShippingDetailsCreate);
  tool(tool$buyersShippingDetailsList);
  tool(tool$buyersShippingDetailsGet);
  tool(tool$buyersShippingDetailsUpdate);
  tool(tool$buyersShippingDetailsDelete);
  tool(tool$paymentMethodsPaymentServiceTokensList);
  tool(tool$paymentMethodsPaymentServiceTokensCreate);
  tool(tool$paymentMethodsPaymentServiceTokensDelete);
  tool(tool$paymentMethodsNetworkTokensList);
  tool(tool$paymentMethodsNetworkTokensCreate);
  tool(tool$paymentMethodsNetworkTokensSuspend);
  tool(tool$paymentMethodsNetworkTokensResume);
  tool(tool$paymentMethodsNetworkTokensDelete);
  tool(tool$giftCardsBalancesList);
  tool(tool$digitalWalletsSessionsGooglePay);
  tool(tool$digitalWalletsSessionsApplePay);
  tool(tool$digitalWalletsSessionsClickToPay);
  tool(tool$digitalWalletsDomainsCreate);
  tool(tool$digitalWalletsDomainsDelete);
  tool(tool$transactionsRefundsList);
  tool(tool$transactionsRefundsGet);
  tool(tool$transactionRefundsCreate);
  tool(tool$paymentMethodsNetworkTokensCryptogramCreate);
  tool(tool$transactionRefundsAllCreate);

  return server;
}

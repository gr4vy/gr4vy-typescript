/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { ClosedEnum } from "../../types/enums.js";
import * as components from "../components/index.js";
import * as z from "zod";

/**
 * `error`.
 */
export const Error429TooManyRequestsType = {
    Error: "error",
} as const;
/**
 * `error`.
 */
export type Error429TooManyRequestsType = ClosedEnum<typeof Error429TooManyRequestsType>;

/**
 * `too_many_requests`.
 */
export const Error429TooManyRequestsCode = {
    TooManyRequests: "too_many_requests",
} as const;
/**
 * `too_many_requests`.
 */
export type Error429TooManyRequestsCode = ClosedEnum<typeof Error429TooManyRequestsCode>;

/**
 * `429`.
 */
export const Error429TooManyRequestsStatus = {
    FourHundredAndTwentyNine: 429,
} as const;
/**
 * `429`.
 */
export type Error429TooManyRequestsStatus = ClosedEnum<typeof Error429TooManyRequestsStatus>;

/**
 * Too Many Requests Error (HTTP 429).
 */
export type Error429TooManyRequestsData = {
    /**
     * `error`.
     */
    type?: Error429TooManyRequestsType | undefined;
    /**
     * `too_many_requests`.
     */
    code?: Error429TooManyRequestsCode | undefined;
    /**
     * `429`.
     */
    status?: Error429TooManyRequestsStatus | undefined;
    /**
     * Further details on the field that triggered the error.
     */
    message?: string | undefined;
    /**
     * A list of detail objects that further clarify the reason for the error.
     *
     * @remarks
     * Not every error supports more detail.
     */
    details?: Array<components.ErrorDetail> | undefined;
};

/**
 * Too Many Requests Error (HTTP 429).
 */
export class Error429TooManyRequests extends Error {
    /**
     * `error`.
     */
    type?: Error429TooManyRequestsType | undefined;
    /**
     * `too_many_requests`.
     */
    code?: Error429TooManyRequestsCode | undefined;
    /**
     * `429`.
     */
    status?: Error429TooManyRequestsStatus | undefined;
    /**
     * A list of detail objects that further clarify the reason for the error.
     *
     * @remarks
     * Not every error supports more detail.
     */
    details?: Array<components.ErrorDetail> | undefined;

    /** The original data that was passed to this error instance. */
    data$: Error429TooManyRequestsData;

    constructor(err: Error429TooManyRequestsData) {
        const message =
            "message" in err && typeof err.message === "string"
                ? err.message
                : `API error occurred: ${JSON.stringify(err)}`;
        super(message);
        this.data$ = err;

        if (err.type != null) {
            this.type = err.type;
        }
        if (err.code != null) {
            this.code = err.code;
        }
        if (err.status != null) {
            this.status = err.status;
        }
        if (err.details != null) {
            this.details = err.details;
        }

        this.name = "Error429TooManyRequests";
    }
}

/** @internal */
export const Error429TooManyRequestsType$inboundSchema: z.ZodNativeEnum<
    typeof Error429TooManyRequestsType
> = z.nativeEnum(Error429TooManyRequestsType);

/** @internal */
export const Error429TooManyRequestsType$outboundSchema: z.ZodNativeEnum<
    typeof Error429TooManyRequestsType
> = Error429TooManyRequestsType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Error429TooManyRequestsType$ {
    /** @deprecated use `Error429TooManyRequestsType$inboundSchema` instead. */
    export const inboundSchema = Error429TooManyRequestsType$inboundSchema;
    /** @deprecated use `Error429TooManyRequestsType$outboundSchema` instead. */
    export const outboundSchema = Error429TooManyRequestsType$outboundSchema;
}

/** @internal */
export const Error429TooManyRequestsCode$inboundSchema: z.ZodNativeEnum<
    typeof Error429TooManyRequestsCode
> = z.nativeEnum(Error429TooManyRequestsCode);

/** @internal */
export const Error429TooManyRequestsCode$outboundSchema: z.ZodNativeEnum<
    typeof Error429TooManyRequestsCode
> = Error429TooManyRequestsCode$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Error429TooManyRequestsCode$ {
    /** @deprecated use `Error429TooManyRequestsCode$inboundSchema` instead. */
    export const inboundSchema = Error429TooManyRequestsCode$inboundSchema;
    /** @deprecated use `Error429TooManyRequestsCode$outboundSchema` instead. */
    export const outboundSchema = Error429TooManyRequestsCode$outboundSchema;
}

/** @internal */
export const Error429TooManyRequestsStatus$inboundSchema: z.ZodNativeEnum<
    typeof Error429TooManyRequestsStatus
> = z.nativeEnum(Error429TooManyRequestsStatus);

/** @internal */
export const Error429TooManyRequestsStatus$outboundSchema: z.ZodNativeEnum<
    typeof Error429TooManyRequestsStatus
> = Error429TooManyRequestsStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Error429TooManyRequestsStatus$ {
    /** @deprecated use `Error429TooManyRequestsStatus$inboundSchema` instead. */
    export const inboundSchema = Error429TooManyRequestsStatus$inboundSchema;
    /** @deprecated use `Error429TooManyRequestsStatus$outboundSchema` instead. */
    export const outboundSchema = Error429TooManyRequestsStatus$outboundSchema;
}

/** @internal */
export const Error429TooManyRequests$inboundSchema: z.ZodType<
    Error429TooManyRequests,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        type: Error429TooManyRequestsType$inboundSchema.optional(),
        code: Error429TooManyRequestsCode$inboundSchema.optional(),
        status: Error429TooManyRequestsStatus$inboundSchema.optional(),
        message: z.string().optional(),
        details: z.array(components.ErrorDetail$inboundSchema).optional(),
    })
    .transform((v) => {
        return new Error429TooManyRequests(v);
    });

/** @internal */
export type Error429TooManyRequests$Outbound = {
    type?: string | undefined;
    code?: string | undefined;
    status?: number | undefined;
    message?: string | undefined;
    details?: Array<components.ErrorDetail$Outbound> | undefined;
};

/** @internal */
export const Error429TooManyRequests$outboundSchema: z.ZodType<
    Error429TooManyRequests$Outbound,
    z.ZodTypeDef,
    Error429TooManyRequests
> = z
    .instanceof(Error429TooManyRequests)
    .transform((v) => v.data$)
    .pipe(
        z.object({
            type: Error429TooManyRequestsType$outboundSchema.optional(),
            code: Error429TooManyRequestsCode$outboundSchema.optional(),
            status: Error429TooManyRequestsStatus$outboundSchema.optional(),
            message: z.string().optional(),
            details: z.array(components.ErrorDetail$outboundSchema).optional(),
        })
    );

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Error429TooManyRequests$ {
    /** @deprecated use `Error429TooManyRequests$inboundSchema` instead. */
    export const inboundSchema = Error429TooManyRequests$inboundSchema;
    /** @deprecated use `Error429TooManyRequests$outboundSchema` instead. */
    export const outboundSchema = Error429TooManyRequests$outboundSchema;
    /** @deprecated use `Error429TooManyRequests$Outbound` instead. */
    export type Outbound = Error429TooManyRequests$Outbound;
}

/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { ClosedEnum } from "../../types/enums.js";
import * as components from "../components/index.js";
import * as z from "zod";

/**
 * `error`.
 */
export const Error409DuplicateRecordType = {
    Error: "error",
} as const;
/**
 * `error`.
 */
export type Error409DuplicateRecordType = ClosedEnum<typeof Error409DuplicateRecordType>;

/**
 * `duplicate_record`.
 */
export const Error409DuplicateRecordCode = {
    DuplicateRecord: "duplicate_record",
} as const;
/**
 * `duplicate_record`.
 */
export type Error409DuplicateRecordCode = ClosedEnum<typeof Error409DuplicateRecordCode>;

/**
 * `409`.
 */
export const Error409DuplicateRecordStatus = {
    FourHundredAndNine: 409,
} as const;
/**
 * `409`.
 */
export type Error409DuplicateRecordStatus = ClosedEnum<typeof Error409DuplicateRecordStatus>;

/**
 * Duplicate Record Error (HTTP 409).
 */
export type Error409DuplicateRecordData = {
    /**
     * `error`.
     */
    type?: Error409DuplicateRecordType | undefined;
    /**
     * `duplicate_record`.
     */
    code?: Error409DuplicateRecordCode | undefined;
    /**
     * `409`.
     */
    status?: Error409DuplicateRecordStatus | undefined;
    /**
     * Further details on the field that triggered the error.
     */
    message?: string | undefined;
    /**
     * A list of detail objects that further clarify the reason for the error.
     *
     * @remarks
     * Not every error supports more detail.
     */
    details?: Array<components.ErrorDetail> | undefined;
};

/**
 * Duplicate Record Error (HTTP 409).
 */
export class Error409DuplicateRecord extends Error {
    /**
     * `error`.
     */
    type?: Error409DuplicateRecordType | undefined;
    /**
     * `duplicate_record`.
     */
    code?: Error409DuplicateRecordCode | undefined;
    /**
     * `409`.
     */
    status?: Error409DuplicateRecordStatus | undefined;
    /**
     * A list of detail objects that further clarify the reason for the error.
     *
     * @remarks
     * Not every error supports more detail.
     */
    details?: Array<components.ErrorDetail> | undefined;

    /** The original data that was passed to this error instance. */
    data$: Error409DuplicateRecordData;

    constructor(err: Error409DuplicateRecordData) {
        const message =
            "message" in err && typeof err.message === "string"
                ? err.message
                : `API error occurred: ${JSON.stringify(err)}`;
        super(message);
        this.data$ = err;

        if (err.type != null) {
            this.type = err.type;
        }
        if (err.code != null) {
            this.code = err.code;
        }
        if (err.status != null) {
            this.status = err.status;
        }
        if (err.details != null) {
            this.details = err.details;
        }

        this.name = "Error409DuplicateRecord";
    }
}

/** @internal */
export const Error409DuplicateRecordType$inboundSchema: z.ZodNativeEnum<
    typeof Error409DuplicateRecordType
> = z.nativeEnum(Error409DuplicateRecordType);

/** @internal */
export const Error409DuplicateRecordType$outboundSchema: z.ZodNativeEnum<
    typeof Error409DuplicateRecordType
> = Error409DuplicateRecordType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Error409DuplicateRecordType$ {
    /** @deprecated use `Error409DuplicateRecordType$inboundSchema` instead. */
    export const inboundSchema = Error409DuplicateRecordType$inboundSchema;
    /** @deprecated use `Error409DuplicateRecordType$outboundSchema` instead. */
    export const outboundSchema = Error409DuplicateRecordType$outboundSchema;
}

/** @internal */
export const Error409DuplicateRecordCode$inboundSchema: z.ZodNativeEnum<
    typeof Error409DuplicateRecordCode
> = z.nativeEnum(Error409DuplicateRecordCode);

/** @internal */
export const Error409DuplicateRecordCode$outboundSchema: z.ZodNativeEnum<
    typeof Error409DuplicateRecordCode
> = Error409DuplicateRecordCode$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Error409DuplicateRecordCode$ {
    /** @deprecated use `Error409DuplicateRecordCode$inboundSchema` instead. */
    export const inboundSchema = Error409DuplicateRecordCode$inboundSchema;
    /** @deprecated use `Error409DuplicateRecordCode$outboundSchema` instead. */
    export const outboundSchema = Error409DuplicateRecordCode$outboundSchema;
}

/** @internal */
export const Error409DuplicateRecordStatus$inboundSchema: z.ZodNativeEnum<
    typeof Error409DuplicateRecordStatus
> = z.nativeEnum(Error409DuplicateRecordStatus);

/** @internal */
export const Error409DuplicateRecordStatus$outboundSchema: z.ZodNativeEnum<
    typeof Error409DuplicateRecordStatus
> = Error409DuplicateRecordStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Error409DuplicateRecordStatus$ {
    /** @deprecated use `Error409DuplicateRecordStatus$inboundSchema` instead. */
    export const inboundSchema = Error409DuplicateRecordStatus$inboundSchema;
    /** @deprecated use `Error409DuplicateRecordStatus$outboundSchema` instead. */
    export const outboundSchema = Error409DuplicateRecordStatus$outboundSchema;
}

/** @internal */
export const Error409DuplicateRecord$inboundSchema: z.ZodType<
    Error409DuplicateRecord,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        type: Error409DuplicateRecordType$inboundSchema.optional(),
        code: Error409DuplicateRecordCode$inboundSchema.optional(),
        status: Error409DuplicateRecordStatus$inboundSchema.optional(),
        message: z.string().optional(),
        details: z.array(components.ErrorDetail$inboundSchema).optional(),
    })
    .transform((v) => {
        return new Error409DuplicateRecord(v);
    });

/** @internal */
export type Error409DuplicateRecord$Outbound = {
    type?: string | undefined;
    code?: string | undefined;
    status?: number | undefined;
    message?: string | undefined;
    details?: Array<components.ErrorDetail$Outbound> | undefined;
};

/** @internal */
export const Error409DuplicateRecord$outboundSchema: z.ZodType<
    Error409DuplicateRecord$Outbound,
    z.ZodTypeDef,
    Error409DuplicateRecord
> = z
    .instanceof(Error409DuplicateRecord)
    .transform((v) => v.data$)
    .pipe(
        z.object({
            type: Error409DuplicateRecordType$outboundSchema.optional(),
            code: Error409DuplicateRecordCode$outboundSchema.optional(),
            status: Error409DuplicateRecordStatus$outboundSchema.optional(),
            message: z.string().optional(),
            details: z.array(components.ErrorDetail$outboundSchema).optional(),
        })
    );

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Error409DuplicateRecord$ {
    /** @deprecated use `Error409DuplicateRecord$inboundSchema` instead. */
    export const inboundSchema = Error409DuplicateRecord$inboundSchema;
    /** @deprecated use `Error409DuplicateRecord$outboundSchema` instead. */
    export const outboundSchema = Error409DuplicateRecord$outboundSchema;
    /** @deprecated use `Error409DuplicateRecord$Outbound` instead. */
    export type Outbound = Error409DuplicateRecord$Outbound;
}

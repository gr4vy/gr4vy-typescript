/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import {
  Error403,
  Error403$inboundSchema,
  Error403$Outbound,
  Error403$outboundSchema,
} from "./error403.js";
import {
  Error403Active,
  Error403Active$inboundSchema,
  Error403Active$Outbound,
  Error403Active$outboundSchema,
} from "./error403active.js";
import {
  Error403Forbidden,
  Error403Forbidden$inboundSchema,
  Error403Forbidden$Outbound,
  Error403Forbidden$outboundSchema,
} from "./error403forbidden.js";
import { SDKValidationError } from "./sdkvalidationerror.js";

/**
 * The credentials were invalid or the caller did not have permission to act on the resource.
 */
export type GetTransactionRefundResponse403GetTransactionRefund =
  | Error403
  | Error403Forbidden
  | Error403Active;

/** @internal */
export const GetTransactionRefundResponse403GetTransactionRefund$inboundSchema:
  z.ZodType<
    GetTransactionRefundResponse403GetTransactionRefund,
    z.ZodTypeDef,
    unknown
  > = z.union([
    Error403$inboundSchema,
    Error403Forbidden$inboundSchema,
    Error403Active$inboundSchema,
  ]);

/** @internal */
export type GetTransactionRefundResponse403GetTransactionRefund$Outbound =
  | Error403$Outbound
  | Error403Forbidden$Outbound
  | Error403Active$Outbound;

/** @internal */
export const GetTransactionRefundResponse403GetTransactionRefund$outboundSchema:
  z.ZodType<
    GetTransactionRefundResponse403GetTransactionRefund$Outbound,
    z.ZodTypeDef,
    GetTransactionRefundResponse403GetTransactionRefund
  > = z.union([
    Error403$outboundSchema,
    Error403Forbidden$outboundSchema,
    Error403Active$outboundSchema,
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetTransactionRefundResponse403GetTransactionRefund$ {
  /** @deprecated use `GetTransactionRefundResponse403GetTransactionRefund$inboundSchema` instead. */
  export const inboundSchema =
    GetTransactionRefundResponse403GetTransactionRefund$inboundSchema;
  /** @deprecated use `GetTransactionRefundResponse403GetTransactionRefund$outboundSchema` instead. */
  export const outboundSchema =
    GetTransactionRefundResponse403GetTransactionRefund$outboundSchema;
  /** @deprecated use `GetTransactionRefundResponse403GetTransactionRefund$Outbound` instead. */
  export type Outbound =
    GetTransactionRefundResponse403GetTransactionRefund$Outbound;
}

export function getTransactionRefundResponse403GetTransactionRefundToJSON(
  getTransactionRefundResponse403GetTransactionRefund:
    GetTransactionRefundResponse403GetTransactionRefund,
): string {
  return JSON.stringify(
    GetTransactionRefundResponse403GetTransactionRefund$outboundSchema.parse(
      getTransactionRefundResponse403GetTransactionRefund,
    ),
  );
}

export function getTransactionRefundResponse403GetTransactionRefundFromJSON(
  jsonString: string,
): SafeParseResult<
  GetTransactionRefundResponse403GetTransactionRefund,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetTransactionRefundResponse403GetTransactionRefund$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'GetTransactionRefundResponse403GetTransactionRefund' from JSON`,
  );
}

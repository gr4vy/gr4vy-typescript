/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as z from "zod";

/**
 * Request body for provision a network token.
 */
export type NetworkTokenRequest = {
    /**
     * The 3 or 4 digit security code often found on the card. This often
     *
     * @remarks
     * referred to as the CVV or CVD.
     *
     * The security code can only be set if the stored payment method
     * represents a card.
     */
    securityCode?: string | undefined;
    /**
     * Defines if the request is merchant initiated or not.
     */
    merchantInitiated: boolean;
    /**
     * Defines if the request is a subsequent of another request or not.
     */
    isSubsequentPayment: boolean;
};

/** @internal */
export namespace NetworkTokenRequest$ {
    export type Inbound = {
        security_code?: string | undefined;
        merchant_initiated: boolean;
        is_subsequent_payment: boolean;
    };

    export const inboundSchema: z.ZodType<NetworkTokenRequest, z.ZodTypeDef, Inbound> = z
        .object({
            security_code: z.string().optional(),
            merchant_initiated: z.boolean(),
            is_subsequent_payment: z.boolean(),
        })
        .transform((v) => {
            return {
                ...(v.security_code === undefined ? null : { securityCode: v.security_code }),
                merchantInitiated: v.merchant_initiated,
                isSubsequentPayment: v.is_subsequent_payment,
            };
        });

    export type Outbound = {
        security_code?: string | undefined;
        merchant_initiated: boolean;
        is_subsequent_payment: boolean;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, NetworkTokenRequest> = z
        .object({
            securityCode: z.string().optional(),
            merchantInitiated: z.boolean(),
            isSubsequentPayment: z.boolean(),
        })
        .transform((v) => {
            return {
                ...(v.securityCode === undefined ? null : { security_code: v.securityCode }),
                merchant_initiated: v.merchantInitiated,
                is_subsequent_payment: v.isSubsequentPayment,
            };
        });
}

/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives.js";
import { ClosedEnum } from "../../types/enums.js";
import {
    ApiRoutersAntiFraudServicesSchemasField,
    ApiRoutersAntiFraudServicesSchemasField$inboundSchema,
    ApiRoutersAntiFraudServicesSchemasField$Outbound,
    ApiRoutersAntiFraudServicesSchemasField$outboundSchema,
} from "./apiroutersantifraudservicesschemasfield.js";
import * as z from "zod";

export const AntiFraudServiceDefinitionId = {
    CybersourceAntiFraud: "cybersource-anti-fraud",
} as const;
export type AntiFraudServiceDefinitionId = ClosedEnum<typeof AntiFraudServiceDefinitionId>;

/**
 * Base model with JSON encoders.
 */
export type CyberSourceUpdate = {
    fields?: Array<ApiRoutersAntiFraudServicesSchemasField> | undefined;
    antiFraudServiceDefinitionId?: AntiFraudServiceDefinitionId | undefined;
    displayName?: string | undefined;
    active?: boolean | undefined;
    reviewsEnabled?: boolean | undefined;
};

/** @internal */
export const AntiFraudServiceDefinitionId$inboundSchema: z.ZodNativeEnum<
    typeof AntiFraudServiceDefinitionId
> = z.nativeEnum(AntiFraudServiceDefinitionId);

/** @internal */
export const AntiFraudServiceDefinitionId$outboundSchema: z.ZodNativeEnum<
    typeof AntiFraudServiceDefinitionId
> = AntiFraudServiceDefinitionId$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AntiFraudServiceDefinitionId$ {
    /** @deprecated use `AntiFraudServiceDefinitionId$inboundSchema` instead. */
    export const inboundSchema = AntiFraudServiceDefinitionId$inboundSchema;
    /** @deprecated use `AntiFraudServiceDefinitionId$outboundSchema` instead. */
    export const outboundSchema = AntiFraudServiceDefinitionId$outboundSchema;
}

/** @internal */
export const CyberSourceUpdate$inboundSchema: z.ZodType<CyberSourceUpdate, z.ZodTypeDef, unknown> =
    z
        .object({
            fields: z.array(ApiRoutersAntiFraudServicesSchemasField$inboundSchema).optional(),
            anti_fraud_service_definition_id:
                AntiFraudServiceDefinitionId$inboundSchema.default("cybersource-anti-fraud"),
            display_name: z.string().optional(),
            active: z.boolean().optional(),
            reviews_enabled: z.boolean().optional(),
        })
        .transform((v) => {
            return remap$(v, {
                anti_fraud_service_definition_id: "antiFraudServiceDefinitionId",
                display_name: "displayName",
                reviews_enabled: "reviewsEnabled",
            });
        });

/** @internal */
export type CyberSourceUpdate$Outbound = {
    fields?: Array<ApiRoutersAntiFraudServicesSchemasField$Outbound> | undefined;
    anti_fraud_service_definition_id: string;
    display_name?: string | undefined;
    active?: boolean | undefined;
    reviews_enabled?: boolean | undefined;
};

/** @internal */
export const CyberSourceUpdate$outboundSchema: z.ZodType<
    CyberSourceUpdate$Outbound,
    z.ZodTypeDef,
    CyberSourceUpdate
> = z
    .object({
        fields: z.array(ApiRoutersAntiFraudServicesSchemasField$outboundSchema).optional(),
        antiFraudServiceDefinitionId:
            AntiFraudServiceDefinitionId$outboundSchema.default("cybersource-anti-fraud"),
        displayName: z.string().optional(),
        active: z.boolean().optional(),
        reviewsEnabled: z.boolean().optional(),
    })
    .transform((v) => {
        return remap$(v, {
            antiFraudServiceDefinitionId: "anti_fraud_service_definition_id",
            displayName: "display_name",
            reviewsEnabled: "reviews_enabled",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CyberSourceUpdate$ {
    /** @deprecated use `CyberSourceUpdate$inboundSchema` instead. */
    export const inboundSchema = CyberSourceUpdate$inboundSchema;
    /** @deprecated use `CyberSourceUpdate$outboundSchema` instead. */
    export const outboundSchema = CyberSourceUpdate$outboundSchema;
    /** @deprecated use `CyberSourceUpdate$Outbound` instead. */
    export type Outbound = CyberSourceUpdate$Outbound;
}

/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives";
import * as z from "zod";

/**
 * A key-value pair that represents a field defined in the definition for this gift card service.
 */
export type GiftCardServiceUpdateRequestFields = {
    /**
     * The key of the field to set a value for.
     */
    key: string;
    /**
     * The value of a field to set; you can unset optional fields by setting this to an empty string `""`.
     */
    value: string;
};

/**
 * Request body for updating a gift card service.
 */
export type GiftCardServiceUpdateRequest = {
    /**
     * A custom name for the gift card service. This will be shown in the Admin UI.
     */
    displayName?: string | undefined;
    /**
     * A list of fields, each containing a key-value pair for each field defined
     *
     * @remarks
     * by the definition for this gift card service.
     */
    fields?: Array<GiftCardServiceUpdateRequestFields> | undefined;
    /**
     * Defines if this service is currently active or not.
     */
    active?: boolean | undefined;
};

/** @internal */
export namespace GiftCardServiceUpdateRequestFields$ {
    export const inboundSchema: z.ZodType<
        GiftCardServiceUpdateRequestFields,
        z.ZodTypeDef,
        unknown
    > = z.object({
        key: z.string(),
        value: z.string(),
    });

    export type Outbound = {
        key: string;
        value: string;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        GiftCardServiceUpdateRequestFields
    > = z.object({
        key: z.string(),
        value: z.string(),
    });
}

/** @internal */
export namespace GiftCardServiceUpdateRequest$ {
    export const inboundSchema: z.ZodType<GiftCardServiceUpdateRequest, z.ZodTypeDef, unknown> = z
        .object({
            display_name: z.string().optional(),
            fields: z
                .array(z.lazy(() => GiftCardServiceUpdateRequestFields$.inboundSchema))
                .optional(),
            active: z.boolean().optional(),
        })
        .transform((v) => {
            return remap$(v, {
                display_name: "displayName",
            });
        });

    export type Outbound = {
        display_name?: string | undefined;
        fields?: Array<GiftCardServiceUpdateRequestFields$.Outbound> | undefined;
        active?: boolean | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, GiftCardServiceUpdateRequest> = z
        .object({
            displayName: z.string().optional(),
            fields: z
                .array(z.lazy(() => GiftCardServiceUpdateRequestFields$.outboundSchema))
                .optional(),
            active: z.boolean().optional(),
        })
        .transform((v) => {
            return remap$(v, {
                displayName: "display_name",
            });
        });
}

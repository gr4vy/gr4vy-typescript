/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives.js";
import * as z from "zod";

/**
 * Base model with JSON encoders.
 */
export type ApplePaySession = {
    validationUrl: string;
    domainName: string;
};

/** @internal */
export const ApplePaySession$inboundSchema: z.ZodType<ApplePaySession, z.ZodTypeDef, unknown> = z
    .object({
        validation_url: z.string(),
        domain_name: z.string(),
    })
    .transform((v) => {
        return remap$(v, {
            validation_url: "validationUrl",
            domain_name: "domainName",
        });
    });

/** @internal */
export type ApplePaySession$Outbound = {
    validation_url: string;
    domain_name: string;
};

/** @internal */
export const ApplePaySession$outboundSchema: z.ZodType<
    ApplePaySession$Outbound,
    z.ZodTypeDef,
    ApplePaySession
> = z
    .object({
        validationUrl: z.string(),
        domainName: z.string(),
    })
    .transform((v) => {
        return remap$(v, {
            validationUrl: "validation_url",
            domainName: "domain_name",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ApplePaySession$ {
    /** @deprecated use `ApplePaySession$inboundSchema` instead. */
    export const inboundSchema = ApplePaySession$inboundSchema;
    /** @deprecated use `ApplePaySession$outboundSchema` instead. */
    export const outboundSchema = ApplePaySession$outboundSchema;
    /** @deprecated use `ApplePaySession$Outbound` instead. */
    export type Outbound = ApplePaySession$Outbound;
}

/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import {
    FlowRule,
    FlowRule$inboundSchema,
    FlowRule$Outbound,
    FlowRule$outboundSchema,
} from "./flowrule.js";
import * as z from "zod";

/**
 * A list of rule in a flow.
 */
export type FlowRules = {
    /**
     * A list of rules.
     */
    items?: Array<FlowRule> | undefined;
};

/** @internal */
export const FlowRules$inboundSchema: z.ZodType<FlowRules, z.ZodTypeDef, unknown> = z.object({
    items: z.array(FlowRule$inboundSchema).optional(),
});

/** @internal */
export type FlowRules$Outbound = {
    items?: Array<FlowRule$Outbound> | undefined;
};

/** @internal */
export const FlowRules$outboundSchema: z.ZodType<FlowRules$Outbound, z.ZodTypeDef, FlowRules> =
    z.object({
        items: z.array(FlowRule$outboundSchema).optional(),
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FlowRules$ {
    /** @deprecated use `FlowRules$inboundSchema` instead. */
    export const inboundSchema = FlowRules$inboundSchema;
    /** @deprecated use `FlowRules$outboundSchema` instead. */
    export const outboundSchema = FlowRules$outboundSchema;
    /** @deprecated use `FlowRules$Outbound` instead. */
    export type Outbound = FlowRules$Outbound;
}

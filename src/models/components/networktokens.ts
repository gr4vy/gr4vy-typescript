/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod/v3";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  NetworkToken,
  NetworkToken$inboundSchema,
  NetworkToken$Outbound,
  NetworkToken$outboundSchema,
} from "./networktoken.js";

export type NetworkTokens = {
  /**
   * A list of items returned for this request.
   */
  items: Array<NetworkToken>;
};

/** @internal */
export const NetworkTokens$inboundSchema: z.ZodType<
  NetworkTokens,
  z.ZodTypeDef,
  unknown
> = z.object({
  items: z.array(NetworkToken$inboundSchema),
});

/** @internal */
export type NetworkTokens$Outbound = {
  items: Array<NetworkToken$Outbound>;
};

/** @internal */
export const NetworkTokens$outboundSchema: z.ZodType<
  NetworkTokens$Outbound,
  z.ZodTypeDef,
  NetworkTokens
> = z.object({
  items: z.array(NetworkToken$outboundSchema),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace NetworkTokens$ {
  /** @deprecated use `NetworkTokens$inboundSchema` instead. */
  export const inboundSchema = NetworkTokens$inboundSchema;
  /** @deprecated use `NetworkTokens$outboundSchema` instead. */
  export const outboundSchema = NetworkTokens$outboundSchema;
  /** @deprecated use `NetworkTokens$Outbound` instead. */
  export type Outbound = NetworkTokens$Outbound;
}

export function networkTokensToJSON(networkTokens: NetworkTokens): string {
  return JSON.stringify(NetworkTokens$outboundSchema.parse(networkTokens));
}

export function networkTokensFromJSON(
  jsonString: string,
): SafeParseResult<NetworkTokens, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => NetworkTokens$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'NetworkTokens' from JSON`,
  );
}

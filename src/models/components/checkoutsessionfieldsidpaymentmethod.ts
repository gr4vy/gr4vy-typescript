/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives.js";
import { ClosedEnum } from "../../types/enums.js";
import * as z from "zod";

/**
 * `id`.
 */
export const CheckoutSessionFieldsIdPaymentMethodMethod = {
    Id: "id",
} as const;
/**
 * `id`.
 */
export type CheckoutSessionFieldsIdPaymentMethodMethod = ClosedEnum<
    typeof CheckoutSessionFieldsIdPaymentMethodMethod
>;

/**
 * Details to use a stored card payment method.
 */
export type CheckoutSessionFieldsIdPaymentMethod = {
    /**
     * `id`.
     */
    method: CheckoutSessionFieldsIdPaymentMethodMethod;
    /**
     * The unique ID of the payment method.
     */
    id: string;
    /**
     * The 3 or 4 digit security code often found on the card. This often
     *
     * @remarks
     * referred to as the CVV or CVD.
     *
     * The security code can only be set if the stored payment method
     * represents a card.
     */
    securityCode?: string | null | undefined;
};

/** @internal */
export const CheckoutSessionFieldsIdPaymentMethodMethod$inboundSchema: z.ZodNativeEnum<
    typeof CheckoutSessionFieldsIdPaymentMethodMethod
> = z.nativeEnum(CheckoutSessionFieldsIdPaymentMethodMethod);

/** @internal */
export const CheckoutSessionFieldsIdPaymentMethodMethod$outboundSchema: z.ZodNativeEnum<
    typeof CheckoutSessionFieldsIdPaymentMethodMethod
> = CheckoutSessionFieldsIdPaymentMethodMethod$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CheckoutSessionFieldsIdPaymentMethodMethod$ {
    /** @deprecated use `CheckoutSessionFieldsIdPaymentMethodMethod$inboundSchema` instead. */
    export const inboundSchema = CheckoutSessionFieldsIdPaymentMethodMethod$inboundSchema;
    /** @deprecated use `CheckoutSessionFieldsIdPaymentMethodMethod$outboundSchema` instead. */
    export const outboundSchema = CheckoutSessionFieldsIdPaymentMethodMethod$outboundSchema;
}

/** @internal */
export const CheckoutSessionFieldsIdPaymentMethod$inboundSchema: z.ZodType<
    CheckoutSessionFieldsIdPaymentMethod,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        method: CheckoutSessionFieldsIdPaymentMethodMethod$inboundSchema,
        id: z.string(),
        security_code: z.nullable(z.string()).optional(),
    })
    .transform((v) => {
        return remap$(v, {
            security_code: "securityCode",
        });
    });

/** @internal */
export type CheckoutSessionFieldsIdPaymentMethod$Outbound = {
    method: string;
    id: string;
    security_code?: string | null | undefined;
};

/** @internal */
export const CheckoutSessionFieldsIdPaymentMethod$outboundSchema: z.ZodType<
    CheckoutSessionFieldsIdPaymentMethod$Outbound,
    z.ZodTypeDef,
    CheckoutSessionFieldsIdPaymentMethod
> = z
    .object({
        method: CheckoutSessionFieldsIdPaymentMethodMethod$outboundSchema,
        id: z.string(),
        securityCode: z.nullable(z.string()).optional(),
    })
    .transform((v) => {
        return remap$(v, {
            securityCode: "security_code",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CheckoutSessionFieldsIdPaymentMethod$ {
    /** @deprecated use `CheckoutSessionFieldsIdPaymentMethod$inboundSchema` instead. */
    export const inboundSchema = CheckoutSessionFieldsIdPaymentMethod$inboundSchema;
    /** @deprecated use `CheckoutSessionFieldsIdPaymentMethod$outboundSchema` instead. */
    export const outboundSchema = CheckoutSessionFieldsIdPaymentMethod$outboundSchema;
    /** @deprecated use `CheckoutSessionFieldsIdPaymentMethod$Outbound` instead. */
    export type Outbound = CheckoutSessionFieldsIdPaymentMethod$Outbound;
}

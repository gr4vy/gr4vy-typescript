/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import {
    FlowCardTransactionRoutingOutcome,
    FlowCardTransactionRoutingOutcome$inboundSchema,
    FlowCardTransactionRoutingOutcome$Outbound,
    FlowCardTransactionRoutingOutcome$outboundSchema,
} from "./flowcardtransactionroutingoutcome.js";
import {
    FlowPaymentOptionOutcome,
    FlowPaymentOptionOutcome$inboundSchema,
    FlowPaymentOptionOutcome$Outbound,
    FlowPaymentOptionOutcome$outboundSchema,
} from "./flowpaymentoptionoutcome.js";
import {
    FlowRedirectTransactionRoutingOutcome,
    FlowRedirectTransactionRoutingOutcome$inboundSchema,
    FlowRedirectTransactionRoutingOutcome$Outbound,
    FlowRedirectTransactionRoutingOutcome$outboundSchema,
} from "./flowredirecttransactionroutingoutcome.js";
import * as z from "zod";

export type FlowRuleOutcomesItems =
    | FlowPaymentOptionOutcome
    | FlowRedirectTransactionRoutingOutcome
    | FlowCardTransactionRoutingOutcome;

/**
 * Defines the outcome of a rule in a flow.
 *
 * @remarks
 * Currently the outcomes can be a boolean value, or a list of string
 * values. The meaning of this outcome depends on the `action` this rule
 * is triggered for.
 */
export type FlowRuleOutcomes = {
    /**
     * A list of outcomes.
     */
    items?:
        | Array<
              | FlowPaymentOptionOutcome
              | FlowRedirectTransactionRoutingOutcome
              | FlowCardTransactionRoutingOutcome
          >
        | undefined;
};

/** @internal */
export const FlowRuleOutcomesItems$inboundSchema: z.ZodType<
    FlowRuleOutcomesItems,
    z.ZodTypeDef,
    unknown
> = z.union([
    FlowPaymentOptionOutcome$inboundSchema,
    FlowRedirectTransactionRoutingOutcome$inboundSchema,
    FlowCardTransactionRoutingOutcome$inboundSchema,
]);

/** @internal */
export type FlowRuleOutcomesItems$Outbound =
    | FlowPaymentOptionOutcome$Outbound
    | FlowRedirectTransactionRoutingOutcome$Outbound
    | FlowCardTransactionRoutingOutcome$Outbound;

/** @internal */
export const FlowRuleOutcomesItems$outboundSchema: z.ZodType<
    FlowRuleOutcomesItems$Outbound,
    z.ZodTypeDef,
    FlowRuleOutcomesItems
> = z.union([
    FlowPaymentOptionOutcome$outboundSchema,
    FlowRedirectTransactionRoutingOutcome$outboundSchema,
    FlowCardTransactionRoutingOutcome$outboundSchema,
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FlowRuleOutcomesItems$ {
    /** @deprecated use `FlowRuleOutcomesItems$inboundSchema` instead. */
    export const inboundSchema = FlowRuleOutcomesItems$inboundSchema;
    /** @deprecated use `FlowRuleOutcomesItems$outboundSchema` instead. */
    export const outboundSchema = FlowRuleOutcomesItems$outboundSchema;
    /** @deprecated use `FlowRuleOutcomesItems$Outbound` instead. */
    export type Outbound = FlowRuleOutcomesItems$Outbound;
}

/** @internal */
export const FlowRuleOutcomes$inboundSchema: z.ZodType<FlowRuleOutcomes, z.ZodTypeDef, unknown> =
    z.object({
        items: z
            .array(
                z.union([
                    FlowPaymentOptionOutcome$inboundSchema,
                    FlowRedirectTransactionRoutingOutcome$inboundSchema,
                    FlowCardTransactionRoutingOutcome$inboundSchema,
                ])
            )
            .optional(),
    });

/** @internal */
export type FlowRuleOutcomes$Outbound = {
    items?:
        | Array<
              | FlowPaymentOptionOutcome$Outbound
              | FlowRedirectTransactionRoutingOutcome$Outbound
              | FlowCardTransactionRoutingOutcome$Outbound
          >
        | undefined;
};

/** @internal */
export const FlowRuleOutcomes$outboundSchema: z.ZodType<
    FlowRuleOutcomes$Outbound,
    z.ZodTypeDef,
    FlowRuleOutcomes
> = z.object({
    items: z
        .array(
            z.union([
                FlowPaymentOptionOutcome$outboundSchema,
                FlowRedirectTransactionRoutingOutcome$outboundSchema,
                FlowCardTransactionRoutingOutcome$outboundSchema,
            ])
        )
        .optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FlowRuleOutcomes$ {
    /** @deprecated use `FlowRuleOutcomes$inboundSchema` instead. */
    export const inboundSchema = FlowRuleOutcomes$inboundSchema;
    /** @deprecated use `FlowRuleOutcomes$outboundSchema` instead. */
    export const outboundSchema = FlowRuleOutcomes$outboundSchema;
    /** @deprecated use `FlowRuleOutcomes$Outbound` instead. */
    export type Outbound = FlowRuleOutcomes$Outbound;
}

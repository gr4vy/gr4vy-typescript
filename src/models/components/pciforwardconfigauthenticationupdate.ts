/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives.js";
import {
    ApiRoutersPciForwardSchemasVoidableField,
    ApiRoutersPciForwardSchemasVoidableField$inboundSchema,
    ApiRoutersPciForwardSchemasVoidableField$Outbound,
    ApiRoutersPciForwardSchemasVoidableField$outboundSchema,
} from "./apirouterspciforwardschemasvoidablefield.js";
import * as z from "zod";

/**
 * Base model with JSON encoders.
 */
export type PCIForwardConfigAuthenticationUpdate = {
    displayName?: string | undefined;
    fields?: Array<ApiRoutersPciForwardSchemasVoidableField> | undefined;
};

/** @internal */
export const PCIForwardConfigAuthenticationUpdate$inboundSchema: z.ZodType<
    PCIForwardConfigAuthenticationUpdate,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        display_name: z.string().optional(),
        fields: z.array(ApiRoutersPciForwardSchemasVoidableField$inboundSchema).optional(),
    })
    .transform((v) => {
        return remap$(v, {
            display_name: "displayName",
        });
    });

/** @internal */
export type PCIForwardConfigAuthenticationUpdate$Outbound = {
    display_name?: string | undefined;
    fields?: Array<ApiRoutersPciForwardSchemasVoidableField$Outbound> | undefined;
};

/** @internal */
export const PCIForwardConfigAuthenticationUpdate$outboundSchema: z.ZodType<
    PCIForwardConfigAuthenticationUpdate$Outbound,
    z.ZodTypeDef,
    PCIForwardConfigAuthenticationUpdate
> = z
    .object({
        displayName: z.string().optional(),
        fields: z.array(ApiRoutersPciForwardSchemasVoidableField$outboundSchema).optional(),
    })
    .transform((v) => {
        return remap$(v, {
            displayName: "display_name",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PCIForwardConfigAuthenticationUpdate$ {
    /** @deprecated use `PCIForwardConfigAuthenticationUpdate$inboundSchema` instead. */
    export const inboundSchema = PCIForwardConfigAuthenticationUpdate$inboundSchema;
    /** @deprecated use `PCIForwardConfigAuthenticationUpdate$outboundSchema` instead. */
    export const outboundSchema = PCIForwardConfigAuthenticationUpdate$outboundSchema;
    /** @deprecated use `PCIForwardConfigAuthenticationUpdate$Outbound` instead. */
    export type Outbound = PCIForwardConfigAuthenticationUpdate$Outbound;
}

/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives.js";
import * as z from "zod";

/**
 * A key-value pair that represents a field defined in the definition for
 *
 * @remarks
 * this authentication method.
 */
export type PCIForwardConfigAuthenticationUpdateFields = {
    /**
     * The key of the field to set a value for.
     */
    key: string;
    /**
     * The value of a field to set; you can unset optional fields by
     *
     * @remarks
     * setting this to an empty string `""`.
     */
    value: string;
};

/**
 * Request body to update a Vault Forward authentication method.
 */
export type PCIForwardConfigAuthenticationUpdate = {
    /**
     * A custom name for the authentication method. This will be shown in the Admin UI.
     */
    displayName?: string | undefined;
    /**
     * A list of fields, each containing a key-value pair for each field defined
     *
     * @remarks
     * by the definition for this authentication method.
     */
    fields?: Array<PCIForwardConfigAuthenticationUpdateFields> | undefined;
};

/** @internal */
export const PCIForwardConfigAuthenticationUpdateFields$inboundSchema: z.ZodType<
    PCIForwardConfigAuthenticationUpdateFields,
    z.ZodTypeDef,
    unknown
> = z.object({
    key: z.string(),
    value: z.string(),
});

/** @internal */
export type PCIForwardConfigAuthenticationUpdateFields$Outbound = {
    key: string;
    value: string;
};

/** @internal */
export const PCIForwardConfigAuthenticationUpdateFields$outboundSchema: z.ZodType<
    PCIForwardConfigAuthenticationUpdateFields$Outbound,
    z.ZodTypeDef,
    PCIForwardConfigAuthenticationUpdateFields
> = z.object({
    key: z.string(),
    value: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PCIForwardConfigAuthenticationUpdateFields$ {
    /** @deprecated use `PCIForwardConfigAuthenticationUpdateFields$inboundSchema` instead. */
    export const inboundSchema = PCIForwardConfigAuthenticationUpdateFields$inboundSchema;
    /** @deprecated use `PCIForwardConfigAuthenticationUpdateFields$outboundSchema` instead. */
    export const outboundSchema = PCIForwardConfigAuthenticationUpdateFields$outboundSchema;
    /** @deprecated use `PCIForwardConfigAuthenticationUpdateFields$Outbound` instead. */
    export type Outbound = PCIForwardConfigAuthenticationUpdateFields$Outbound;
}

/** @internal */
export const PCIForwardConfigAuthenticationUpdate$inboundSchema: z.ZodType<
    PCIForwardConfigAuthenticationUpdate,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        display_name: z.string().optional(),
        fields: z
            .array(z.lazy(() => PCIForwardConfigAuthenticationUpdateFields$inboundSchema))
            .optional(),
    })
    .transform((v) => {
        return remap$(v, {
            display_name: "displayName",
        });
    });

/** @internal */
export type PCIForwardConfigAuthenticationUpdate$Outbound = {
    display_name?: string | undefined;
    fields?: Array<PCIForwardConfigAuthenticationUpdateFields$Outbound> | undefined;
};

/** @internal */
export const PCIForwardConfigAuthenticationUpdate$outboundSchema: z.ZodType<
    PCIForwardConfigAuthenticationUpdate$Outbound,
    z.ZodTypeDef,
    PCIForwardConfigAuthenticationUpdate
> = z
    .object({
        displayName: z.string().optional(),
        fields: z
            .array(z.lazy(() => PCIForwardConfigAuthenticationUpdateFields$outboundSchema))
            .optional(),
    })
    .transform((v) => {
        return remap$(v, {
            displayName: "display_name",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PCIForwardConfigAuthenticationUpdate$ {
    /** @deprecated use `PCIForwardConfigAuthenticationUpdate$inboundSchema` instead. */
    export const inboundSchema = PCIForwardConfigAuthenticationUpdate$inboundSchema;
    /** @deprecated use `PCIForwardConfigAuthenticationUpdate$outboundSchema` instead. */
    export const outboundSchema = PCIForwardConfigAuthenticationUpdate$outboundSchema;
    /** @deprecated use `PCIForwardConfigAuthenticationUpdate$Outbound` instead. */
    export type Outbound = PCIForwardConfigAuthenticationUpdate$Outbound;
}

/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as z from "zod";

/**
 * The type of this resource.
 */
export enum PaymentServiceSnapshotType {
    PaymentService = "payment-service",
}

/**
 * The payment method that this services handles.
 */
export enum PaymentServiceSnapshotMethod {
    Afterpay = "afterpay",
    Alipay = "alipay",
    Alipayhk = "alipayhk",
    Applepay = "applepay",
    Bacs = "bacs",
    Bancontact = "bancontact",
    Banked = "banked",
    Becs = "becs",
    Bitpay = "bitpay",
    Boleto = "boleto",
    Boost = "boost",
    Card = "card",
    CheckoutSession = "checkout-session",
    ClickToPay = "click-to-pay",
    Clearpay = "clearpay",
    Dana = "dana",
    Dcb = "dcb",
    Eps = "eps",
    Fortumo = "fortumo",
    Gcash = "gcash",
    Giropay = "giropay",
    Givingblock = "givingblock",
    Gocardless = "gocardless",
    Googlepay = "googlepay",
    Gopay = "gopay",
    Grabpay = "grabpay",
    Ideal = "ideal",
    Id = "id",
    Kakaopay = "kakaopay",
    Klarna = "klarna",
    Laybuy = "laybuy",
    Linepay = "linepay",
    Linkaja = "linkaja",
    Maybankqrpay = "maybankqrpay",
    Multibanco = "multibanco",
    Oney3x = "oney_3x",
    Oney4x = "oney_4x",
    Oney6x = "oney_6x",
    Oney10x = "oney_10x",
    Oney12x = "oney_12x",
    Ovo = "ovo",
    Oxxo = "oxxo",
    Paymaya = "paymaya",
    Paypal = "paypal",
    Paypalpaylater = "paypalpaylater",
    Pix = "pix",
    Rabbitlinepay = "rabbitlinepay",
    Razorpay = "razorpay",
    Scalapay = "scalapay",
    Sepa = "sepa",
    Shopeepay = "shopeepay",
    Singteldash = "singteldash",
    Sofort = "sofort",
    Stripedd = "stripedd",
    Thaiqr = "thaiqr",
    Touchngo = "touchngo",
    Truemoney = "truemoney",
    Trustly = "trustly",
    Venmo = "venmo",
    Waave = "waave",
    Wechat = "wechat",
    Zippay = "zippay",
}

/**
 * An active, configured payment service.
 */
export type PaymentServiceSnapshot = {
    /**
     * The type of this resource.
     */
    type?: PaymentServiceSnapshotType | undefined;
    /**
     * The ID of this payment service.
     */
    id?: string | undefined;
    /**
     * The custom name set for this service.
     */
    displayName?: string | undefined;
    /**
     * The payment method that this services handles.
     */
    method?: PaymentServiceSnapshotMethod | undefined;
    /**
     * The ID of the payment service definition used to create this service.
     *
     * @remarks
     *
     */
    paymentServiceDefinitionId?: string | undefined;
};

/** @internal */
export const PaymentServiceSnapshotType$ = z.nativeEnum(PaymentServiceSnapshotType);

/** @internal */
export const PaymentServiceSnapshotMethod$ = z.nativeEnum(PaymentServiceSnapshotMethod);

/** @internal */
export namespace PaymentServiceSnapshot$ {
    export type Inbound = {
        type?: PaymentServiceSnapshotType | undefined;
        id?: string | undefined;
        display_name?: string | undefined;
        method?: PaymentServiceSnapshotMethod | undefined;
        payment_service_definition_id?: string | undefined;
    };

    export const inboundSchema: z.ZodType<PaymentServiceSnapshot, z.ZodTypeDef, Inbound> = z
        .object({
            type: PaymentServiceSnapshotType$.optional(),
            id: z.string().optional(),
            display_name: z.string().optional(),
            method: PaymentServiceSnapshotMethod$.optional(),
            payment_service_definition_id: z.string().optional(),
        })
        .transform((v) => {
            return {
                ...(v.type === undefined ? null : { type: v.type }),
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.display_name === undefined ? null : { displayName: v.display_name }),
                ...(v.method === undefined ? null : { method: v.method }),
                ...(v.payment_service_definition_id === undefined
                    ? null
                    : { paymentServiceDefinitionId: v.payment_service_definition_id }),
            };
        });

    export type Outbound = {
        type?: PaymentServiceSnapshotType | undefined;
        id?: string | undefined;
        display_name?: string | undefined;
        method?: PaymentServiceSnapshotMethod | undefined;
        payment_service_definition_id?: string | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, PaymentServiceSnapshot> = z
        .object({
            type: PaymentServiceSnapshotType$.optional(),
            id: z.string().optional(),
            displayName: z.string().optional(),
            method: PaymentServiceSnapshotMethod$.optional(),
            paymentServiceDefinitionId: z.string().optional(),
        })
        .transform((v) => {
            return {
                ...(v.type === undefined ? null : { type: v.type }),
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.displayName === undefined ? null : { display_name: v.displayName }),
                ...(v.method === undefined ? null : { method: v.method }),
                ...(v.paymentServiceDefinitionId === undefined
                    ? null
                    : { payment_service_definition_id: v.paymentServiceDefinitionId }),
            };
        });
}

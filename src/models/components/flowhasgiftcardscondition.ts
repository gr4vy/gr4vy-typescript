/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as z from "zod";

/**
 * The type of match made for this rule.
 */
export enum FlowHasGiftCardsConditionName {
    HasGiftCards = "has_gift_cards",
}

/**
 * The comparison to make on the `has_gift_cards` flag `value`.
 */
export enum FlowHasGiftCardsConditionOperator {
    EqualTo = "equal_to",
}

/**
 * `has_gift_cards` flag conditions with a name, operator, and value.
 */
export type FlowHasGiftCardsCondition = {
    /**
     * The type of match made for this rule.
     */
    name: FlowHasGiftCardsConditionName;
    /**
     * The comparison to make on the `has_gift_cards` flag `value`.
     */
    operator: FlowHasGiftCardsConditionOperator;
    /**
     * `has_gift_cards` flag value to compare the transaction to.
     */
    value: boolean;
};

/** @internal */
export namespace FlowHasGiftCardsConditionName$ {
    export const inboundSchema = z.nativeEnum(FlowHasGiftCardsConditionName);
    export const outboundSchema = inboundSchema;
}

/** @internal */
export namespace FlowHasGiftCardsConditionOperator$ {
    export const inboundSchema = z.nativeEnum(FlowHasGiftCardsConditionOperator);
    export const outboundSchema = inboundSchema;
}

/** @internal */
export namespace FlowHasGiftCardsCondition$ {
    export const inboundSchema: z.ZodType<FlowHasGiftCardsCondition, z.ZodTypeDef, unknown> =
        z.object({
            name: FlowHasGiftCardsConditionName$.inboundSchema,
            operator: FlowHasGiftCardsConditionOperator$.inboundSchema,
            value: z.boolean(),
        });

    export type Outbound = {
        name: string;
        operator: string;
        value: boolean;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, FlowHasGiftCardsCondition> =
        z.object({
            name: FlowHasGiftCardsConditionName$.outboundSchema,
            operator: FlowHasGiftCardsConditionOperator$.outboundSchema,
            value: z.boolean(),
        });
}

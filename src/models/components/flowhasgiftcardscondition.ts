/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { ClosedEnum } from "../../types/enums.js";
import * as z from "zod";

/**
 * The type of match made for this rule.
 */
export const FlowHasGiftCardsConditionName = {
    HasGiftCards: "has_gift_cards",
} as const;
/**
 * The type of match made for this rule.
 */
export type FlowHasGiftCardsConditionName = ClosedEnum<typeof FlowHasGiftCardsConditionName>;

/**
 * The comparison to make on the `has_gift_cards` flag `value`.
 */
export const FlowHasGiftCardsConditionOperator = {
    EqualTo: "equal_to",
} as const;
/**
 * The comparison to make on the `has_gift_cards` flag `value`.
 */
export type FlowHasGiftCardsConditionOperator = ClosedEnum<
    typeof FlowHasGiftCardsConditionOperator
>;

/**
 * `has_gift_cards` flag conditions with a name, operator, and value.
 */
export type FlowHasGiftCardsCondition = {
    /**
     * The type of match made for this rule.
     */
    name: FlowHasGiftCardsConditionName;
    /**
     * The comparison to make on the `has_gift_cards` flag `value`.
     */
    operator: FlowHasGiftCardsConditionOperator;
    /**
     * `has_gift_cards` flag value to compare the transaction to.
     */
    value: boolean;
};

/** @internal */
export const FlowHasGiftCardsConditionName$inboundSchema: z.ZodNativeEnum<
    typeof FlowHasGiftCardsConditionName
> = z.nativeEnum(FlowHasGiftCardsConditionName);

/** @internal */
export const FlowHasGiftCardsConditionName$outboundSchema: z.ZodNativeEnum<
    typeof FlowHasGiftCardsConditionName
> = FlowHasGiftCardsConditionName$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FlowHasGiftCardsConditionName$ {
    /** @deprecated use `FlowHasGiftCardsConditionName$inboundSchema` instead. */
    export const inboundSchema = FlowHasGiftCardsConditionName$inboundSchema;
    /** @deprecated use `FlowHasGiftCardsConditionName$outboundSchema` instead. */
    export const outboundSchema = FlowHasGiftCardsConditionName$outboundSchema;
}

/** @internal */
export const FlowHasGiftCardsConditionOperator$inboundSchema: z.ZodNativeEnum<
    typeof FlowHasGiftCardsConditionOperator
> = z.nativeEnum(FlowHasGiftCardsConditionOperator);

/** @internal */
export const FlowHasGiftCardsConditionOperator$outboundSchema: z.ZodNativeEnum<
    typeof FlowHasGiftCardsConditionOperator
> = FlowHasGiftCardsConditionOperator$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FlowHasGiftCardsConditionOperator$ {
    /** @deprecated use `FlowHasGiftCardsConditionOperator$inboundSchema` instead. */
    export const inboundSchema = FlowHasGiftCardsConditionOperator$inboundSchema;
    /** @deprecated use `FlowHasGiftCardsConditionOperator$outboundSchema` instead. */
    export const outboundSchema = FlowHasGiftCardsConditionOperator$outboundSchema;
}

/** @internal */
export const FlowHasGiftCardsCondition$inboundSchema: z.ZodType<
    FlowHasGiftCardsCondition,
    z.ZodTypeDef,
    unknown
> = z.object({
    name: FlowHasGiftCardsConditionName$inboundSchema,
    operator: FlowHasGiftCardsConditionOperator$inboundSchema,
    value: z.boolean(),
});

/** @internal */
export type FlowHasGiftCardsCondition$Outbound = {
    name: string;
    operator: string;
    value: boolean;
};

/** @internal */
export const FlowHasGiftCardsCondition$outboundSchema: z.ZodType<
    FlowHasGiftCardsCondition$Outbound,
    z.ZodTypeDef,
    FlowHasGiftCardsCondition
> = z.object({
    name: FlowHasGiftCardsConditionName$outboundSchema,
    operator: FlowHasGiftCardsConditionOperator$outboundSchema,
    value: z.boolean(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FlowHasGiftCardsCondition$ {
    /** @deprecated use `FlowHasGiftCardsCondition$inboundSchema` instead. */
    export const inboundSchema = FlowHasGiftCardsCondition$inboundSchema;
    /** @deprecated use `FlowHasGiftCardsCondition$outboundSchema` instead. */
    export const outboundSchema = FlowHasGiftCardsCondition$outboundSchema;
    /** @deprecated use `FlowHasGiftCardsCondition$Outbound` instead. */
    export type Outbound = FlowHasGiftCardsCondition$Outbound;
}

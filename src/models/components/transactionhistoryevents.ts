/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import {
    AntiFraudDecisionErrorEvent,
    AntiFraudDecisionErrorEvent$,
} from "./antifrauddecisionerrorevent";
import { AntiFraudDecisionEvent, AntiFraudDecisionEvent$ } from "./antifrauddecisionevent";
import {
    AntiFraudDecisionSkippedEvent,
    AntiFraudDecisionSkippedEvent$,
} from "./antifrauddecisionskippedevent";
import {
    AntiFraudTransactionStatusUpdateErrorEvent,
    AntiFraudTransactionStatusUpdateErrorEvent$,
} from "./antifraudtransactionstatusupdateerrorevent";
import {
    AntiFraudTransactionStatusUpdateEvent,
    AntiFraudTransactionStatusUpdateEvent$,
} from "./antifraudtransactionstatusupdateevent";
import { AntiFraudWebhookEvent, AntiFraudWebhookEvent$ } from "./antifraudwebhookevent";
import { BINLookupRequest, BINLookupRequest$ } from "./binlookuprequest";
import {
    DigitalWalletApplePayTokenDecrypted,
    DigitalWalletApplePayTokenDecrypted$,
} from "./digitalwalletapplepaytokendecrypted";
import {
    DigitalWalletClickToPayTokenDecrypted,
    DigitalWalletClickToPayTokenDecrypted$,
} from "./digitalwalletclicktopaytokendecrypted";
import {
    DigitalWalletGooglePayTokenDecrypted,
    DigitalWalletGooglePayTokenDecrypted$,
} from "./digitalwalletgooglepaytokendecrypted";
import { GiftCardRedemptionFailed, GiftCardRedemptionFailed$ } from "./giftcardredemptionfailed";
import {
    GiftCardRedemptionSucceeded,
    GiftCardRedemptionSucceeded$,
} from "./giftcardredemptionsucceeded";
import { GiftCardRefundFailed, GiftCardRefundFailed$ } from "./giftcardrefundfailed";
import { GiftCardRefundSucceeded, GiftCardRefundSucceeded$ } from "./giftcardrefundsucceeded";
import {
    NetworkTokenCryptogramProvisionFailed,
    NetworkTokenCryptogramProvisionFailed$,
} from "./networktokencryptogramprovisionfailed";
import {
    NetworkTokenCryptogramProvisionSucceeded,
    NetworkTokenCryptogramProvisionSucceeded$,
} from "./networktokencryptogramprovisionsucceeded";
import {
    NetworkTokenProvisionFailed,
    NetworkTokenProvisionFailed$,
} from "./networktokenprovisionfailed";
import {
    NetworkTokenProvisionSucceeded,
    NetworkTokenProvisionSucceeded$,
} from "./networktokenprovisionsucceeded";
import {
    PaymentConnectorExternalTransactionRequest,
    PaymentConnectorExternalTransactionRequest$,
} from "./paymentconnectorexternaltransactionrequest";
import {
    PaymentConnectorResponseTransactionAuthorizationFailedEvent,
    PaymentConnectorResponseTransactionAuthorizationFailedEvent$,
} from "./paymentconnectorresponsetransactionauthorizationfailedevent";
import {
    PaymentConnectorResponseTransactionAuthorizationSucceededEvent,
    PaymentConnectorResponseTransactionAuthorizationSucceededEvent$,
} from "./paymentconnectorresponsetransactionauthorizationsucceededevent";
import {
    PaymentConnectorResponseTransactionCaptureDeclinedEvent,
    PaymentConnectorResponseTransactionCaptureDeclinedEvent$,
} from "./paymentconnectorresponsetransactioncapturedeclinedevent";
import {
    PaymentConnectorResponseTransactionCaptureFailedEvent,
    PaymentConnectorResponseTransactionCaptureFailedEvent$,
} from "./paymentconnectorresponsetransactioncapturefailedevent";
import {
    PaymentConnectorResponseTransactionCaptureSucceededEvent,
    PaymentConnectorResponseTransactionCaptureSucceededEvent$,
} from "./paymentconnectorresponsetransactioncapturesucceededevent";
import {
    PaymentConnectorResponseTransactionDeclinedEvent,
    PaymentConnectorResponseTransactionDeclinedEvent$,
} from "./paymentconnectorresponsetransactiondeclinedevent";
import {
    PaymentConnectorResponseTransactionVoidDeclinedEvent,
    PaymentConnectorResponseTransactionVoidDeclinedEvent$,
} from "./paymentconnectorresponsetransactionvoiddeclinedevent";
import {
    PaymentConnectorResponseTransactionVoidFailedEvent,
    PaymentConnectorResponseTransactionVoidFailedEvent$,
} from "./paymentconnectorresponsetransactionvoidfailedevent";
import {
    PaymentConnectorResponseTransactionVoidSucceededEvent,
    PaymentConnectorResponseTransactionVoidSucceededEvent$,
} from "./paymentconnectorresponsetransactionvoidsucceededevent";
import {
    ThreeDSecureAuthenticationRequestEvent,
    ThreeDSecureAuthenticationRequestEvent$,
} from "./threedsecureauthenticationrequestevent";
import {
    ThreeDSecurePreparationRequestEvent,
    ThreeDSecurePreparationRequestEvent$,
} from "./threedsecurepreparationrequestevent";
import {
    ThreeDSecureRequestErrorEvent,
    ThreeDSecureRequestErrorEvent$,
} from "./threedsecurerequesterrorevent";
import {
    ThreeDSecureResultRequestEvent,
    ThreeDSecureResultRequestEvent$,
} from "./threedsecureresultrequestevent";
import { ThreeDSecureSuccessEvent, ThreeDSecureSuccessEvent$ } from "./threedsecuresuccessevent";
import * as z from "zod";

export type Items =
    | BINLookupRequest
    | ThreeDSecureAuthenticationRequestEvent
    | ThreeDSecureSuccessEvent
    | ThreeDSecureRequestErrorEvent
    | ThreeDSecurePreparationRequestEvent
    | ThreeDSecureResultRequestEvent
    | AntiFraudDecisionEvent
    | AntiFraudDecisionErrorEvent
    | AntiFraudDecisionSkippedEvent
    | AntiFraudTransactionStatusUpdateEvent
    | AntiFraudTransactionStatusUpdateErrorEvent
    | AntiFraudWebhookEvent
    | DigitalWalletApplePayTokenDecrypted
    | DigitalWalletClickToPayTokenDecrypted
    | DigitalWalletGooglePayTokenDecrypted
    | GiftCardRedemptionFailed
    | GiftCardRedemptionSucceeded
    | GiftCardRefundFailed
    | GiftCardRefundSucceeded
    | NetworkTokenCryptogramProvisionFailed
    | NetworkTokenCryptogramProvisionSucceeded
    | NetworkTokenProvisionFailed
    | NetworkTokenProvisionSucceeded
    | PaymentConnectorResponseTransactionAuthorizationSucceededEvent
    | PaymentConnectorResponseTransactionDeclinedEvent
    | PaymentConnectorResponseTransactionAuthorizationFailedEvent
    | PaymentConnectorResponseTransactionCaptureDeclinedEvent
    | PaymentConnectorResponseTransactionCaptureFailedEvent
    | PaymentConnectorResponseTransactionCaptureSucceededEvent
    | PaymentConnectorResponseTransactionVoidDeclinedEvent
    | PaymentConnectorResponseTransactionVoidFailedEvent
    | PaymentConnectorResponseTransactionVoidSucceededEvent
    | PaymentConnectorExternalTransactionRequest;

/**
 * A list of transaction history events.
 */
export type TransactionHistoryEvents = {
    /**
     * A list of events related to processing a transaction.
     */
    items?:
        | Array<
              | BINLookupRequest
              | ThreeDSecureAuthenticationRequestEvent
              | ThreeDSecureSuccessEvent
              | ThreeDSecureRequestErrorEvent
              | ThreeDSecurePreparationRequestEvent
              | ThreeDSecureResultRequestEvent
              | AntiFraudDecisionEvent
              | AntiFraudDecisionErrorEvent
              | AntiFraudDecisionSkippedEvent
              | AntiFraudTransactionStatusUpdateEvent
              | AntiFraudTransactionStatusUpdateErrorEvent
              | AntiFraudWebhookEvent
              | DigitalWalletApplePayTokenDecrypted
              | DigitalWalletClickToPayTokenDecrypted
              | DigitalWalletGooglePayTokenDecrypted
              | GiftCardRedemptionFailed
              | GiftCardRedemptionSucceeded
              | GiftCardRefundFailed
              | GiftCardRefundSucceeded
              | NetworkTokenCryptogramProvisionFailed
              | NetworkTokenCryptogramProvisionSucceeded
              | NetworkTokenProvisionFailed
              | NetworkTokenProvisionSucceeded
              | PaymentConnectorResponseTransactionAuthorizationSucceededEvent
              | PaymentConnectorResponseTransactionDeclinedEvent
              | PaymentConnectorResponseTransactionAuthorizationFailedEvent
              | PaymentConnectorResponseTransactionCaptureDeclinedEvent
              | PaymentConnectorResponseTransactionCaptureFailedEvent
              | PaymentConnectorResponseTransactionCaptureSucceededEvent
              | PaymentConnectorResponseTransactionVoidDeclinedEvent
              | PaymentConnectorResponseTransactionVoidFailedEvent
              | PaymentConnectorResponseTransactionVoidSucceededEvent
              | PaymentConnectorExternalTransactionRequest
          >
        | undefined;
    /**
     * The limit applied to request. This represents the number of items that are at
     *
     * @remarks
     * maximum returned by this request.
     */
    limit?: number | undefined;
    /**
     * The cursor that represents the next page of results. Use the `cursor` query
     *
     * @remarks
     * parameter to fetch this page of items.
     */
    nextCursor?: string | null | undefined;
    /**
     * The cursor that represents the next page of results. Use the `cursor` query
     *
     * @remarks
     * parameter to fetch this page of items.
     */
    previousCursor?: string | null | undefined;
};

/** @internal */
export namespace Items$ {
    export type Inbound =
        | BINLookupRequest$.Inbound
        | ThreeDSecureAuthenticationRequestEvent$.Inbound
        | ThreeDSecureSuccessEvent$.Inbound
        | ThreeDSecureRequestErrorEvent$.Inbound
        | ThreeDSecurePreparationRequestEvent$.Inbound
        | ThreeDSecureResultRequestEvent$.Inbound
        | AntiFraudDecisionEvent$.Inbound
        | AntiFraudDecisionErrorEvent$.Inbound
        | AntiFraudDecisionSkippedEvent$.Inbound
        | AntiFraudTransactionStatusUpdateEvent$.Inbound
        | AntiFraudTransactionStatusUpdateErrorEvent$.Inbound
        | AntiFraudWebhookEvent$.Inbound
        | DigitalWalletApplePayTokenDecrypted$.Inbound
        | DigitalWalletClickToPayTokenDecrypted$.Inbound
        | DigitalWalletGooglePayTokenDecrypted$.Inbound
        | GiftCardRedemptionFailed$.Inbound
        | GiftCardRedemptionSucceeded$.Inbound
        | GiftCardRefundFailed$.Inbound
        | GiftCardRefundSucceeded$.Inbound
        | NetworkTokenCryptogramProvisionFailed$.Inbound
        | NetworkTokenCryptogramProvisionSucceeded$.Inbound
        | NetworkTokenProvisionFailed$.Inbound
        | NetworkTokenProvisionSucceeded$.Inbound
        | PaymentConnectorResponseTransactionAuthorizationSucceededEvent$.Inbound
        | PaymentConnectorResponseTransactionDeclinedEvent$.Inbound
        | PaymentConnectorResponseTransactionAuthorizationFailedEvent$.Inbound
        | PaymentConnectorResponseTransactionCaptureDeclinedEvent$.Inbound
        | PaymentConnectorResponseTransactionCaptureFailedEvent$.Inbound
        | PaymentConnectorResponseTransactionCaptureSucceededEvent$.Inbound
        | PaymentConnectorResponseTransactionVoidDeclinedEvent$.Inbound
        | PaymentConnectorResponseTransactionVoidFailedEvent$.Inbound
        | PaymentConnectorResponseTransactionVoidSucceededEvent$.Inbound
        | PaymentConnectorExternalTransactionRequest$.Inbound;

    export type Outbound =
        | BINLookupRequest$.Outbound
        | ThreeDSecureAuthenticationRequestEvent$.Outbound
        | ThreeDSecureSuccessEvent$.Outbound
        | ThreeDSecureRequestErrorEvent$.Outbound
        | ThreeDSecurePreparationRequestEvent$.Outbound
        | ThreeDSecureResultRequestEvent$.Outbound
        | AntiFraudDecisionEvent$.Outbound
        | AntiFraudDecisionErrorEvent$.Outbound
        | AntiFraudDecisionSkippedEvent$.Outbound
        | AntiFraudTransactionStatusUpdateEvent$.Outbound
        | AntiFraudTransactionStatusUpdateErrorEvent$.Outbound
        | AntiFraudWebhookEvent$.Outbound
        | DigitalWalletApplePayTokenDecrypted$.Outbound
        | DigitalWalletClickToPayTokenDecrypted$.Outbound
        | DigitalWalletGooglePayTokenDecrypted$.Outbound
        | GiftCardRedemptionFailed$.Outbound
        | GiftCardRedemptionSucceeded$.Outbound
        | GiftCardRefundFailed$.Outbound
        | GiftCardRefundSucceeded$.Outbound
        | NetworkTokenCryptogramProvisionFailed$.Outbound
        | NetworkTokenCryptogramProvisionSucceeded$.Outbound
        | NetworkTokenProvisionFailed$.Outbound
        | NetworkTokenProvisionSucceeded$.Outbound
        | PaymentConnectorResponseTransactionAuthorizationSucceededEvent$.Outbound
        | PaymentConnectorResponseTransactionDeclinedEvent$.Outbound
        | PaymentConnectorResponseTransactionAuthorizationFailedEvent$.Outbound
        | PaymentConnectorResponseTransactionCaptureDeclinedEvent$.Outbound
        | PaymentConnectorResponseTransactionCaptureFailedEvent$.Outbound
        | PaymentConnectorResponseTransactionCaptureSucceededEvent$.Outbound
        | PaymentConnectorResponseTransactionVoidDeclinedEvent$.Outbound
        | PaymentConnectorResponseTransactionVoidFailedEvent$.Outbound
        | PaymentConnectorResponseTransactionVoidSucceededEvent$.Outbound
        | PaymentConnectorExternalTransactionRequest$.Outbound;
    export const inboundSchema: z.ZodType<Items, z.ZodTypeDef, Inbound> = z.union([
        BINLookupRequest$.inboundSchema,
        ThreeDSecureAuthenticationRequestEvent$.inboundSchema,
        ThreeDSecureSuccessEvent$.inboundSchema,
        ThreeDSecureRequestErrorEvent$.inboundSchema,
        ThreeDSecurePreparationRequestEvent$.inboundSchema,
        ThreeDSecureResultRequestEvent$.inboundSchema,
        AntiFraudDecisionEvent$.inboundSchema,
        AntiFraudDecisionErrorEvent$.inboundSchema,
        AntiFraudDecisionSkippedEvent$.inboundSchema,
        AntiFraudTransactionStatusUpdateEvent$.inboundSchema,
        AntiFraudTransactionStatusUpdateErrorEvent$.inboundSchema,
        AntiFraudWebhookEvent$.inboundSchema,
        DigitalWalletApplePayTokenDecrypted$.inboundSchema,
        DigitalWalletClickToPayTokenDecrypted$.inboundSchema,
        DigitalWalletGooglePayTokenDecrypted$.inboundSchema,
        GiftCardRedemptionFailed$.inboundSchema,
        GiftCardRedemptionSucceeded$.inboundSchema,
        GiftCardRefundFailed$.inboundSchema,
        GiftCardRefundSucceeded$.inboundSchema,
        NetworkTokenCryptogramProvisionFailed$.inboundSchema,
        NetworkTokenCryptogramProvisionSucceeded$.inboundSchema,
        NetworkTokenProvisionFailed$.inboundSchema,
        NetworkTokenProvisionSucceeded$.inboundSchema,
        PaymentConnectorResponseTransactionAuthorizationSucceededEvent$.inboundSchema,
        PaymentConnectorResponseTransactionDeclinedEvent$.inboundSchema,
        PaymentConnectorResponseTransactionAuthorizationFailedEvent$.inboundSchema,
        PaymentConnectorResponseTransactionCaptureDeclinedEvent$.inboundSchema,
        PaymentConnectorResponseTransactionCaptureFailedEvent$.inboundSchema,
        PaymentConnectorResponseTransactionCaptureSucceededEvent$.inboundSchema,
        PaymentConnectorResponseTransactionVoidDeclinedEvent$.inboundSchema,
        PaymentConnectorResponseTransactionVoidFailedEvent$.inboundSchema,
        PaymentConnectorResponseTransactionVoidSucceededEvent$.inboundSchema,
        PaymentConnectorExternalTransactionRequest$.inboundSchema,
    ]);
    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, Items> = z.union([
        BINLookupRequest$.outboundSchema,
        ThreeDSecureAuthenticationRequestEvent$.outboundSchema,
        ThreeDSecureSuccessEvent$.outboundSchema,
        ThreeDSecureRequestErrorEvent$.outboundSchema,
        ThreeDSecurePreparationRequestEvent$.outboundSchema,
        ThreeDSecureResultRequestEvent$.outboundSchema,
        AntiFraudDecisionEvent$.outboundSchema,
        AntiFraudDecisionErrorEvent$.outboundSchema,
        AntiFraudDecisionSkippedEvent$.outboundSchema,
        AntiFraudTransactionStatusUpdateEvent$.outboundSchema,
        AntiFraudTransactionStatusUpdateErrorEvent$.outboundSchema,
        AntiFraudWebhookEvent$.outboundSchema,
        DigitalWalletApplePayTokenDecrypted$.outboundSchema,
        DigitalWalletClickToPayTokenDecrypted$.outboundSchema,
        DigitalWalletGooglePayTokenDecrypted$.outboundSchema,
        GiftCardRedemptionFailed$.outboundSchema,
        GiftCardRedemptionSucceeded$.outboundSchema,
        GiftCardRefundFailed$.outboundSchema,
        GiftCardRefundSucceeded$.outboundSchema,
        NetworkTokenCryptogramProvisionFailed$.outboundSchema,
        NetworkTokenCryptogramProvisionSucceeded$.outboundSchema,
        NetworkTokenProvisionFailed$.outboundSchema,
        NetworkTokenProvisionSucceeded$.outboundSchema,
        PaymentConnectorResponseTransactionAuthorizationSucceededEvent$.outboundSchema,
        PaymentConnectorResponseTransactionDeclinedEvent$.outboundSchema,
        PaymentConnectorResponseTransactionAuthorizationFailedEvent$.outboundSchema,
        PaymentConnectorResponseTransactionCaptureDeclinedEvent$.outboundSchema,
        PaymentConnectorResponseTransactionCaptureFailedEvent$.outboundSchema,
        PaymentConnectorResponseTransactionCaptureSucceededEvent$.outboundSchema,
        PaymentConnectorResponseTransactionVoidDeclinedEvent$.outboundSchema,
        PaymentConnectorResponseTransactionVoidFailedEvent$.outboundSchema,
        PaymentConnectorResponseTransactionVoidSucceededEvent$.outboundSchema,
        PaymentConnectorExternalTransactionRequest$.outboundSchema,
    ]);
}

/** @internal */
export namespace TransactionHistoryEvents$ {
    export type Inbound = {
        items?:
            | Array<
                  | BINLookupRequest$.Inbound
                  | ThreeDSecureAuthenticationRequestEvent$.Inbound
                  | ThreeDSecureSuccessEvent$.Inbound
                  | ThreeDSecureRequestErrorEvent$.Inbound
                  | ThreeDSecurePreparationRequestEvent$.Inbound
                  | ThreeDSecureResultRequestEvent$.Inbound
                  | AntiFraudDecisionEvent$.Inbound
                  | AntiFraudDecisionErrorEvent$.Inbound
                  | AntiFraudDecisionSkippedEvent$.Inbound
                  | AntiFraudTransactionStatusUpdateEvent$.Inbound
                  | AntiFraudTransactionStatusUpdateErrorEvent$.Inbound
                  | AntiFraudWebhookEvent$.Inbound
                  | DigitalWalletApplePayTokenDecrypted$.Inbound
                  | DigitalWalletClickToPayTokenDecrypted$.Inbound
                  | DigitalWalletGooglePayTokenDecrypted$.Inbound
                  | GiftCardRedemptionFailed$.Inbound
                  | GiftCardRedemptionSucceeded$.Inbound
                  | GiftCardRefundFailed$.Inbound
                  | GiftCardRefundSucceeded$.Inbound
                  | NetworkTokenCryptogramProvisionFailed$.Inbound
                  | NetworkTokenCryptogramProvisionSucceeded$.Inbound
                  | NetworkTokenProvisionFailed$.Inbound
                  | NetworkTokenProvisionSucceeded$.Inbound
                  | PaymentConnectorResponseTransactionAuthorizationSucceededEvent$.Inbound
                  | PaymentConnectorResponseTransactionDeclinedEvent$.Inbound
                  | PaymentConnectorResponseTransactionAuthorizationFailedEvent$.Inbound
                  | PaymentConnectorResponseTransactionCaptureDeclinedEvent$.Inbound
                  | PaymentConnectorResponseTransactionCaptureFailedEvent$.Inbound
                  | PaymentConnectorResponseTransactionCaptureSucceededEvent$.Inbound
                  | PaymentConnectorResponseTransactionVoidDeclinedEvent$.Inbound
                  | PaymentConnectorResponseTransactionVoidFailedEvent$.Inbound
                  | PaymentConnectorResponseTransactionVoidSucceededEvent$.Inbound
                  | PaymentConnectorExternalTransactionRequest$.Inbound
              >
            | undefined;
        limit?: number | undefined;
        next_cursor?: string | null | undefined;
        previous_cursor?: string | null | undefined;
    };

    export const inboundSchema: z.ZodType<TransactionHistoryEvents, z.ZodTypeDef, Inbound> = z
        .object({
            items: z
                .array(
                    z.union([
                        BINLookupRequest$.inboundSchema,
                        ThreeDSecureAuthenticationRequestEvent$.inboundSchema,
                        ThreeDSecureSuccessEvent$.inboundSchema,
                        ThreeDSecureRequestErrorEvent$.inboundSchema,
                        ThreeDSecurePreparationRequestEvent$.inboundSchema,
                        ThreeDSecureResultRequestEvent$.inboundSchema,
                        AntiFraudDecisionEvent$.inboundSchema,
                        AntiFraudDecisionErrorEvent$.inboundSchema,
                        AntiFraudDecisionSkippedEvent$.inboundSchema,
                        AntiFraudTransactionStatusUpdateEvent$.inboundSchema,
                        AntiFraudTransactionStatusUpdateErrorEvent$.inboundSchema,
                        AntiFraudWebhookEvent$.inboundSchema,
                        DigitalWalletApplePayTokenDecrypted$.inboundSchema,
                        DigitalWalletClickToPayTokenDecrypted$.inboundSchema,
                        DigitalWalletGooglePayTokenDecrypted$.inboundSchema,
                        GiftCardRedemptionFailed$.inboundSchema,
                        GiftCardRedemptionSucceeded$.inboundSchema,
                        GiftCardRefundFailed$.inboundSchema,
                        GiftCardRefundSucceeded$.inboundSchema,
                        NetworkTokenCryptogramProvisionFailed$.inboundSchema,
                        NetworkTokenCryptogramProvisionSucceeded$.inboundSchema,
                        NetworkTokenProvisionFailed$.inboundSchema,
                        NetworkTokenProvisionSucceeded$.inboundSchema,
                        PaymentConnectorResponseTransactionAuthorizationSucceededEvent$.inboundSchema,
                        PaymentConnectorResponseTransactionDeclinedEvent$.inboundSchema,
                        PaymentConnectorResponseTransactionAuthorizationFailedEvent$.inboundSchema,
                        PaymentConnectorResponseTransactionCaptureDeclinedEvent$.inboundSchema,
                        PaymentConnectorResponseTransactionCaptureFailedEvent$.inboundSchema,
                        PaymentConnectorResponseTransactionCaptureSucceededEvent$.inboundSchema,
                        PaymentConnectorResponseTransactionVoidDeclinedEvent$.inboundSchema,
                        PaymentConnectorResponseTransactionVoidFailedEvent$.inboundSchema,
                        PaymentConnectorResponseTransactionVoidSucceededEvent$.inboundSchema,
                        PaymentConnectorExternalTransactionRequest$.inboundSchema,
                    ])
                )
                .optional(),
            limit: z.number().int().default(20),
            next_cursor: z.nullable(z.string()).optional(),
            previous_cursor: z.nullable(z.string()).optional(),
        })
        .transform((v) => {
            return {
                ...(v.items === undefined ? null : { items: v.items }),
                limit: v.limit,
                ...(v.next_cursor === undefined ? null : { nextCursor: v.next_cursor }),
                ...(v.previous_cursor === undefined ? null : { previousCursor: v.previous_cursor }),
            };
        });

    export type Outbound = {
        items?:
            | Array<
                  | BINLookupRequest$.Outbound
                  | ThreeDSecureAuthenticationRequestEvent$.Outbound
                  | ThreeDSecureSuccessEvent$.Outbound
                  | ThreeDSecureRequestErrorEvent$.Outbound
                  | ThreeDSecurePreparationRequestEvent$.Outbound
                  | ThreeDSecureResultRequestEvent$.Outbound
                  | AntiFraudDecisionEvent$.Outbound
                  | AntiFraudDecisionErrorEvent$.Outbound
                  | AntiFraudDecisionSkippedEvent$.Outbound
                  | AntiFraudTransactionStatusUpdateEvent$.Outbound
                  | AntiFraudTransactionStatusUpdateErrorEvent$.Outbound
                  | AntiFraudWebhookEvent$.Outbound
                  | DigitalWalletApplePayTokenDecrypted$.Outbound
                  | DigitalWalletClickToPayTokenDecrypted$.Outbound
                  | DigitalWalletGooglePayTokenDecrypted$.Outbound
                  | GiftCardRedemptionFailed$.Outbound
                  | GiftCardRedemptionSucceeded$.Outbound
                  | GiftCardRefundFailed$.Outbound
                  | GiftCardRefundSucceeded$.Outbound
                  | NetworkTokenCryptogramProvisionFailed$.Outbound
                  | NetworkTokenCryptogramProvisionSucceeded$.Outbound
                  | NetworkTokenProvisionFailed$.Outbound
                  | NetworkTokenProvisionSucceeded$.Outbound
                  | PaymentConnectorResponseTransactionAuthorizationSucceededEvent$.Outbound
                  | PaymentConnectorResponseTransactionDeclinedEvent$.Outbound
                  | PaymentConnectorResponseTransactionAuthorizationFailedEvent$.Outbound
                  | PaymentConnectorResponseTransactionCaptureDeclinedEvent$.Outbound
                  | PaymentConnectorResponseTransactionCaptureFailedEvent$.Outbound
                  | PaymentConnectorResponseTransactionCaptureSucceededEvent$.Outbound
                  | PaymentConnectorResponseTransactionVoidDeclinedEvent$.Outbound
                  | PaymentConnectorResponseTransactionVoidFailedEvent$.Outbound
                  | PaymentConnectorResponseTransactionVoidSucceededEvent$.Outbound
                  | PaymentConnectorExternalTransactionRequest$.Outbound
              >
            | undefined;
        limit: number;
        next_cursor?: string | null | undefined;
        previous_cursor?: string | null | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, TransactionHistoryEvents> = z
        .object({
            items: z
                .array(
                    z.union([
                        BINLookupRequest$.outboundSchema,
                        ThreeDSecureAuthenticationRequestEvent$.outboundSchema,
                        ThreeDSecureSuccessEvent$.outboundSchema,
                        ThreeDSecureRequestErrorEvent$.outboundSchema,
                        ThreeDSecurePreparationRequestEvent$.outboundSchema,
                        ThreeDSecureResultRequestEvent$.outboundSchema,
                        AntiFraudDecisionEvent$.outboundSchema,
                        AntiFraudDecisionErrorEvent$.outboundSchema,
                        AntiFraudDecisionSkippedEvent$.outboundSchema,
                        AntiFraudTransactionStatusUpdateEvent$.outboundSchema,
                        AntiFraudTransactionStatusUpdateErrorEvent$.outboundSchema,
                        AntiFraudWebhookEvent$.outboundSchema,
                        DigitalWalletApplePayTokenDecrypted$.outboundSchema,
                        DigitalWalletClickToPayTokenDecrypted$.outboundSchema,
                        DigitalWalletGooglePayTokenDecrypted$.outboundSchema,
                        GiftCardRedemptionFailed$.outboundSchema,
                        GiftCardRedemptionSucceeded$.outboundSchema,
                        GiftCardRefundFailed$.outboundSchema,
                        GiftCardRefundSucceeded$.outboundSchema,
                        NetworkTokenCryptogramProvisionFailed$.outboundSchema,
                        NetworkTokenCryptogramProvisionSucceeded$.outboundSchema,
                        NetworkTokenProvisionFailed$.outboundSchema,
                        NetworkTokenProvisionSucceeded$.outboundSchema,
                        PaymentConnectorResponseTransactionAuthorizationSucceededEvent$.outboundSchema,
                        PaymentConnectorResponseTransactionDeclinedEvent$.outboundSchema,
                        PaymentConnectorResponseTransactionAuthorizationFailedEvent$.outboundSchema,
                        PaymentConnectorResponseTransactionCaptureDeclinedEvent$.outboundSchema,
                        PaymentConnectorResponseTransactionCaptureFailedEvent$.outboundSchema,
                        PaymentConnectorResponseTransactionCaptureSucceededEvent$.outboundSchema,
                        PaymentConnectorResponseTransactionVoidDeclinedEvent$.outboundSchema,
                        PaymentConnectorResponseTransactionVoidFailedEvent$.outboundSchema,
                        PaymentConnectorResponseTransactionVoidSucceededEvent$.outboundSchema,
                        PaymentConnectorExternalTransactionRequest$.outboundSchema,
                    ])
                )
                .optional(),
            limit: z.number().int().default(20),
            nextCursor: z.nullable(z.string()).optional(),
            previousCursor: z.nullable(z.string()).optional(),
        })
        .transform((v) => {
            return {
                ...(v.items === undefined ? null : { items: v.items }),
                limit: v.limit,
                ...(v.nextCursor === undefined ? null : { next_cursor: v.nextCursor }),
                ...(v.previousCursor === undefined ? null : { previous_cursor: v.previousCursor }),
            };
        });
}

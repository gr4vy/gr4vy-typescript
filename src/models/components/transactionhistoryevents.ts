/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives.js";
import {
    AntiFraudDecisionErrorEvent,
    AntiFraudDecisionErrorEvent$inboundSchema,
    AntiFraudDecisionErrorEvent$Outbound,
    AntiFraudDecisionErrorEvent$outboundSchema,
} from "./antifrauddecisionerrorevent.js";
import {
    AntiFraudDecisionEvent,
    AntiFraudDecisionEvent$inboundSchema,
    AntiFraudDecisionEvent$Outbound,
    AntiFraudDecisionEvent$outboundSchema,
} from "./antifrauddecisionevent.js";
import {
    AntiFraudDecisionSkippedEvent,
    AntiFraudDecisionSkippedEvent$inboundSchema,
    AntiFraudDecisionSkippedEvent$Outbound,
    AntiFraudDecisionSkippedEvent$outboundSchema,
} from "./antifrauddecisionskippedevent.js";
import {
    AntiFraudDecisionUpdateErrorEvent,
    AntiFraudDecisionUpdateErrorEvent$inboundSchema,
    AntiFraudDecisionUpdateErrorEvent$Outbound,
    AntiFraudDecisionUpdateErrorEvent$outboundSchema,
} from "./antifrauddecisionupdateerrorevent.js";
import {
    AntiFraudDecisionUpdateEvent,
    AntiFraudDecisionUpdateEvent$inboundSchema,
    AntiFraudDecisionUpdateEvent$Outbound,
    AntiFraudDecisionUpdateEvent$outboundSchema,
} from "./antifrauddecisionupdateevent.js";
import {
    AntiFraudTransactionStatusUpdateErrorEvent,
    AntiFraudTransactionStatusUpdateErrorEvent$inboundSchema,
    AntiFraudTransactionStatusUpdateErrorEvent$Outbound,
    AntiFraudTransactionStatusUpdateErrorEvent$outboundSchema,
} from "./antifraudtransactionstatusupdateerrorevent.js";
import {
    AntiFraudTransactionStatusUpdateEvent,
    AntiFraudTransactionStatusUpdateEvent$inboundSchema,
    AntiFraudTransactionStatusUpdateEvent$Outbound,
    AntiFraudTransactionStatusUpdateEvent$outboundSchema,
} from "./antifraudtransactionstatusupdateevent.js";
import {
    AntiFraudWebhookEvent,
    AntiFraudWebhookEvent$inboundSchema,
    AntiFraudWebhookEvent$Outbound,
    AntiFraudWebhookEvent$outboundSchema,
} from "./antifraudwebhookevent.js";
import {
    BINLookupRequest,
    BINLookupRequest$inboundSchema,
    BINLookupRequest$Outbound,
    BINLookupRequest$outboundSchema,
} from "./binlookuprequest.js";
import {
    DigitalWalletApplePayTokenDecrypted,
    DigitalWalletApplePayTokenDecrypted$inboundSchema,
    DigitalWalletApplePayTokenDecrypted$Outbound,
    DigitalWalletApplePayTokenDecrypted$outboundSchema,
} from "./digitalwalletapplepaytokendecrypted.js";
import {
    DigitalWalletClickToPayTokenDecrypted,
    DigitalWalletClickToPayTokenDecrypted$inboundSchema,
    DigitalWalletClickToPayTokenDecrypted$Outbound,
    DigitalWalletClickToPayTokenDecrypted$outboundSchema,
} from "./digitalwalletclicktopaytokendecrypted.js";
import {
    DigitalWalletGooglePayTokenDecrypted,
    DigitalWalletGooglePayTokenDecrypted$inboundSchema,
    DigitalWalletGooglePayTokenDecrypted$Outbound,
    DigitalWalletGooglePayTokenDecrypted$outboundSchema,
} from "./digitalwalletgooglepaytokendecrypted.js";
import {
    GiftCardRedemptionFailed,
    GiftCardRedemptionFailed$inboundSchema,
    GiftCardRedemptionFailed$Outbound,
    GiftCardRedemptionFailed$outboundSchema,
} from "./giftcardredemptionfailed.js";
import {
    GiftCardRedemptionSucceeded,
    GiftCardRedemptionSucceeded$inboundSchema,
    GiftCardRedemptionSucceeded$Outbound,
    GiftCardRedemptionSucceeded$outboundSchema,
} from "./giftcardredemptionsucceeded.js";
import {
    GiftCardRefundFailed,
    GiftCardRefundFailed$inboundSchema,
    GiftCardRefundFailed$Outbound,
    GiftCardRefundFailed$outboundSchema,
} from "./giftcardrefundfailed.js";
import {
    GiftCardRefundSucceeded,
    GiftCardRefundSucceeded$inboundSchema,
    GiftCardRefundSucceeded$Outbound,
    GiftCardRefundSucceeded$outboundSchema,
} from "./giftcardrefundsucceeded.js";
import {
    NetworkTokenCryptogramProvisionFailed,
    NetworkTokenCryptogramProvisionFailed$inboundSchema,
    NetworkTokenCryptogramProvisionFailed$Outbound,
    NetworkTokenCryptogramProvisionFailed$outboundSchema,
} from "./networktokencryptogramprovisionfailed.js";
import {
    NetworkTokenCryptogramProvisionSucceeded,
    NetworkTokenCryptogramProvisionSucceeded$inboundSchema,
    NetworkTokenCryptogramProvisionSucceeded$Outbound,
    NetworkTokenCryptogramProvisionSucceeded$outboundSchema,
} from "./networktokencryptogramprovisionsucceeded.js";
import {
    NetworkTokenProvisionFailed,
    NetworkTokenProvisionFailed$inboundSchema,
    NetworkTokenProvisionFailed$Outbound,
    NetworkTokenProvisionFailed$outboundSchema,
} from "./networktokenprovisionfailed.js";
import {
    NetworkTokenProvisionSucceeded,
    NetworkTokenProvisionSucceeded$inboundSchema,
    NetworkTokenProvisionSucceeded$Outbound,
    NetworkTokenProvisionSucceeded$outboundSchema,
} from "./networktokenprovisionsucceeded.js";
import {
    PaymentConnectorExternalTransactionRequest,
    PaymentConnectorExternalTransactionRequest$inboundSchema,
    PaymentConnectorExternalTransactionRequest$Outbound,
    PaymentConnectorExternalTransactionRequest$outboundSchema,
} from "./paymentconnectorexternaltransactionrequest.js";
import {
    PaymentConnectorResponseTransactionAuthorizationFailedEvent,
    PaymentConnectorResponseTransactionAuthorizationFailedEvent$inboundSchema,
    PaymentConnectorResponseTransactionAuthorizationFailedEvent$Outbound,
    PaymentConnectorResponseTransactionAuthorizationFailedEvent$outboundSchema,
} from "./paymentconnectorresponsetransactionauthorizationfailedevent.js";
import {
    PaymentConnectorResponseTransactionAuthorizationSucceededEvent,
    PaymentConnectorResponseTransactionAuthorizationSucceededEvent$inboundSchema,
    PaymentConnectorResponseTransactionAuthorizationSucceededEvent$Outbound,
    PaymentConnectorResponseTransactionAuthorizationSucceededEvent$outboundSchema,
} from "./paymentconnectorresponsetransactionauthorizationsucceededevent.js";
import {
    PaymentConnectorResponseTransactionCaptureDeclinedEvent,
    PaymentConnectorResponseTransactionCaptureDeclinedEvent$inboundSchema,
    PaymentConnectorResponseTransactionCaptureDeclinedEvent$Outbound,
    PaymentConnectorResponseTransactionCaptureDeclinedEvent$outboundSchema,
} from "./paymentconnectorresponsetransactioncapturedeclinedevent.js";
import {
    PaymentConnectorResponseTransactionCaptureFailedEvent,
    PaymentConnectorResponseTransactionCaptureFailedEvent$inboundSchema,
    PaymentConnectorResponseTransactionCaptureFailedEvent$Outbound,
    PaymentConnectorResponseTransactionCaptureFailedEvent$outboundSchema,
} from "./paymentconnectorresponsetransactioncapturefailedevent.js";
import {
    PaymentConnectorResponseTransactionCaptureSucceededEvent,
    PaymentConnectorResponseTransactionCaptureSucceededEvent$inboundSchema,
    PaymentConnectorResponseTransactionCaptureSucceededEvent$Outbound,
    PaymentConnectorResponseTransactionCaptureSucceededEvent$outboundSchema,
} from "./paymentconnectorresponsetransactioncapturesucceededevent.js";
import {
    PaymentConnectorResponseTransactionDeclinedEvent,
    PaymentConnectorResponseTransactionDeclinedEvent$inboundSchema,
    PaymentConnectorResponseTransactionDeclinedEvent$Outbound,
    PaymentConnectorResponseTransactionDeclinedEvent$outboundSchema,
} from "./paymentconnectorresponsetransactiondeclinedevent.js";
import {
    PaymentConnectorResponseTransactionVoidDeclinedEvent,
    PaymentConnectorResponseTransactionVoidDeclinedEvent$inboundSchema,
    PaymentConnectorResponseTransactionVoidDeclinedEvent$Outbound,
    PaymentConnectorResponseTransactionVoidDeclinedEvent$outboundSchema,
} from "./paymentconnectorresponsetransactionvoiddeclinedevent.js";
import {
    PaymentConnectorResponseTransactionVoidFailedEvent,
    PaymentConnectorResponseTransactionVoidFailedEvent$inboundSchema,
    PaymentConnectorResponseTransactionVoidFailedEvent$Outbound,
    PaymentConnectorResponseTransactionVoidFailedEvent$outboundSchema,
} from "./paymentconnectorresponsetransactionvoidfailedevent.js";
import {
    PaymentConnectorResponseTransactionVoidSucceededEvent,
    PaymentConnectorResponseTransactionVoidSucceededEvent$inboundSchema,
    PaymentConnectorResponseTransactionVoidSucceededEvent$Outbound,
    PaymentConnectorResponseTransactionVoidSucceededEvent$outboundSchema,
} from "./paymentconnectorresponsetransactionvoidsucceededevent.js";
import {
    ThreeDSecureAuthenticationRequestEvent,
    ThreeDSecureAuthenticationRequestEvent$inboundSchema,
    ThreeDSecureAuthenticationRequestEvent$Outbound,
    ThreeDSecureAuthenticationRequestEvent$outboundSchema,
} from "./threedsecureauthenticationrequestevent.js";
import {
    ThreeDSecurePreparationRequestEvent,
    ThreeDSecurePreparationRequestEvent$inboundSchema,
    ThreeDSecurePreparationRequestEvent$Outbound,
    ThreeDSecurePreparationRequestEvent$outboundSchema,
} from "./threedsecurepreparationrequestevent.js";
import {
    ThreeDSecureRequestErrorEvent,
    ThreeDSecureRequestErrorEvent$inboundSchema,
    ThreeDSecureRequestErrorEvent$Outbound,
    ThreeDSecureRequestErrorEvent$outboundSchema,
} from "./threedsecurerequesterrorevent.js";
import {
    ThreeDSecureResultRequestEvent,
    ThreeDSecureResultRequestEvent$inboundSchema,
    ThreeDSecureResultRequestEvent$Outbound,
    ThreeDSecureResultRequestEvent$outboundSchema,
} from "./threedsecureresultrequestevent.js";
import {
    ThreeDSecureSuccessEvent,
    ThreeDSecureSuccessEvent$inboundSchema,
    ThreeDSecureSuccessEvent$Outbound,
    ThreeDSecureSuccessEvent$outboundSchema,
} from "./threedsecuresuccessevent.js";
import * as z from "zod";

export type Items =
    | BINLookupRequest
    | ThreeDSecureAuthenticationRequestEvent
    | ThreeDSecureSuccessEvent
    | ThreeDSecureRequestErrorEvent
    | ThreeDSecurePreparationRequestEvent
    | ThreeDSecureResultRequestEvent
    | AntiFraudDecisionEvent
    | AntiFraudDecisionErrorEvent
    | AntiFraudDecisionSkippedEvent
    | AntiFraudDecisionUpdateEvent
    | AntiFraudDecisionUpdateErrorEvent
    | AntiFraudTransactionStatusUpdateEvent
    | AntiFraudTransactionStatusUpdateErrorEvent
    | AntiFraudWebhookEvent
    | DigitalWalletApplePayTokenDecrypted
    | DigitalWalletClickToPayTokenDecrypted
    | DigitalWalletGooglePayTokenDecrypted
    | GiftCardRedemptionFailed
    | GiftCardRedemptionSucceeded
    | GiftCardRefundFailed
    | GiftCardRefundSucceeded
    | NetworkTokenCryptogramProvisionFailed
    | NetworkTokenCryptogramProvisionSucceeded
    | NetworkTokenProvisionFailed
    | NetworkTokenProvisionSucceeded
    | PaymentConnectorResponseTransactionAuthorizationSucceededEvent
    | PaymentConnectorResponseTransactionDeclinedEvent
    | PaymentConnectorResponseTransactionAuthorizationFailedEvent
    | PaymentConnectorResponseTransactionCaptureDeclinedEvent
    | PaymentConnectorResponseTransactionCaptureFailedEvent
    | PaymentConnectorResponseTransactionCaptureSucceededEvent
    | PaymentConnectorResponseTransactionVoidDeclinedEvent
    | PaymentConnectorResponseTransactionVoidFailedEvent
    | PaymentConnectorResponseTransactionVoidSucceededEvent
    | PaymentConnectorExternalTransactionRequest;

/**
 * A list of transaction history events.
 */
export type TransactionHistoryEvents = {
    /**
     * A list of events related to processing a transaction.
     */
    items?:
        | Array<
              | BINLookupRequest
              | ThreeDSecureAuthenticationRequestEvent
              | ThreeDSecureSuccessEvent
              | ThreeDSecureRequestErrorEvent
              | ThreeDSecurePreparationRequestEvent
              | ThreeDSecureResultRequestEvent
              | AntiFraudDecisionEvent
              | AntiFraudDecisionErrorEvent
              | AntiFraudDecisionSkippedEvent
              | AntiFraudDecisionUpdateEvent
              | AntiFraudDecisionUpdateErrorEvent
              | AntiFraudTransactionStatusUpdateEvent
              | AntiFraudTransactionStatusUpdateErrorEvent
              | AntiFraudWebhookEvent
              | DigitalWalletApplePayTokenDecrypted
              | DigitalWalletClickToPayTokenDecrypted
              | DigitalWalletGooglePayTokenDecrypted
              | GiftCardRedemptionFailed
              | GiftCardRedemptionSucceeded
              | GiftCardRefundFailed
              | GiftCardRefundSucceeded
              | NetworkTokenCryptogramProvisionFailed
              | NetworkTokenCryptogramProvisionSucceeded
              | NetworkTokenProvisionFailed
              | NetworkTokenProvisionSucceeded
              | PaymentConnectorResponseTransactionAuthorizationSucceededEvent
              | PaymentConnectorResponseTransactionDeclinedEvent
              | PaymentConnectorResponseTransactionAuthorizationFailedEvent
              | PaymentConnectorResponseTransactionCaptureDeclinedEvent
              | PaymentConnectorResponseTransactionCaptureFailedEvent
              | PaymentConnectorResponseTransactionCaptureSucceededEvent
              | PaymentConnectorResponseTransactionVoidDeclinedEvent
              | PaymentConnectorResponseTransactionVoidFailedEvent
              | PaymentConnectorResponseTransactionVoidSucceededEvent
              | PaymentConnectorExternalTransactionRequest
          >
        | undefined;
    /**
     * The limit applied to request. This represents the number of items that are at
     *
     * @remarks
     * maximum returned by this request.
     */
    limit?: number | undefined;
    /**
     * The cursor that represents the next page of results. Use the `cursor` query
     *
     * @remarks
     * parameter to fetch this page of items.
     */
    nextCursor?: string | null | undefined;
    /**
     * The cursor that represents the next page of results. Use the `cursor` query
     *
     * @remarks
     * parameter to fetch this page of items.
     */
    previousCursor?: string | null | undefined;
};

/** @internal */
export const Items$inboundSchema: z.ZodType<Items, z.ZodTypeDef, unknown> = z.union([
    BINLookupRequest$inboundSchema,
    ThreeDSecureAuthenticationRequestEvent$inboundSchema,
    ThreeDSecureSuccessEvent$inboundSchema,
    ThreeDSecureRequestErrorEvent$inboundSchema,
    ThreeDSecurePreparationRequestEvent$inboundSchema,
    ThreeDSecureResultRequestEvent$inboundSchema,
    AntiFraudDecisionEvent$inboundSchema,
    AntiFraudDecisionErrorEvent$inboundSchema,
    AntiFraudDecisionSkippedEvent$inboundSchema,
    AntiFraudDecisionUpdateEvent$inboundSchema,
    AntiFraudDecisionUpdateErrorEvent$inboundSchema,
    AntiFraudTransactionStatusUpdateEvent$inboundSchema,
    AntiFraudTransactionStatusUpdateErrorEvent$inboundSchema,
    AntiFraudWebhookEvent$inboundSchema,
    DigitalWalletApplePayTokenDecrypted$inboundSchema,
    DigitalWalletClickToPayTokenDecrypted$inboundSchema,
    DigitalWalletGooglePayTokenDecrypted$inboundSchema,
    GiftCardRedemptionFailed$inboundSchema,
    GiftCardRedemptionSucceeded$inboundSchema,
    GiftCardRefundFailed$inboundSchema,
    GiftCardRefundSucceeded$inboundSchema,
    NetworkTokenCryptogramProvisionFailed$inboundSchema,
    NetworkTokenCryptogramProvisionSucceeded$inboundSchema,
    NetworkTokenProvisionFailed$inboundSchema,
    NetworkTokenProvisionSucceeded$inboundSchema,
    PaymentConnectorResponseTransactionAuthorizationSucceededEvent$inboundSchema,
    PaymentConnectorResponseTransactionDeclinedEvent$inboundSchema,
    PaymentConnectorResponseTransactionAuthorizationFailedEvent$inboundSchema,
    PaymentConnectorResponseTransactionCaptureDeclinedEvent$inboundSchema,
    PaymentConnectorResponseTransactionCaptureFailedEvent$inboundSchema,
    PaymentConnectorResponseTransactionCaptureSucceededEvent$inboundSchema,
    PaymentConnectorResponseTransactionVoidDeclinedEvent$inboundSchema,
    PaymentConnectorResponseTransactionVoidFailedEvent$inboundSchema,
    PaymentConnectorResponseTransactionVoidSucceededEvent$inboundSchema,
    PaymentConnectorExternalTransactionRequest$inboundSchema,
]);

/** @internal */
export type Items$Outbound =
    | BINLookupRequest$Outbound
    | ThreeDSecureAuthenticationRequestEvent$Outbound
    | ThreeDSecureSuccessEvent$Outbound
    | ThreeDSecureRequestErrorEvent$Outbound
    | ThreeDSecurePreparationRequestEvent$Outbound
    | ThreeDSecureResultRequestEvent$Outbound
    | AntiFraudDecisionEvent$Outbound
    | AntiFraudDecisionErrorEvent$Outbound
    | AntiFraudDecisionSkippedEvent$Outbound
    | AntiFraudDecisionUpdateEvent$Outbound
    | AntiFraudDecisionUpdateErrorEvent$Outbound
    | AntiFraudTransactionStatusUpdateEvent$Outbound
    | AntiFraudTransactionStatusUpdateErrorEvent$Outbound
    | AntiFraudWebhookEvent$Outbound
    | DigitalWalletApplePayTokenDecrypted$Outbound
    | DigitalWalletClickToPayTokenDecrypted$Outbound
    | DigitalWalletGooglePayTokenDecrypted$Outbound
    | GiftCardRedemptionFailed$Outbound
    | GiftCardRedemptionSucceeded$Outbound
    | GiftCardRefundFailed$Outbound
    | GiftCardRefundSucceeded$Outbound
    | NetworkTokenCryptogramProvisionFailed$Outbound
    | NetworkTokenCryptogramProvisionSucceeded$Outbound
    | NetworkTokenProvisionFailed$Outbound
    | NetworkTokenProvisionSucceeded$Outbound
    | PaymentConnectorResponseTransactionAuthorizationSucceededEvent$Outbound
    | PaymentConnectorResponseTransactionDeclinedEvent$Outbound
    | PaymentConnectorResponseTransactionAuthorizationFailedEvent$Outbound
    | PaymentConnectorResponseTransactionCaptureDeclinedEvent$Outbound
    | PaymentConnectorResponseTransactionCaptureFailedEvent$Outbound
    | PaymentConnectorResponseTransactionCaptureSucceededEvent$Outbound
    | PaymentConnectorResponseTransactionVoidDeclinedEvent$Outbound
    | PaymentConnectorResponseTransactionVoidFailedEvent$Outbound
    | PaymentConnectorResponseTransactionVoidSucceededEvent$Outbound
    | PaymentConnectorExternalTransactionRequest$Outbound;

/** @internal */
export const Items$outboundSchema: z.ZodType<Items$Outbound, z.ZodTypeDef, Items> = z.union([
    BINLookupRequest$outboundSchema,
    ThreeDSecureAuthenticationRequestEvent$outboundSchema,
    ThreeDSecureSuccessEvent$outboundSchema,
    ThreeDSecureRequestErrorEvent$outboundSchema,
    ThreeDSecurePreparationRequestEvent$outboundSchema,
    ThreeDSecureResultRequestEvent$outboundSchema,
    AntiFraudDecisionEvent$outboundSchema,
    AntiFraudDecisionErrorEvent$outboundSchema,
    AntiFraudDecisionSkippedEvent$outboundSchema,
    AntiFraudDecisionUpdateEvent$outboundSchema,
    AntiFraudDecisionUpdateErrorEvent$outboundSchema,
    AntiFraudTransactionStatusUpdateEvent$outboundSchema,
    AntiFraudTransactionStatusUpdateErrorEvent$outboundSchema,
    AntiFraudWebhookEvent$outboundSchema,
    DigitalWalletApplePayTokenDecrypted$outboundSchema,
    DigitalWalletClickToPayTokenDecrypted$outboundSchema,
    DigitalWalletGooglePayTokenDecrypted$outboundSchema,
    GiftCardRedemptionFailed$outboundSchema,
    GiftCardRedemptionSucceeded$outboundSchema,
    GiftCardRefundFailed$outboundSchema,
    GiftCardRefundSucceeded$outboundSchema,
    NetworkTokenCryptogramProvisionFailed$outboundSchema,
    NetworkTokenCryptogramProvisionSucceeded$outboundSchema,
    NetworkTokenProvisionFailed$outboundSchema,
    NetworkTokenProvisionSucceeded$outboundSchema,
    PaymentConnectorResponseTransactionAuthorizationSucceededEvent$outboundSchema,
    PaymentConnectorResponseTransactionDeclinedEvent$outboundSchema,
    PaymentConnectorResponseTransactionAuthorizationFailedEvent$outboundSchema,
    PaymentConnectorResponseTransactionCaptureDeclinedEvent$outboundSchema,
    PaymentConnectorResponseTransactionCaptureFailedEvent$outboundSchema,
    PaymentConnectorResponseTransactionCaptureSucceededEvent$outboundSchema,
    PaymentConnectorResponseTransactionVoidDeclinedEvent$outboundSchema,
    PaymentConnectorResponseTransactionVoidFailedEvent$outboundSchema,
    PaymentConnectorResponseTransactionVoidSucceededEvent$outboundSchema,
    PaymentConnectorExternalTransactionRequest$outboundSchema,
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Items$ {
    /** @deprecated use `Items$inboundSchema` instead. */
    export const inboundSchema = Items$inboundSchema;
    /** @deprecated use `Items$outboundSchema` instead. */
    export const outboundSchema = Items$outboundSchema;
    /** @deprecated use `Items$Outbound` instead. */
    export type Outbound = Items$Outbound;
}

/** @internal */
export const TransactionHistoryEvents$inboundSchema: z.ZodType<
    TransactionHistoryEvents,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        items: z
            .array(
                z.union([
                    BINLookupRequest$inboundSchema,
                    ThreeDSecureAuthenticationRequestEvent$inboundSchema,
                    ThreeDSecureSuccessEvent$inboundSchema,
                    ThreeDSecureRequestErrorEvent$inboundSchema,
                    ThreeDSecurePreparationRequestEvent$inboundSchema,
                    ThreeDSecureResultRequestEvent$inboundSchema,
                    AntiFraudDecisionEvent$inboundSchema,
                    AntiFraudDecisionErrorEvent$inboundSchema,
                    AntiFraudDecisionSkippedEvent$inboundSchema,
                    AntiFraudDecisionUpdateEvent$inboundSchema,
                    AntiFraudDecisionUpdateErrorEvent$inboundSchema,
                    AntiFraudTransactionStatusUpdateEvent$inboundSchema,
                    AntiFraudTransactionStatusUpdateErrorEvent$inboundSchema,
                    AntiFraudWebhookEvent$inboundSchema,
                    DigitalWalletApplePayTokenDecrypted$inboundSchema,
                    DigitalWalletClickToPayTokenDecrypted$inboundSchema,
                    DigitalWalletGooglePayTokenDecrypted$inboundSchema,
                    GiftCardRedemptionFailed$inboundSchema,
                    GiftCardRedemptionSucceeded$inboundSchema,
                    GiftCardRefundFailed$inboundSchema,
                    GiftCardRefundSucceeded$inboundSchema,
                    NetworkTokenCryptogramProvisionFailed$inboundSchema,
                    NetworkTokenCryptogramProvisionSucceeded$inboundSchema,
                    NetworkTokenProvisionFailed$inboundSchema,
                    NetworkTokenProvisionSucceeded$inboundSchema,
                    PaymentConnectorResponseTransactionAuthorizationSucceededEvent$inboundSchema,
                    PaymentConnectorResponseTransactionDeclinedEvent$inboundSchema,
                    PaymentConnectorResponseTransactionAuthorizationFailedEvent$inboundSchema,
                    PaymentConnectorResponseTransactionCaptureDeclinedEvent$inboundSchema,
                    PaymentConnectorResponseTransactionCaptureFailedEvent$inboundSchema,
                    PaymentConnectorResponseTransactionCaptureSucceededEvent$inboundSchema,
                    PaymentConnectorResponseTransactionVoidDeclinedEvent$inboundSchema,
                    PaymentConnectorResponseTransactionVoidFailedEvent$inboundSchema,
                    PaymentConnectorResponseTransactionVoidSucceededEvent$inboundSchema,
                    PaymentConnectorExternalTransactionRequest$inboundSchema,
                ])
            )
            .optional(),
        limit: z.number().int().default(20),
        next_cursor: z.nullable(z.string()).optional(),
        previous_cursor: z.nullable(z.string()).optional(),
    })
    .transform((v) => {
        return remap$(v, {
            next_cursor: "nextCursor",
            previous_cursor: "previousCursor",
        });
    });

/** @internal */
export type TransactionHistoryEvents$Outbound = {
    items?:
        | Array<
              | BINLookupRequest$Outbound
              | ThreeDSecureAuthenticationRequestEvent$Outbound
              | ThreeDSecureSuccessEvent$Outbound
              | ThreeDSecureRequestErrorEvent$Outbound
              | ThreeDSecurePreparationRequestEvent$Outbound
              | ThreeDSecureResultRequestEvent$Outbound
              | AntiFraudDecisionEvent$Outbound
              | AntiFraudDecisionErrorEvent$Outbound
              | AntiFraudDecisionSkippedEvent$Outbound
              | AntiFraudDecisionUpdateEvent$Outbound
              | AntiFraudDecisionUpdateErrorEvent$Outbound
              | AntiFraudTransactionStatusUpdateEvent$Outbound
              | AntiFraudTransactionStatusUpdateErrorEvent$Outbound
              | AntiFraudWebhookEvent$Outbound
              | DigitalWalletApplePayTokenDecrypted$Outbound
              | DigitalWalletClickToPayTokenDecrypted$Outbound
              | DigitalWalletGooglePayTokenDecrypted$Outbound
              | GiftCardRedemptionFailed$Outbound
              | GiftCardRedemptionSucceeded$Outbound
              | GiftCardRefundFailed$Outbound
              | GiftCardRefundSucceeded$Outbound
              | NetworkTokenCryptogramProvisionFailed$Outbound
              | NetworkTokenCryptogramProvisionSucceeded$Outbound
              | NetworkTokenProvisionFailed$Outbound
              | NetworkTokenProvisionSucceeded$Outbound
              | PaymentConnectorResponseTransactionAuthorizationSucceededEvent$Outbound
              | PaymentConnectorResponseTransactionDeclinedEvent$Outbound
              | PaymentConnectorResponseTransactionAuthorizationFailedEvent$Outbound
              | PaymentConnectorResponseTransactionCaptureDeclinedEvent$Outbound
              | PaymentConnectorResponseTransactionCaptureFailedEvent$Outbound
              | PaymentConnectorResponseTransactionCaptureSucceededEvent$Outbound
              | PaymentConnectorResponseTransactionVoidDeclinedEvent$Outbound
              | PaymentConnectorResponseTransactionVoidFailedEvent$Outbound
              | PaymentConnectorResponseTransactionVoidSucceededEvent$Outbound
              | PaymentConnectorExternalTransactionRequest$Outbound
          >
        | undefined;
    limit: number;
    next_cursor?: string | null | undefined;
    previous_cursor?: string | null | undefined;
};

/** @internal */
export const TransactionHistoryEvents$outboundSchema: z.ZodType<
    TransactionHistoryEvents$Outbound,
    z.ZodTypeDef,
    TransactionHistoryEvents
> = z
    .object({
        items: z
            .array(
                z.union([
                    BINLookupRequest$outboundSchema,
                    ThreeDSecureAuthenticationRequestEvent$outboundSchema,
                    ThreeDSecureSuccessEvent$outboundSchema,
                    ThreeDSecureRequestErrorEvent$outboundSchema,
                    ThreeDSecurePreparationRequestEvent$outboundSchema,
                    ThreeDSecureResultRequestEvent$outboundSchema,
                    AntiFraudDecisionEvent$outboundSchema,
                    AntiFraudDecisionErrorEvent$outboundSchema,
                    AntiFraudDecisionSkippedEvent$outboundSchema,
                    AntiFraudDecisionUpdateEvent$outboundSchema,
                    AntiFraudDecisionUpdateErrorEvent$outboundSchema,
                    AntiFraudTransactionStatusUpdateEvent$outboundSchema,
                    AntiFraudTransactionStatusUpdateErrorEvent$outboundSchema,
                    AntiFraudWebhookEvent$outboundSchema,
                    DigitalWalletApplePayTokenDecrypted$outboundSchema,
                    DigitalWalletClickToPayTokenDecrypted$outboundSchema,
                    DigitalWalletGooglePayTokenDecrypted$outboundSchema,
                    GiftCardRedemptionFailed$outboundSchema,
                    GiftCardRedemptionSucceeded$outboundSchema,
                    GiftCardRefundFailed$outboundSchema,
                    GiftCardRefundSucceeded$outboundSchema,
                    NetworkTokenCryptogramProvisionFailed$outboundSchema,
                    NetworkTokenCryptogramProvisionSucceeded$outboundSchema,
                    NetworkTokenProvisionFailed$outboundSchema,
                    NetworkTokenProvisionSucceeded$outboundSchema,
                    PaymentConnectorResponseTransactionAuthorizationSucceededEvent$outboundSchema,
                    PaymentConnectorResponseTransactionDeclinedEvent$outboundSchema,
                    PaymentConnectorResponseTransactionAuthorizationFailedEvent$outboundSchema,
                    PaymentConnectorResponseTransactionCaptureDeclinedEvent$outboundSchema,
                    PaymentConnectorResponseTransactionCaptureFailedEvent$outboundSchema,
                    PaymentConnectorResponseTransactionCaptureSucceededEvent$outboundSchema,
                    PaymentConnectorResponseTransactionVoidDeclinedEvent$outboundSchema,
                    PaymentConnectorResponseTransactionVoidFailedEvent$outboundSchema,
                    PaymentConnectorResponseTransactionVoidSucceededEvent$outboundSchema,
                    PaymentConnectorExternalTransactionRequest$outboundSchema,
                ])
            )
            .optional(),
        limit: z.number().int().default(20),
        nextCursor: z.nullable(z.string()).optional(),
        previousCursor: z.nullable(z.string()).optional(),
    })
    .transform((v) => {
        return remap$(v, {
            nextCursor: "next_cursor",
            previousCursor: "previous_cursor",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace TransactionHistoryEvents$ {
    /** @deprecated use `TransactionHistoryEvents$inboundSchema` instead. */
    export const inboundSchema = TransactionHistoryEvents$inboundSchema;
    /** @deprecated use `TransactionHistoryEvents$outboundSchema` instead. */
    export const outboundSchema = TransactionHistoryEvents$outboundSchema;
    /** @deprecated use `TransactionHistoryEvents$Outbound` instead. */
    export type Outbound = TransactionHistoryEvents$Outbound;
}

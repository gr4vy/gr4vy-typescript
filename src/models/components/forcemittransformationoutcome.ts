/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { ClosedEnum } from "../../types/enums.js";
import * as z from "zod";

/**
 * The name of the transformation. This will always be `force_mit`.
 */
export const ForceMITTransformationOutcomeName = {
    ForceMit: "force_mit",
} as const;
/**
 * The name of the transformation. This will always be `force_mit`.
 */
export type ForceMITTransformationOutcomeName = ClosedEnum<
    typeof ForceMITTransformationOutcomeName
>;

/**
 * Transformation to be applied when for card transaction
 *
 * @remarks
 * flow/routing action outcome.
 *
 * This transformation forces the processing of a
 * transaction as an MIT one.
 *
 * If the request to create a transaction was for MIT,
 * i.e. `merchant_initiated=true`, this transformation
 * won't have any effect.
 */
export type ForceMITTransformationOutcome = {
    /**
     * The name of the transformation. This will always be `force_mit`.
     */
    name?: ForceMITTransformationOutcomeName | undefined;
};

/** @internal */
export const ForceMITTransformationOutcomeName$inboundSchema: z.ZodNativeEnum<
    typeof ForceMITTransformationOutcomeName
> = z.nativeEnum(ForceMITTransformationOutcomeName);

/** @internal */
export const ForceMITTransformationOutcomeName$outboundSchema: z.ZodNativeEnum<
    typeof ForceMITTransformationOutcomeName
> = ForceMITTransformationOutcomeName$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ForceMITTransformationOutcomeName$ {
    /** @deprecated use `ForceMITTransformationOutcomeName$inboundSchema` instead. */
    export const inboundSchema = ForceMITTransformationOutcomeName$inboundSchema;
    /** @deprecated use `ForceMITTransformationOutcomeName$outboundSchema` instead. */
    export const outboundSchema = ForceMITTransformationOutcomeName$outboundSchema;
}

/** @internal */
export const ForceMITTransformationOutcome$inboundSchema: z.ZodType<
    ForceMITTransformationOutcome,
    z.ZodTypeDef,
    unknown
> = z.object({
    name: ForceMITTransformationOutcomeName$inboundSchema.optional(),
});

/** @internal */
export type ForceMITTransformationOutcome$Outbound = {
    name?: string | undefined;
};

/** @internal */
export const ForceMITTransformationOutcome$outboundSchema: z.ZodType<
    ForceMITTransformationOutcome$Outbound,
    z.ZodTypeDef,
    ForceMITTransformationOutcome
> = z.object({
    name: ForceMITTransformationOutcomeName$outboundSchema.optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ForceMITTransformationOutcome$ {
    /** @deprecated use `ForceMITTransformationOutcome$inboundSchema` instead. */
    export const inboundSchema = ForceMITTransformationOutcome$inboundSchema;
    /** @deprecated use `ForceMITTransformationOutcome$outboundSchema` instead. */
    export const outboundSchema = ForceMITTransformationOutcome$outboundSchema;
    /** @deprecated use `ForceMITTransformationOutcome$Outbound` instead. */
    export type Outbound = ForceMITTransformationOutcome$Outbound;
}

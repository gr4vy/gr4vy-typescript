/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { GiftCardSnapshot, GiftCardSnapshot$ } from "./giftcardsnapshot";
import * as z from "zod";

/**
 * The type of this resource.
 */
export enum GiftCardRedemptionType {
    GiftCardRedemption = "gift-card-redemption",
}

/**
 * The status of the gift card redemption for the `payment_method`.
 */
export enum GiftCardRedemptionStatus {
    Created = "created",
    Succeeded = "succeeded",
    Failed = "failed",
    Skipped = "skipped",
}

/**
 * If this gift card redemption resulted in an error, this will
 *
 * @remarks
 * contain the internal code for the error.
 */
export enum ErrorCode {
    ExpiredCard = "expired_card",
    InactiveCard = "inactive_card",
    IncorrectCurrency = "incorrect_currency",
    InsufficientFunds = "insufficient_funds",
    InvalidAmount = "invalid_amount",
    InvalidGiftCard = "invalid_gift_card",
    InvalidServiceConfiguration = "invalid_service_configuration",
    InvalidServiceCredentials = "invalid_service_credentials",
    OperationCanceled = "operation_canceled",
    ServiceError = "service_error",
    ServiceNetworkError = "service_network_error",
    UnknownError = "unknown_error",
}

/**
 * A redemption of a gift card used in a transaction.
 */
export type GiftCardRedemption = {
    /**
     * The type of this resource.
     */
    type?: GiftCardRedemptionType | undefined;
    /**
     * The ID of this gift card redemption. This may be `null` if the
     *
     * @remarks
     * no redemption happened.
     */
    id?: string | null | undefined;
    /**
     * The status of the gift card redemption for the `payment_method`.
     */
    status?: GiftCardRedemptionStatus | undefined;
    /**
     * The amount redeemed for this gift card.
     */
    amount?: number | undefined;
    /**
     * The amount refunded for this gift card. This can not be larger
     *
     * @remarks
     * than `amount`.
     */
    refundedAmount?: number | undefined;
    /**
     * The gift card service's unique ID for the redemption.
     */
    giftCardServiceRedemptionId?: string | null | undefined;
    /**
     * If this gift card redemption resulted in an error, this will
     *
     * @remarks
     * contain the internal code for the error.
     */
    errorCode?: ErrorCode | null | undefined;
    /**
     * If this gift card redemption resulted in an error, this will
     *
     * @remarks
     * contain the raw error code received from the gift card provider.
     */
    rawErrorCode?: string | null | undefined;
    /**
     * If this gift card redemption resulted in an error, this will
     *
     * @remarks
     * contain the raw error message received from the gift card provider.
     */
    rawErrorMessage?: string | null | undefined;
    /**
     * A snapshot of a gift card used in a transaction.
     */
    giftCard?: GiftCardSnapshot | undefined;
};

/** @internal */
export const GiftCardRedemptionType$: z.ZodNativeEnum<typeof GiftCardRedemptionType> =
    z.nativeEnum(GiftCardRedemptionType);

/** @internal */
export const GiftCardRedemptionStatus$: z.ZodNativeEnum<typeof GiftCardRedemptionStatus> =
    z.nativeEnum(GiftCardRedemptionStatus);

/** @internal */
export const ErrorCode$: z.ZodNativeEnum<typeof ErrorCode> = z.nativeEnum(ErrorCode);

/** @internal */
export namespace GiftCardRedemption$ {
    export type Inbound = {
        type?: GiftCardRedemptionType | undefined;
        id?: string | null | undefined;
        status?: GiftCardRedemptionStatus | undefined;
        amount?: number | undefined;
        refunded_amount?: number | undefined;
        gift_card_service_redemption_id?: string | null | undefined;
        error_code?: ErrorCode | null | undefined;
        raw_error_code?: string | null | undefined;
        raw_error_message?: string | null | undefined;
        gift_card?: GiftCardSnapshot$.Inbound | undefined;
    };

    export const inboundSchema: z.ZodType<GiftCardRedemption, z.ZodTypeDef, Inbound> = z
        .object({
            type: GiftCardRedemptionType$.optional(),
            id: z.nullable(z.string()).optional(),
            status: GiftCardRedemptionStatus$.optional(),
            amount: z.number().int().optional(),
            refunded_amount: z.number().int().optional(),
            gift_card_service_redemption_id: z.nullable(z.string()).optional(),
            error_code: z.nullable(ErrorCode$).optional(),
            raw_error_code: z.nullable(z.string()).optional(),
            raw_error_message: z.nullable(z.string()).optional(),
            gift_card: GiftCardSnapshot$.inboundSchema.optional(),
        })
        .transform((v) => {
            return {
                ...(v.type === undefined ? null : { type: v.type }),
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.status === undefined ? null : { status: v.status }),
                ...(v.amount === undefined ? null : { amount: v.amount }),
                ...(v.refunded_amount === undefined ? null : { refundedAmount: v.refunded_amount }),
                ...(v.gift_card_service_redemption_id === undefined
                    ? null
                    : { giftCardServiceRedemptionId: v.gift_card_service_redemption_id }),
                ...(v.error_code === undefined ? null : { errorCode: v.error_code }),
                ...(v.raw_error_code === undefined ? null : { rawErrorCode: v.raw_error_code }),
                ...(v.raw_error_message === undefined
                    ? null
                    : { rawErrorMessage: v.raw_error_message }),
                ...(v.gift_card === undefined ? null : { giftCard: v.gift_card }),
            };
        });

    export type Outbound = {
        type?: GiftCardRedemptionType | undefined;
        id?: string | null | undefined;
        status?: GiftCardRedemptionStatus | undefined;
        amount?: number | undefined;
        refunded_amount?: number | undefined;
        gift_card_service_redemption_id?: string | null | undefined;
        error_code?: ErrorCode | null | undefined;
        raw_error_code?: string | null | undefined;
        raw_error_message?: string | null | undefined;
        gift_card?: GiftCardSnapshot$.Outbound | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, GiftCardRedemption> = z
        .object({
            type: GiftCardRedemptionType$.optional(),
            id: z.nullable(z.string()).optional(),
            status: GiftCardRedemptionStatus$.optional(),
            amount: z.number().int().optional(),
            refundedAmount: z.number().int().optional(),
            giftCardServiceRedemptionId: z.nullable(z.string()).optional(),
            errorCode: z.nullable(ErrorCode$).optional(),
            rawErrorCode: z.nullable(z.string()).optional(),
            rawErrorMessage: z.nullable(z.string()).optional(),
            giftCard: GiftCardSnapshot$.outboundSchema.optional(),
        })
        .transform((v) => {
            return {
                ...(v.type === undefined ? null : { type: v.type }),
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.status === undefined ? null : { status: v.status }),
                ...(v.amount === undefined ? null : { amount: v.amount }),
                ...(v.refundedAmount === undefined ? null : { refunded_amount: v.refundedAmount }),
                ...(v.giftCardServiceRedemptionId === undefined
                    ? null
                    : { gift_card_service_redemption_id: v.giftCardServiceRedemptionId }),
                ...(v.errorCode === undefined ? null : { error_code: v.errorCode }),
                ...(v.rawErrorCode === undefined ? null : { raw_error_code: v.rawErrorCode }),
                ...(v.rawErrorMessage === undefined
                    ? null
                    : { raw_error_message: v.rawErrorMessage }),
                ...(v.giftCard === undefined ? null : { gift_card: v.giftCard }),
            };
        });
}

/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives.js";
import {
    CartItem,
    CartItem$inboundSchema,
    CartItem$Outbound,
    CartItem$outboundSchema,
} from "./cartitem.js";
import {
    GuestBuyer,
    GuestBuyer$inboundSchema,
    GuestBuyer$Outbound,
    GuestBuyer$outboundSchema,
} from "./guestbuyer.js";
import * as z from "zod";

export type CheckoutSessionUpdateMetadata = {};

/**
 * Base model with JSON encoders.
 */
export type CheckoutSessionUpdate = {
    cartItems?: Array<CartItem> | undefined;
    metadata?: CheckoutSessionUpdateMetadata | undefined;
    /**
     * Request body for creating a new buyer
     */
    buyer?: GuestBuyer | undefined;
};

/** @internal */
export const CheckoutSessionUpdateMetadata$inboundSchema: z.ZodType<
    CheckoutSessionUpdateMetadata,
    z.ZodTypeDef,
    unknown
> = z.object({});

/** @internal */
export type CheckoutSessionUpdateMetadata$Outbound = {};

/** @internal */
export const CheckoutSessionUpdateMetadata$outboundSchema: z.ZodType<
    CheckoutSessionUpdateMetadata$Outbound,
    z.ZodTypeDef,
    CheckoutSessionUpdateMetadata
> = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CheckoutSessionUpdateMetadata$ {
    /** @deprecated use `CheckoutSessionUpdateMetadata$inboundSchema` instead. */
    export const inboundSchema = CheckoutSessionUpdateMetadata$inboundSchema;
    /** @deprecated use `CheckoutSessionUpdateMetadata$outboundSchema` instead. */
    export const outboundSchema = CheckoutSessionUpdateMetadata$outboundSchema;
    /** @deprecated use `CheckoutSessionUpdateMetadata$Outbound` instead. */
    export type Outbound = CheckoutSessionUpdateMetadata$Outbound;
}

/** @internal */
export const CheckoutSessionUpdate$inboundSchema: z.ZodType<
    CheckoutSessionUpdate,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        cart_items: z.array(CartItem$inboundSchema).optional(),
        metadata: z.lazy(() => CheckoutSessionUpdateMetadata$inboundSchema).optional(),
        buyer: GuestBuyer$inboundSchema.optional(),
    })
    .transform((v) => {
        return remap$(v, {
            cart_items: "cartItems",
        });
    });

/** @internal */
export type CheckoutSessionUpdate$Outbound = {
    cart_items?: Array<CartItem$Outbound> | undefined;
    metadata?: CheckoutSessionUpdateMetadata$Outbound | undefined;
    buyer?: GuestBuyer$Outbound | undefined;
};

/** @internal */
export const CheckoutSessionUpdate$outboundSchema: z.ZodType<
    CheckoutSessionUpdate$Outbound,
    z.ZodTypeDef,
    CheckoutSessionUpdate
> = z
    .object({
        cartItems: z.array(CartItem$outboundSchema).optional(),
        metadata: z.lazy(() => CheckoutSessionUpdateMetadata$outboundSchema).optional(),
        buyer: GuestBuyer$outboundSchema.optional(),
    })
    .transform((v) => {
        return remap$(v, {
            cartItems: "cart_items",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CheckoutSessionUpdate$ {
    /** @deprecated use `CheckoutSessionUpdate$inboundSchema` instead. */
    export const inboundSchema = CheckoutSessionUpdate$inboundSchema;
    /** @deprecated use `CheckoutSessionUpdate$outboundSchema` instead. */
    export const outboundSchema = CheckoutSessionUpdate$outboundSchema;
    /** @deprecated use `CheckoutSessionUpdate$Outbound` instead. */
    export type Outbound = CheckoutSessionUpdate$Outbound;
}

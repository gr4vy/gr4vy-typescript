/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  AdyenAutoRescueSepaScenariosEnum,
  AdyenAutoRescueSepaScenariosEnum$inboundSchema,
  AdyenAutoRescueSepaScenariosEnum$outboundSchema,
} from "./adyenautorescuesepascenariosenum.js";

export type AdyenSepaOptions = {
  /**
   * Set to `true` to enable Auto Rescue for a transaction. Use the `maxDaysToRescue` to specify a rescue window.
   */
  autoRescue?: boolean | null | undefined;
  /**
   * The rescue window for a transaction, in days, when `autoRescue` is set to `true`. You can specify a value between 1 and 48. For cards, the default is one calendar month. For SEPA, the default is 42 days.
   */
  maxDaysToRescue?: number | null | undefined;
  /**
   * Passes additional data to the Adyen API when creating a transaction.
   */
  additionalData?: { [k: string]: string } | null | undefined;
  /**
   * The rescue scenario to simulate for a transaction, when `autoRescue` is set to `true`.
   */
  autoRescueSepaScenario?: AdyenAutoRescueSepaScenariosEnum | null | undefined;
  /**
   * The name on the SEPA bank account.
   */
  ownerName?: string | null | undefined;
};

/** @internal */
export const AdyenSepaOptions$inboundSchema: z.ZodType<
  AdyenSepaOptions,
  z.ZodTypeDef,
  unknown
> = z.object({
  autoRescue: z.nullable(z.boolean()).optional(),
  maxDaysToRescue: z.nullable(z.number().int()).optional(),
  additionalData: z.nullable(z.record(z.string())).optional(),
  autoRescueSepaScenario: z.nullable(
    AdyenAutoRescueSepaScenariosEnum$inboundSchema,
  ).optional(),
  ownerName: z.nullable(z.string()).optional(),
});

/** @internal */
export type AdyenSepaOptions$Outbound = {
  autoRescue?: boolean | null | undefined;
  maxDaysToRescue?: number | null | undefined;
  additionalData?: { [k: string]: string } | null | undefined;
  autoRescueSepaScenario?: string | null | undefined;
  ownerName?: string | null | undefined;
};

/** @internal */
export const AdyenSepaOptions$outboundSchema: z.ZodType<
  AdyenSepaOptions$Outbound,
  z.ZodTypeDef,
  AdyenSepaOptions
> = z.object({
  autoRescue: z.nullable(z.boolean()).optional(),
  maxDaysToRescue: z.nullable(z.number().int()).optional(),
  additionalData: z.nullable(z.record(z.string())).optional(),
  autoRescueSepaScenario: z.nullable(
    AdyenAutoRescueSepaScenariosEnum$outboundSchema,
  ).optional(),
  ownerName: z.nullable(z.string()).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AdyenSepaOptions$ {
  /** @deprecated use `AdyenSepaOptions$inboundSchema` instead. */
  export const inboundSchema = AdyenSepaOptions$inboundSchema;
  /** @deprecated use `AdyenSepaOptions$outboundSchema` instead. */
  export const outboundSchema = AdyenSepaOptions$outboundSchema;
  /** @deprecated use `AdyenSepaOptions$Outbound` instead. */
  export type Outbound = AdyenSepaOptions$Outbound;
}

export function adyenSepaOptionsToJSON(
  adyenSepaOptions: AdyenSepaOptions,
): string {
  return JSON.stringify(
    AdyenSepaOptions$outboundSchema.parse(adyenSepaOptions),
  );
}

export function adyenSepaOptionsFromJSON(
  jsonString: string,
): SafeParseResult<AdyenSepaOptions, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => AdyenSepaOptions$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'AdyenSepaOptions' from JSON`,
  );
}

/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as z from "zod";

/**
 * The type of card, one of `credit`, `debit` or `prepaid`.
 */
export enum CardType {
    Credit = "credit",
    Debit = "debit",
    Prepaid = "prepaid",
}

/**
 * A credit or debit card payment method.
 */
export type PaymentMethodDetailsCard = {
    /**
     * The type of card, one of `credit`, `debit` or `prepaid`.
     */
    cardType?: CardType | undefined;
    /**
     * The first 6 digits of the full card number (the BIN).
     */
    bin?: string | undefined;
};

/** @internal */
export const CardType$ = z.nativeEnum(CardType);

/** @internal */
export namespace PaymentMethodDetailsCard$ {
    export type Inbound = {
        card_type?: CardType | undefined;
        bin?: string | undefined;
    };

    export const inboundSchema: z.ZodType<PaymentMethodDetailsCard, z.ZodTypeDef, Inbound> = z
        .object({
            card_type: CardType$.optional(),
            bin: z.string().optional(),
        })
        .transform((v) => {
            return {
                ...(v.card_type === undefined ? null : { cardType: v.card_type }),
                ...(v.bin === undefined ? null : { bin: v.bin }),
            };
        });

    export type Outbound = {
        card_type?: CardType | undefined;
        bin?: string | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, PaymentMethodDetailsCard> = z
        .object({
            cardType: CardType$.optional(),
            bin: z.string().optional(),
        })
        .transform((v) => {
            return {
                ...(v.cardType === undefined ? null : { card_type: v.cardType }),
                ...(v.bin === undefined ? null : { bin: v.bin }),
            };
        });
}

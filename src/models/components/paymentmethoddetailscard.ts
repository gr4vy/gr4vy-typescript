/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives.js";
import { ClosedEnum } from "../../types/enums.js";
import * as z from "zod";

/**
 * The type of card, one of `credit`, `debit` or `prepaid`.
 */
export const CardType = {
    Credit: "credit",
    Debit: "debit",
    Prepaid: "prepaid",
} as const;
/**
 * The type of card, one of `credit`, `debit` or `prepaid`.
 */
export type CardType = ClosedEnum<typeof CardType>;

/**
 * A credit or debit card payment method.
 */
export type PaymentMethodDetailsCard = {
    /**
     * The type of card, one of `credit`, `debit` or `prepaid`.
     */
    cardType?: CardType | undefined;
    /**
     * The first 6 digits of the full card number (the BIN).
     */
    bin?: string | undefined;
};

/** @internal */
export const CardType$inboundSchema: z.ZodNativeEnum<typeof CardType> = z.nativeEnum(CardType);

/** @internal */
export const CardType$outboundSchema: z.ZodNativeEnum<typeof CardType> = CardType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CardType$ {
    /** @deprecated use `CardType$inboundSchema` instead. */
    export const inboundSchema = CardType$inboundSchema;
    /** @deprecated use `CardType$outboundSchema` instead. */
    export const outboundSchema = CardType$outboundSchema;
}

/** @internal */
export const PaymentMethodDetailsCard$inboundSchema: z.ZodType<
    PaymentMethodDetailsCard,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        card_type: CardType$inboundSchema.optional(),
        bin: z.string().optional(),
    })
    .transform((v) => {
        return remap$(v, {
            card_type: "cardType",
        });
    });

/** @internal */
export type PaymentMethodDetailsCard$Outbound = {
    card_type?: string | undefined;
    bin?: string | undefined;
};

/** @internal */
export const PaymentMethodDetailsCard$outboundSchema: z.ZodType<
    PaymentMethodDetailsCard$Outbound,
    z.ZodTypeDef,
    PaymentMethodDetailsCard
> = z
    .object({
        cardType: CardType$outboundSchema.optional(),
        bin: z.string().optional(),
    })
    .transform((v) => {
        return remap$(v, {
            cardType: "card_type",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PaymentMethodDetailsCard$ {
    /** @deprecated use `PaymentMethodDetailsCard$inboundSchema` instead. */
    export const inboundSchema = PaymentMethodDetailsCard$inboundSchema;
    /** @deprecated use `PaymentMethodDetailsCard$outboundSchema` instead. */
    export const outboundSchema = PaymentMethodDetailsCard$outboundSchema;
    /** @deprecated use `PaymentMethodDetailsCard$Outbound` instead. */
    export type Outbound = PaymentMethodDetailsCard$Outbound;
}

/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as z from "zod";

/**
 * The type of action outcome for the given rule.
 */
export enum FlowRuleMethodOutcomeType {
    List = "list",
}

export enum FlowRuleMethodOutcomeResult {
    Afterpay = "afterpay",
    Alipay = "alipay",
    Alipayhk = "alipayhk",
    Applepay = "applepay",
    Bacs = "bacs",
    Banked = "banked",
    Becs = "becs",
    Bitpay = "bitpay",
    Boleto = "boleto",
    Boost = "boost",
    Card = "card",
    Cashapp = "cashapp",
    Chaseorbital = "chaseorbital",
    Clearpay = "clearpay",
    ClickToPay = "click-to-pay",
    Dana = "dana",
    Dcb = "dcb",
    Dlocal = "dlocal",
    Ebanx = "ebanx",
    Gcash = "gcash",
    Giropay = "giropay",
    Gocardless = "gocardless",
    Googlepay = "googlepay",
    Gopay = "gopay",
    Grabpay = "grabpay",
    Ideal = "ideal",
    Kakaopay = "kakaopay",
    Klarna = "klarna",
    Laybuy = "laybuy",
    Linkaja = "linkaja",
    Maybankqrpay = "maybankqrpay",
    Multibanco = "multibanco",
    Oney3x = "oney_3x",
    Oney4x = "oney_4x",
    Oney6x = "oney_6x",
    Oney10x = "oney_10x",
    Oney12x = "oney_12x",
    Ovo = "ovo",
    Oxxo = "oxxo",
    Payid = "payid",
    Paymaya = "paymaya",
    Paypal = "paypal",
    Paypalpaylater = "paypalpaylater",
    Payto = "payto",
    Venmo = "venmo",
    Pix = "pix",
    Rabbitlinepay = "rabbitlinepay",
    Scalapay = "scalapay",
    Sepa = "sepa",
    Shopeepay = "shopeepay",
    Singteldash = "singteldash",
    Sofort = "sofort",
    Stripedd = "stripedd",
    Thaiqr = "thaiqr",
    Touchngo = "touchngo",
    Truemoney = "truemoney",
    Trustly = "trustly",
    Trustlyeurope = "trustlyeurope",
    Givingblock = "givingblock",
    Wechat = "wechat",
    Zippay = "zippay",
    Bancontact = "bancontact",
    Eps = "eps",
    Linepay = "linepay",
    Razorpay = "razorpay",
    Multipago = "multipago",
    Waave = "waave",
    Smartpay = "smartpay",
    Vipps = "vipps",
}

/**
 * Defines the outcome of a rule in a flow where the result
 *
 * @remarks
 * is a list of payment types.
 */
export type FlowRuleMethodOutcome = {
    /**
     * The type of action outcome for the given rule.
     */
    type: FlowRuleMethodOutcomeType;
    /**
     * Results for a given flow action.
     */
    result: Array<FlowRuleMethodOutcomeResult>;
};

/** @internal */
export const FlowRuleMethodOutcomeType$ = z.nativeEnum(FlowRuleMethodOutcomeType);

/** @internal */
export const FlowRuleMethodOutcomeResult$ = z.nativeEnum(FlowRuleMethodOutcomeResult);

/** @internal */
export namespace FlowRuleMethodOutcome$ {
    export type Inbound = {
        type: FlowRuleMethodOutcomeType;
        result: Array<FlowRuleMethodOutcomeResult>;
    };

    export const inboundSchema: z.ZodType<FlowRuleMethodOutcome, z.ZodTypeDef, Inbound> = z
        .object({
            type: FlowRuleMethodOutcomeType$,
            result: z.array(FlowRuleMethodOutcomeResult$),
        })
        .transform((v) => {
            return {
                type: v.type,
                result: v.result,
            };
        });

    export type Outbound = {
        type: FlowRuleMethodOutcomeType;
        result: Array<FlowRuleMethodOutcomeResult>;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, FlowRuleMethodOutcome> = z
        .object({
            type: FlowRuleMethodOutcomeType$,
            result: z.array(FlowRuleMethodOutcomeResult$),
        })
        .transform((v) => {
            return {
                type: v.type,
                result: v.result,
            };
        });
}

/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { ClosedEnum } from "../../types/enums.js";
import * as z from "zod";

/**
 * The type of match made for this rule.
 */
export const FlowMerchantInitiatedConditionName = {
    MerchantInitiated: "merchant_initiated",
} as const;
/**
 * The type of match made for this rule.
 */
export type FlowMerchantInitiatedConditionName = ClosedEnum<
    typeof FlowMerchantInitiatedConditionName
>;

/**
 * The comparison to make on the `merchant_initiated` flag `value`.
 */
export const FlowMerchantInitiatedConditionOperator = {
    EqualTo: "equal_to",
} as const;
/**
 * The comparison to make on the `merchant_initiated` flag `value`.
 */
export type FlowMerchantInitiatedConditionOperator = ClosedEnum<
    typeof FlowMerchantInitiatedConditionOperator
>;

/**
 * `merchant_initiated` flag conditions with a name, operator, and value.
 */
export type FlowMerchantInitiatedCondition = {
    /**
     * The type of match made for this rule.
     */
    name: FlowMerchantInitiatedConditionName;
    /**
     * The comparison to make on the `merchant_initiated` flag `value`.
     */
    operator: FlowMerchantInitiatedConditionOperator;
    /**
     * `merchant_initiated` flag value to compare the transaction to.
     */
    value: boolean;
};

/** @internal */
export const FlowMerchantInitiatedConditionName$inboundSchema: z.ZodNativeEnum<
    typeof FlowMerchantInitiatedConditionName
> = z.nativeEnum(FlowMerchantInitiatedConditionName);

/** @internal */
export const FlowMerchantInitiatedConditionName$outboundSchema: z.ZodNativeEnum<
    typeof FlowMerchantInitiatedConditionName
> = FlowMerchantInitiatedConditionName$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FlowMerchantInitiatedConditionName$ {
    /** @deprecated use `FlowMerchantInitiatedConditionName$inboundSchema` instead. */
    export const inboundSchema = FlowMerchantInitiatedConditionName$inboundSchema;
    /** @deprecated use `FlowMerchantInitiatedConditionName$outboundSchema` instead. */
    export const outboundSchema = FlowMerchantInitiatedConditionName$outboundSchema;
}

/** @internal */
export const FlowMerchantInitiatedConditionOperator$inboundSchema: z.ZodNativeEnum<
    typeof FlowMerchantInitiatedConditionOperator
> = z.nativeEnum(FlowMerchantInitiatedConditionOperator);

/** @internal */
export const FlowMerchantInitiatedConditionOperator$outboundSchema: z.ZodNativeEnum<
    typeof FlowMerchantInitiatedConditionOperator
> = FlowMerchantInitiatedConditionOperator$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FlowMerchantInitiatedConditionOperator$ {
    /** @deprecated use `FlowMerchantInitiatedConditionOperator$inboundSchema` instead. */
    export const inboundSchema = FlowMerchantInitiatedConditionOperator$inboundSchema;
    /** @deprecated use `FlowMerchantInitiatedConditionOperator$outboundSchema` instead. */
    export const outboundSchema = FlowMerchantInitiatedConditionOperator$outboundSchema;
}

/** @internal */
export const FlowMerchantInitiatedCondition$inboundSchema: z.ZodType<
    FlowMerchantInitiatedCondition,
    z.ZodTypeDef,
    unknown
> = z.object({
    name: FlowMerchantInitiatedConditionName$inboundSchema,
    operator: FlowMerchantInitiatedConditionOperator$inboundSchema,
    value: z.boolean(),
});

/** @internal */
export type FlowMerchantInitiatedCondition$Outbound = {
    name: string;
    operator: string;
    value: boolean;
};

/** @internal */
export const FlowMerchantInitiatedCondition$outboundSchema: z.ZodType<
    FlowMerchantInitiatedCondition$Outbound,
    z.ZodTypeDef,
    FlowMerchantInitiatedCondition
> = z.object({
    name: FlowMerchantInitiatedConditionName$outboundSchema,
    operator: FlowMerchantInitiatedConditionOperator$outboundSchema,
    value: z.boolean(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FlowMerchantInitiatedCondition$ {
    /** @deprecated use `FlowMerchantInitiatedCondition$inboundSchema` instead. */
    export const inboundSchema = FlowMerchantInitiatedCondition$inboundSchema;
    /** @deprecated use `FlowMerchantInitiatedCondition$outboundSchema` instead. */
    export const outboundSchema = FlowMerchantInitiatedCondition$outboundSchema;
    /** @deprecated use `FlowMerchantInitiatedCondition$Outbound` instead. */
    export type Outbound = FlowMerchantInitiatedCondition$Outbound;
}

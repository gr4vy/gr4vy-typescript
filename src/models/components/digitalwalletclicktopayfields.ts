/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives";
import * as z from "zod";

export type DigitalWalletClickToPayFields = {
    /**
     * Unique ID assigned for digital payment application.
     */
    digitalPaymentApplicationId?: string | undefined;
    /**
     * Name assigned for digital payment application.
     */
    digitalPaymentApplicationName?: string | undefined;
};

/** @internal */
export namespace DigitalWalletClickToPayFields$ {
    export const inboundSchema: z.ZodType<DigitalWalletClickToPayFields, z.ZodTypeDef, unknown> = z
        .object({
            digital_payment_application_id: z.string().optional(),
            digital_payment_application_name: z.string().optional(),
        })
        .transform((v) => {
            return remap$(v, {
                digital_payment_application_id: "digitalPaymentApplicationId",
                digital_payment_application_name: "digitalPaymentApplicationName",
            });
        });

    export type Outbound = {
        digital_payment_application_id?: string | undefined;
        digital_payment_application_name?: string | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, DigitalWalletClickToPayFields> =
        z
            .object({
                digitalPaymentApplicationId: z.string().optional(),
                digitalPaymentApplicationName: z.string().optional(),
            })
            .transform((v) => {
                return remap$(v, {
                    digitalPaymentApplicationId: "digital_payment_application_id",
                    digitalPaymentApplicationName: "digital_payment_application_name",
                });
            });
}

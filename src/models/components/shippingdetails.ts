/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import {
    ShippingDetail,
    ShippingDetail$inboundSchema,
    ShippingDetail$Outbound,
    ShippingDetail$outboundSchema,
} from "./shippingdetail.js";
import * as z from "zod";

/**
 * A list of shipping details.
 */
export type ShippingDetails = {
    /**
     * A list of shipping details.
     */
    items?: Array<ShippingDetail> | undefined;
};

/** @internal */
export const ShippingDetails$inboundSchema: z.ZodType<ShippingDetails, z.ZodTypeDef, unknown> =
    z.object({
        items: z.array(ShippingDetail$inboundSchema).optional(),
    });

/** @internal */
export type ShippingDetails$Outbound = {
    items?: Array<ShippingDetail$Outbound> | undefined;
};

/** @internal */
export const ShippingDetails$outboundSchema: z.ZodType<
    ShippingDetails$Outbound,
    z.ZodTypeDef,
    ShippingDetails
> = z.object({
    items: z.array(ShippingDetail$outboundSchema).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ShippingDetails$ {
    /** @deprecated use `ShippingDetails$inboundSchema` instead. */
    export const inboundSchema = ShippingDetails$inboundSchema;
    /** @deprecated use `ShippingDetails$outboundSchema` instead. */
    export const outboundSchema = ShippingDetails$outboundSchema;
    /** @deprecated use `ShippingDetails$Outbound` instead. */
    export type Outbound = ShippingDetails$Outbound;
}

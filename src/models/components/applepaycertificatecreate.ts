/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives.js";
import * as z from "zod";

/**
 * Base model with JSON encoders.
 */
export type ApplePayCertificateCreate = {
    displayName: string;
};

/** @internal */
export const ApplePayCertificateCreate$inboundSchema: z.ZodType<
    ApplePayCertificateCreate,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        display_name: z.string(),
    })
    .transform((v) => {
        return remap$(v, {
            display_name: "displayName",
        });
    });

/** @internal */
export type ApplePayCertificateCreate$Outbound = {
    display_name: string;
};

/** @internal */
export const ApplePayCertificateCreate$outboundSchema: z.ZodType<
    ApplePayCertificateCreate$Outbound,
    z.ZodTypeDef,
    ApplePayCertificateCreate
> = z
    .object({
        displayName: z.string(),
    })
    .transform((v) => {
        return remap$(v, {
            displayName: "display_name",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ApplePayCertificateCreate$ {
    /** @deprecated use `ApplePayCertificateCreate$inboundSchema` instead. */
    export const inboundSchema = ApplePayCertificateCreate$inboundSchema;
    /** @deprecated use `ApplePayCertificateCreate$outboundSchema` instead. */
    export const outboundSchema = ApplePayCertificateCreate$outboundSchema;
    /** @deprecated use `ApplePayCertificateCreate$Outbound` instead. */
    export type Outbound = ApplePayCertificateCreate$Outbound;
}

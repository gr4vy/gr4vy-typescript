/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives.js";
import { ClosedEnum } from "../../types/enums.js";
import * as z from "zod";

/**
 * The type of this resource.
 */
export const PaymentServiceSessionType = {
    PaymentServiceSession: "payment-service-session",
} as const;
/**
 * The type of this resource.
 */
export type PaymentServiceSessionType = ClosedEnum<typeof PaymentServiceSessionType>;

/**
 * The status of the response.
 *
 * @remarks
 *
 * - `succeeded` - The session was successfully generated.
 * - `failed` - The session could not be generated.
 */
export const PaymentServiceSessionStatus = {
    Succeeded: "succeeded",
    Failed: "failed",
} as const;
/**
 * The status of the response.
 *
 * @remarks
 *
 * - `succeeded` - The session was successfully generated.
 * - `failed` - The session could not be generated.
 */
export type PaymentServiceSessionStatus = ClosedEnum<typeof PaymentServiceSessionStatus>;

/**
 * A session request for a payment session. This is an opaque object
 *
 * @remarks
 * passed to the payment service.
 */
export type PaymentServiceSession = {
    /**
     * The type of this resource.
     */
    type?: PaymentServiceSessionType | undefined;
    /**
     * The status of the response.
     *
     * @remarks
     *
     * - `succeeded` - The session was successfully generated.
     * - `failed` - The session could not be generated.
     */
    status?: PaymentServiceSessionStatus | undefined;
    /**
     * A generic error code that may be returned when the session could not be generated.
     */
    code?: string | null | undefined;
    /**
     * The HTTP status code received from the payment service.
     */
    statusCode?: number | null | undefined;
    /**
     * The parsed JSON received from the payment service.
     */
    responseBody?: { [k: string]: any } | null | undefined;
};

/** @internal */
export const PaymentServiceSessionType$inboundSchema: z.ZodNativeEnum<
    typeof PaymentServiceSessionType
> = z.nativeEnum(PaymentServiceSessionType);

/** @internal */
export const PaymentServiceSessionType$outboundSchema: z.ZodNativeEnum<
    typeof PaymentServiceSessionType
> = PaymentServiceSessionType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PaymentServiceSessionType$ {
    /** @deprecated use `PaymentServiceSessionType$inboundSchema` instead. */
    export const inboundSchema = PaymentServiceSessionType$inboundSchema;
    /** @deprecated use `PaymentServiceSessionType$outboundSchema` instead. */
    export const outboundSchema = PaymentServiceSessionType$outboundSchema;
}

/** @internal */
export const PaymentServiceSessionStatus$inboundSchema: z.ZodNativeEnum<
    typeof PaymentServiceSessionStatus
> = z.nativeEnum(PaymentServiceSessionStatus);

/** @internal */
export const PaymentServiceSessionStatus$outboundSchema: z.ZodNativeEnum<
    typeof PaymentServiceSessionStatus
> = PaymentServiceSessionStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PaymentServiceSessionStatus$ {
    /** @deprecated use `PaymentServiceSessionStatus$inboundSchema` instead. */
    export const inboundSchema = PaymentServiceSessionStatus$inboundSchema;
    /** @deprecated use `PaymentServiceSessionStatus$outboundSchema` instead. */
    export const outboundSchema = PaymentServiceSessionStatus$outboundSchema;
}

/** @internal */
export const PaymentServiceSession$inboundSchema: z.ZodType<
    PaymentServiceSession,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        type: PaymentServiceSessionType$inboundSchema.optional(),
        status: PaymentServiceSessionStatus$inboundSchema.optional(),
        code: z.nullable(z.string()).optional(),
        status_code: z.nullable(z.number()).optional(),
        response_body: z.nullable(z.record(z.any())).optional(),
    })
    .transform((v) => {
        return remap$(v, {
            status_code: "statusCode",
            response_body: "responseBody",
        });
    });

/** @internal */
export type PaymentServiceSession$Outbound = {
    type?: string | undefined;
    status?: string | undefined;
    code?: string | null | undefined;
    status_code?: number | null | undefined;
    response_body?: { [k: string]: any } | null | undefined;
};

/** @internal */
export const PaymentServiceSession$outboundSchema: z.ZodType<
    PaymentServiceSession$Outbound,
    z.ZodTypeDef,
    PaymentServiceSession
> = z
    .object({
        type: PaymentServiceSessionType$outboundSchema.optional(),
        status: PaymentServiceSessionStatus$outboundSchema.optional(),
        code: z.nullable(z.string()).optional(),
        statusCode: z.nullable(z.number()).optional(),
        responseBody: z.nullable(z.record(z.any())).optional(),
    })
    .transform((v) => {
        return remap$(v, {
            statusCode: "status_code",
            responseBody: "response_body",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PaymentServiceSession$ {
    /** @deprecated use `PaymentServiceSession$inboundSchema` instead. */
    export const inboundSchema = PaymentServiceSession$inboundSchema;
    /** @deprecated use `PaymentServiceSession$outboundSchema` instead. */
    export const outboundSchema = PaymentServiceSession$outboundSchema;
    /** @deprecated use `PaymentServiceSession$Outbound` instead. */
    export type Outbound = PaymentServiceSession$Outbound;
}

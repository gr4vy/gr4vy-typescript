/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as z from "zod";

/**
 * The type of match made for this rule.
 */
export enum FlowCardSourceConditionName {
    CardSource = "card_source",
}

/**
 * The comparison to make on the `value`.
 */
export enum FlowCardSourceConditionOperator {
    IsOneOf = "is_one_of",
    IsNotOneOf = "is_not_one_of",
}

/**
 * Card sources to compare the transaction to.
 */
export enum FlowCardSourceConditionValue {
    Applepay = "applepay",
    Googlepay = "googlepay",
    NetworkToken = "network-token",
    Raw = "raw",
    Token = "token",
}

/**
 * Card source conditions with a name, operator, and value.
 */
export type FlowCardSourceCondition = {
    /**
     * The type of match made for this rule.
     */
    name: FlowCardSourceConditionName;
    /**
     * The comparison to make on the `value`.
     */
    operator: FlowCardSourceConditionOperator;
    value: Array<FlowCardSourceConditionValue>;
};

/** @internal */
export namespace FlowCardSourceConditionName$ {
    export const inboundSchema = z.nativeEnum(FlowCardSourceConditionName);
    export const outboundSchema = inboundSchema;
}

/** @internal */
export namespace FlowCardSourceConditionOperator$ {
    export const inboundSchema = z.nativeEnum(FlowCardSourceConditionOperator);
    export const outboundSchema = inboundSchema;
}

/** @internal */
export namespace FlowCardSourceConditionValue$ {
    export const inboundSchema = z.nativeEnum(FlowCardSourceConditionValue);
    export const outboundSchema = inboundSchema;
}

/** @internal */
export namespace FlowCardSourceCondition$ {
    export const inboundSchema: z.ZodType<FlowCardSourceCondition, z.ZodTypeDef, unknown> =
        z.object({
            name: FlowCardSourceConditionName$.inboundSchema,
            operator: FlowCardSourceConditionOperator$.inboundSchema,
            value: z.array(FlowCardSourceConditionValue$.inboundSchema),
        });

    export type Outbound = {
        name: string;
        operator: string;
        value: Array<string>;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, FlowCardSourceCondition> =
        z.object({
            name: FlowCardSourceConditionName$.outboundSchema,
            operator: FlowCardSourceConditionOperator$.outboundSchema,
            value: z.array(FlowCardSourceConditionValue$.outboundSchema),
        });
}

/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { ClosedEnum } from "../../types/enums.js";
import * as z from "zod";

/**
 * The type of match made for this rule.
 */
export const FlowCardSourceConditionName = {
    CardSource: "card_source",
} as const;
/**
 * The type of match made for this rule.
 */
export type FlowCardSourceConditionName = ClosedEnum<typeof FlowCardSourceConditionName>;

/**
 * The comparison to make on the `value`.
 */
export const FlowCardSourceConditionOperator = {
    IsOneOf: "is_one_of",
    IsNotOneOf: "is_not_one_of",
} as const;
/**
 * The comparison to make on the `value`.
 */
export type FlowCardSourceConditionOperator = ClosedEnum<typeof FlowCardSourceConditionOperator>;

/**
 * Card sources to compare the transaction to.
 */
export const FlowCardSourceConditionValue = {
    Applepay: "applepay",
    Googlepay: "googlepay",
    NetworkToken: "network-token",
    Raw: "raw",
    Token: "token",
} as const;
/**
 * Card sources to compare the transaction to.
 */
export type FlowCardSourceConditionValue = ClosedEnum<typeof FlowCardSourceConditionValue>;

/**
 * Card source conditions with a name, operator, and value.
 */
export type FlowCardSourceCondition = {
    /**
     * The type of match made for this rule.
     */
    name: FlowCardSourceConditionName;
    /**
     * The comparison to make on the `value`.
     */
    operator: FlowCardSourceConditionOperator;
    value: Array<FlowCardSourceConditionValue>;
};

/** @internal */
export const FlowCardSourceConditionName$inboundSchema: z.ZodNativeEnum<
    typeof FlowCardSourceConditionName
> = z.nativeEnum(FlowCardSourceConditionName);

/** @internal */
export const FlowCardSourceConditionName$outboundSchema: z.ZodNativeEnum<
    typeof FlowCardSourceConditionName
> = FlowCardSourceConditionName$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FlowCardSourceConditionName$ {
    /** @deprecated use `FlowCardSourceConditionName$inboundSchema` instead. */
    export const inboundSchema = FlowCardSourceConditionName$inboundSchema;
    /** @deprecated use `FlowCardSourceConditionName$outboundSchema` instead. */
    export const outboundSchema = FlowCardSourceConditionName$outboundSchema;
}

/** @internal */
export const FlowCardSourceConditionOperator$inboundSchema: z.ZodNativeEnum<
    typeof FlowCardSourceConditionOperator
> = z.nativeEnum(FlowCardSourceConditionOperator);

/** @internal */
export const FlowCardSourceConditionOperator$outboundSchema: z.ZodNativeEnum<
    typeof FlowCardSourceConditionOperator
> = FlowCardSourceConditionOperator$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FlowCardSourceConditionOperator$ {
    /** @deprecated use `FlowCardSourceConditionOperator$inboundSchema` instead. */
    export const inboundSchema = FlowCardSourceConditionOperator$inboundSchema;
    /** @deprecated use `FlowCardSourceConditionOperator$outboundSchema` instead. */
    export const outboundSchema = FlowCardSourceConditionOperator$outboundSchema;
}

/** @internal */
export const FlowCardSourceConditionValue$inboundSchema: z.ZodNativeEnum<
    typeof FlowCardSourceConditionValue
> = z.nativeEnum(FlowCardSourceConditionValue);

/** @internal */
export const FlowCardSourceConditionValue$outboundSchema: z.ZodNativeEnum<
    typeof FlowCardSourceConditionValue
> = FlowCardSourceConditionValue$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FlowCardSourceConditionValue$ {
    /** @deprecated use `FlowCardSourceConditionValue$inboundSchema` instead. */
    export const inboundSchema = FlowCardSourceConditionValue$inboundSchema;
    /** @deprecated use `FlowCardSourceConditionValue$outboundSchema` instead. */
    export const outboundSchema = FlowCardSourceConditionValue$outboundSchema;
}

/** @internal */
export const FlowCardSourceCondition$inboundSchema: z.ZodType<
    FlowCardSourceCondition,
    z.ZodTypeDef,
    unknown
> = z.object({
    name: FlowCardSourceConditionName$inboundSchema,
    operator: FlowCardSourceConditionOperator$inboundSchema,
    value: z.array(FlowCardSourceConditionValue$inboundSchema),
});

/** @internal */
export type FlowCardSourceCondition$Outbound = {
    name: string;
    operator: string;
    value: Array<string>;
};

/** @internal */
export const FlowCardSourceCondition$outboundSchema: z.ZodType<
    FlowCardSourceCondition$Outbound,
    z.ZodTypeDef,
    FlowCardSourceCondition
> = z.object({
    name: FlowCardSourceConditionName$outboundSchema,
    operator: FlowCardSourceConditionOperator$outboundSchema,
    value: z.array(FlowCardSourceConditionValue$outboundSchema),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FlowCardSourceCondition$ {
    /** @deprecated use `FlowCardSourceCondition$inboundSchema` instead. */
    export const inboundSchema = FlowCardSourceCondition$inboundSchema;
    /** @deprecated use `FlowCardSourceCondition$outboundSchema` instead. */
    export const outboundSchema = FlowCardSourceCondition$outboundSchema;
    /** @deprecated use `FlowCardSourceCondition$Outbound` instead. */
    export type Outbound = FlowCardSourceCondition$Outbound;
}

/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives.js";
import { ClosedEnum } from "../../types/enums.js";
import * as z from "zod";

/**
 * The type of this resource. Is always `transaction-event`.
 */
export const GiftCardRefundFailedType = {
    TransactionEvent: "transaction-event",
} as const;
/**
 * The type of this resource. Is always `transaction-event`.
 */
export type GiftCardRefundFailedType = ClosedEnum<typeof GiftCardRefundFailedType>;

/**
 * The name of this resource. Is always `gift-card-refund-failed`.
 */
export const GiftCardRefundFailedName = {
    GiftCardRefundFailed: "gift-card-refund-failed",
} as const;
/**
 * The name of this resource. Is always `gift-card-refund-failed`.
 */
export type GiftCardRefundFailedName = ClosedEnum<typeof GiftCardRefundFailedName>;

/**
 * Additional context for this event.
 */
export type GiftCardRefundFailedContext = {
    /**
     * The unique ID of the Gift Card service used.
     */
    giftCardServiceId?: string | undefined;
    /**
     * The name of the Gift Card service used.
     */
    giftCardServiceName?: string | undefined;
    /**
     * The Gift Card service definition used.
     */
    giftCardServiceDefinitionId?: string | undefined;
    /**
     * The endpoint for the request, if performed.
     */
    url?: string | null | undefined;
    /**
     * The HTTP body sent to the Gift Card provider, if performed.
     */
    request?: string | null | undefined;
    /**
     * The HTTP body received from the Gift Card provider, if any.
     */
    response?: string | null | undefined;
    /**
     * The HTTP response status code from the Gift Card provider, if any.
     */
    responseStatusCode?: number | null | undefined;
    /**
     * The reason we could not refund the gift cards.
     */
    reason?: string | undefined;
};

/**
 * This event logs the request and response details of HTTP calls made to refund gift cards, in case the call failed.
 */
export type GiftCardRefundFailed = {
    /**
     * The type of this resource. Is always `transaction-event`.
     */
    type?: GiftCardRefundFailedType | undefined;
    /**
     * The unique identifier for this event.
     */
    id?: string | undefined;
    /**
     * The name of this resource. Is always `gift-card-refund-failed`.
     */
    name?: GiftCardRefundFailedName | undefined;
    /**
     * The date and time when this event was created in our system.
     */
    createdAt?: Date | undefined;
    /**
     * Additional context for this event.
     */
    context?: GiftCardRefundFailedContext | undefined;
};

/** @internal */
export const GiftCardRefundFailedType$inboundSchema: z.ZodNativeEnum<
    typeof GiftCardRefundFailedType
> = z.nativeEnum(GiftCardRefundFailedType);

/** @internal */
export const GiftCardRefundFailedType$outboundSchema: z.ZodNativeEnum<
    typeof GiftCardRefundFailedType
> = GiftCardRefundFailedType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GiftCardRefundFailedType$ {
    /** @deprecated use `GiftCardRefundFailedType$inboundSchema` instead. */
    export const inboundSchema = GiftCardRefundFailedType$inboundSchema;
    /** @deprecated use `GiftCardRefundFailedType$outboundSchema` instead. */
    export const outboundSchema = GiftCardRefundFailedType$outboundSchema;
}

/** @internal */
export const GiftCardRefundFailedName$inboundSchema: z.ZodNativeEnum<
    typeof GiftCardRefundFailedName
> = z.nativeEnum(GiftCardRefundFailedName);

/** @internal */
export const GiftCardRefundFailedName$outboundSchema: z.ZodNativeEnum<
    typeof GiftCardRefundFailedName
> = GiftCardRefundFailedName$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GiftCardRefundFailedName$ {
    /** @deprecated use `GiftCardRefundFailedName$inboundSchema` instead. */
    export const inboundSchema = GiftCardRefundFailedName$inboundSchema;
    /** @deprecated use `GiftCardRefundFailedName$outboundSchema` instead. */
    export const outboundSchema = GiftCardRefundFailedName$outboundSchema;
}

/** @internal */
export const GiftCardRefundFailedContext$inboundSchema: z.ZodType<
    GiftCardRefundFailedContext,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        gift_card_service_id: z.string().optional(),
        gift_card_service_name: z.string().optional(),
        gift_card_service_definition_id: z.string().optional(),
        url: z.nullable(z.string()).optional(),
        request: z.nullable(z.string()).optional(),
        response: z.nullable(z.string()).optional(),
        response_status_code: z.nullable(z.number()).optional(),
        reason: z.string().optional(),
    })
    .transform((v) => {
        return remap$(v, {
            gift_card_service_id: "giftCardServiceId",
            gift_card_service_name: "giftCardServiceName",
            gift_card_service_definition_id: "giftCardServiceDefinitionId",
            response_status_code: "responseStatusCode",
        });
    });

/** @internal */
export type GiftCardRefundFailedContext$Outbound = {
    gift_card_service_id?: string | undefined;
    gift_card_service_name?: string | undefined;
    gift_card_service_definition_id?: string | undefined;
    url?: string | null | undefined;
    request?: string | null | undefined;
    response?: string | null | undefined;
    response_status_code?: number | null | undefined;
    reason?: string | undefined;
};

/** @internal */
export const GiftCardRefundFailedContext$outboundSchema: z.ZodType<
    GiftCardRefundFailedContext$Outbound,
    z.ZodTypeDef,
    GiftCardRefundFailedContext
> = z
    .object({
        giftCardServiceId: z.string().optional(),
        giftCardServiceName: z.string().optional(),
        giftCardServiceDefinitionId: z.string().optional(),
        url: z.nullable(z.string()).optional(),
        request: z.nullable(z.string()).optional(),
        response: z.nullable(z.string()).optional(),
        responseStatusCode: z.nullable(z.number()).optional(),
        reason: z.string().optional(),
    })
    .transform((v) => {
        return remap$(v, {
            giftCardServiceId: "gift_card_service_id",
            giftCardServiceName: "gift_card_service_name",
            giftCardServiceDefinitionId: "gift_card_service_definition_id",
            responseStatusCode: "response_status_code",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GiftCardRefundFailedContext$ {
    /** @deprecated use `GiftCardRefundFailedContext$inboundSchema` instead. */
    export const inboundSchema = GiftCardRefundFailedContext$inboundSchema;
    /** @deprecated use `GiftCardRefundFailedContext$outboundSchema` instead. */
    export const outboundSchema = GiftCardRefundFailedContext$outboundSchema;
    /** @deprecated use `GiftCardRefundFailedContext$Outbound` instead. */
    export type Outbound = GiftCardRefundFailedContext$Outbound;
}

/** @internal */
export const GiftCardRefundFailed$inboundSchema: z.ZodType<
    GiftCardRefundFailed,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        type: GiftCardRefundFailedType$inboundSchema.optional(),
        id: z.string().optional(),
        name: GiftCardRefundFailedName$inboundSchema.optional(),
        created_at: z
            .string()
            .datetime({ offset: true })
            .transform((v) => new Date(v))
            .optional(),
        context: z.lazy(() => GiftCardRefundFailedContext$inboundSchema).optional(),
    })
    .transform((v) => {
        return remap$(v, {
            created_at: "createdAt",
        });
    });

/** @internal */
export type GiftCardRefundFailed$Outbound = {
    type?: string | undefined;
    id?: string | undefined;
    name?: string | undefined;
    created_at?: string | undefined;
    context?: GiftCardRefundFailedContext$Outbound | undefined;
};

/** @internal */
export const GiftCardRefundFailed$outboundSchema: z.ZodType<
    GiftCardRefundFailed$Outbound,
    z.ZodTypeDef,
    GiftCardRefundFailed
> = z
    .object({
        type: GiftCardRefundFailedType$outboundSchema.optional(),
        id: z.string().optional(),
        name: GiftCardRefundFailedName$outboundSchema.optional(),
        createdAt: z
            .date()
            .transform((v) => v.toISOString())
            .optional(),
        context: z.lazy(() => GiftCardRefundFailedContext$outboundSchema).optional(),
    })
    .transform((v) => {
        return remap$(v, {
            createdAt: "created_at",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GiftCardRefundFailed$ {
    /** @deprecated use `GiftCardRefundFailed$inboundSchema` instead. */
    export const inboundSchema = GiftCardRefundFailed$inboundSchema;
    /** @deprecated use `GiftCardRefundFailed$outboundSchema` instead. */
    export const outboundSchema = GiftCardRefundFailed$outboundSchema;
    /** @deprecated use `GiftCardRefundFailed$Outbound` instead. */
    export type Outbound = GiftCardRefundFailed$Outbound;
}

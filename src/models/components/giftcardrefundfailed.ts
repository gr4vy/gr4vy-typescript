/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as z from "zod";

/**
 * The type of this resource. Is always `transaction-event`.
 */
export enum GiftCardRefundFailedType {
    TransactionEvent = "transaction-event",
}

/**
 * The name of this resource. Is always `gift-card-refund-failed`.
 */
export enum GiftCardRefundFailedName {
    GiftCardRefundFailed = "gift-card-refund-failed",
}

/**
 * Additional context for this event.
 */
export type GiftCardRefundFailedContext = {
    /**
     * The unique ID of the Gift Card service used.
     */
    giftCardServiceId?: string | undefined;
    /**
     * The name of the Gift Card service used.
     */
    giftCardServiceName?: string | undefined;
    /**
     * The Gift Card service definition used.
     */
    giftCardServiceDefinitionId?: string | undefined;
    /**
     * The endpoint for the request, if performed.
     */
    url?: string | null | undefined;
    /**
     * The HTTP body sent to the Gift Card provider, if performed.
     */
    request?: string | null | undefined;
    /**
     * The HTTP body received from the Gift Card provider, if any.
     */
    response?: string | null | undefined;
    /**
     * The HTTP response status code from the Gift Card provider, if any.
     */
    responseStatusCode?: number | null | undefined;
    /**
     * The reason we could not refund the gift cards.
     */
    reason?: string | undefined;
};

/**
 * This event logs the request and response details of HTTP calls made to refund gift cards, in case the call failed.
 */
export type GiftCardRefundFailed = {
    /**
     * The type of this resource. Is always `transaction-event`.
     */
    type?: GiftCardRefundFailedType | undefined;
    /**
     * The unique identifier for this event.
     */
    id?: string | undefined;
    /**
     * The name of this resource. Is always `gift-card-refund-failed`.
     */
    name?: GiftCardRefundFailedName | undefined;
    /**
     * The date and time when this event was created in our system.
     */
    createdAt?: Date | undefined;
    /**
     * Additional context for this event.
     */
    context?: GiftCardRefundFailedContext | undefined;
};

/** @internal */
export const GiftCardRefundFailedType$: z.ZodNativeEnum<typeof GiftCardRefundFailedType> =
    z.nativeEnum(GiftCardRefundFailedType);

/** @internal */
export const GiftCardRefundFailedName$: z.ZodNativeEnum<typeof GiftCardRefundFailedName> =
    z.nativeEnum(GiftCardRefundFailedName);

/** @internal */
export namespace GiftCardRefundFailedContext$ {
    export type Inbound = {
        gift_card_service_id?: string | undefined;
        gift_card_service_name?: string | undefined;
        gift_card_service_definition_id?: string | undefined;
        url?: string | null | undefined;
        request?: string | null | undefined;
        response?: string | null | undefined;
        response_status_code?: number | null | undefined;
        reason?: string | undefined;
    };

    export const inboundSchema: z.ZodType<GiftCardRefundFailedContext, z.ZodTypeDef, Inbound> = z
        .object({
            gift_card_service_id: z.string().optional(),
            gift_card_service_name: z.string().optional(),
            gift_card_service_definition_id: z.string().optional(),
            url: z.nullable(z.string()).optional(),
            request: z.nullable(z.string()).optional(),
            response: z.nullable(z.string()).optional(),
            response_status_code: z.nullable(z.number()).optional(),
            reason: z.string().optional(),
        })
        .transform((v) => {
            return {
                ...(v.gift_card_service_id === undefined
                    ? null
                    : { giftCardServiceId: v.gift_card_service_id }),
                ...(v.gift_card_service_name === undefined
                    ? null
                    : { giftCardServiceName: v.gift_card_service_name }),
                ...(v.gift_card_service_definition_id === undefined
                    ? null
                    : { giftCardServiceDefinitionId: v.gift_card_service_definition_id }),
                ...(v.url === undefined ? null : { url: v.url }),
                ...(v.request === undefined ? null : { request: v.request }),
                ...(v.response === undefined ? null : { response: v.response }),
                ...(v.response_status_code === undefined
                    ? null
                    : { responseStatusCode: v.response_status_code }),
                ...(v.reason === undefined ? null : { reason: v.reason }),
            };
        });

    export type Outbound = {
        gift_card_service_id?: string | undefined;
        gift_card_service_name?: string | undefined;
        gift_card_service_definition_id?: string | undefined;
        url?: string | null | undefined;
        request?: string | null | undefined;
        response?: string | null | undefined;
        response_status_code?: number | null | undefined;
        reason?: string | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, GiftCardRefundFailedContext> = z
        .object({
            giftCardServiceId: z.string().optional(),
            giftCardServiceName: z.string().optional(),
            giftCardServiceDefinitionId: z.string().optional(),
            url: z.nullable(z.string()).optional(),
            request: z.nullable(z.string()).optional(),
            response: z.nullable(z.string()).optional(),
            responseStatusCode: z.nullable(z.number()).optional(),
            reason: z.string().optional(),
        })
        .transform((v) => {
            return {
                ...(v.giftCardServiceId === undefined
                    ? null
                    : { gift_card_service_id: v.giftCardServiceId }),
                ...(v.giftCardServiceName === undefined
                    ? null
                    : { gift_card_service_name: v.giftCardServiceName }),
                ...(v.giftCardServiceDefinitionId === undefined
                    ? null
                    : { gift_card_service_definition_id: v.giftCardServiceDefinitionId }),
                ...(v.url === undefined ? null : { url: v.url }),
                ...(v.request === undefined ? null : { request: v.request }),
                ...(v.response === undefined ? null : { response: v.response }),
                ...(v.responseStatusCode === undefined
                    ? null
                    : { response_status_code: v.responseStatusCode }),
                ...(v.reason === undefined ? null : { reason: v.reason }),
            };
        });
}

/** @internal */
export namespace GiftCardRefundFailed$ {
    export type Inbound = {
        type?: GiftCardRefundFailedType | undefined;
        id?: string | undefined;
        name?: GiftCardRefundFailedName | undefined;
        created_at?: string | undefined;
        context?: GiftCardRefundFailedContext$.Inbound | undefined;
    };

    export const inboundSchema: z.ZodType<GiftCardRefundFailed, z.ZodTypeDef, Inbound> = z
        .object({
            type: GiftCardRefundFailedType$.optional(),
            id: z.string().optional(),
            name: GiftCardRefundFailedName$.optional(),
            created_at: z
                .string()
                .datetime({ offset: true })
                .transform((v) => new Date(v))
                .optional(),
            context: z.lazy(() => GiftCardRefundFailedContext$.inboundSchema).optional(),
        })
        .transform((v) => {
            return {
                ...(v.type === undefined ? null : { type: v.type }),
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.name === undefined ? null : { name: v.name }),
                ...(v.created_at === undefined ? null : { createdAt: v.created_at }),
                ...(v.context === undefined ? null : { context: v.context }),
            };
        });

    export type Outbound = {
        type?: GiftCardRefundFailedType | undefined;
        id?: string | undefined;
        name?: GiftCardRefundFailedName | undefined;
        created_at?: string | undefined;
        context?: GiftCardRefundFailedContext$.Outbound | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, GiftCardRefundFailed> = z
        .object({
            type: GiftCardRefundFailedType$.optional(),
            id: z.string().optional(),
            name: GiftCardRefundFailedName$.optional(),
            createdAt: z
                .date()
                .transform((v) => v.toISOString())
                .optional(),
            context: z.lazy(() => GiftCardRefundFailedContext$.outboundSchema).optional(),
        })
        .transform((v) => {
            return {
                ...(v.type === undefined ? null : { type: v.type }),
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.name === undefined ? null : { name: v.name }),
                ...(v.createdAt === undefined ? null : { created_at: v.createdAt }),
                ...(v.context === undefined ? null : { context: v.context }),
            };
        });
}

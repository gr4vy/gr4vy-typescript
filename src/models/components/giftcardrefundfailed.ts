/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives";
import * as z from "zod";

/**
 * The type of this resource. Is always `transaction-event`.
 */
export enum GiftCardRefundFailedType {
    TransactionEvent = "transaction-event",
}

/**
 * The name of this resource. Is always `gift-card-refund-failed`.
 */
export enum GiftCardRefundFailedName {
    GiftCardRefundFailed = "gift-card-refund-failed",
}

/**
 * Additional context for this event.
 */
export type GiftCardRefundFailedContext = {
    /**
     * The unique ID of the Gift Card service used.
     */
    giftCardServiceId?: string | undefined;
    /**
     * The name of the Gift Card service used.
     */
    giftCardServiceName?: string | undefined;
    /**
     * The Gift Card service definition used.
     */
    giftCardServiceDefinitionId?: string | undefined;
    /**
     * The endpoint for the request, if performed.
     */
    url?: string | null | undefined;
    /**
     * The HTTP body sent to the Gift Card provider, if performed.
     */
    request?: string | null | undefined;
    /**
     * The HTTP body received from the Gift Card provider, if any.
     */
    response?: string | null | undefined;
    /**
     * The HTTP response status code from the Gift Card provider, if any.
     */
    responseStatusCode?: number | null | undefined;
    /**
     * The reason we could not refund the gift cards.
     */
    reason?: string | undefined;
};

/**
 * This event logs the request and response details of HTTP calls made to refund gift cards, in case the call failed.
 */
export type GiftCardRefundFailed = {
    /**
     * The type of this resource. Is always `transaction-event`.
     */
    type?: GiftCardRefundFailedType | undefined;
    /**
     * The unique identifier for this event.
     */
    id?: string | undefined;
    /**
     * The name of this resource. Is always `gift-card-refund-failed`.
     */
    name?: GiftCardRefundFailedName | undefined;
    /**
     * The date and time when this event was created in our system.
     */
    createdAt?: Date | undefined;
    /**
     * Additional context for this event.
     */
    context?: GiftCardRefundFailedContext | undefined;
};

/** @internal */
export namespace GiftCardRefundFailedType$ {
    export const inboundSchema = z.nativeEnum(GiftCardRefundFailedType);
    export const outboundSchema = inboundSchema;
}

/** @internal */
export namespace GiftCardRefundFailedName$ {
    export const inboundSchema = z.nativeEnum(GiftCardRefundFailedName);
    export const outboundSchema = inboundSchema;
}

/** @internal */
export namespace GiftCardRefundFailedContext$ {
    export const inboundSchema: z.ZodType<GiftCardRefundFailedContext, z.ZodTypeDef, unknown> = z
        .object({
            gift_card_service_id: z.string().optional(),
            gift_card_service_name: z.string().optional(),
            gift_card_service_definition_id: z.string().optional(),
            url: z.nullable(z.string()).optional(),
            request: z.nullable(z.string()).optional(),
            response: z.nullable(z.string()).optional(),
            response_status_code: z.nullable(z.number()).optional(),
            reason: z.string().optional(),
        })
        .transform((v) => {
            return remap$(v, {
                gift_card_service_id: "giftCardServiceId",
                gift_card_service_name: "giftCardServiceName",
                gift_card_service_definition_id: "giftCardServiceDefinitionId",
                response_status_code: "responseStatusCode",
            });
        });

    export type Outbound = {
        gift_card_service_id?: string | undefined;
        gift_card_service_name?: string | undefined;
        gift_card_service_definition_id?: string | undefined;
        url?: string | null | undefined;
        request?: string | null | undefined;
        response?: string | null | undefined;
        response_status_code?: number | null | undefined;
        reason?: string | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, GiftCardRefundFailedContext> = z
        .object({
            giftCardServiceId: z.string().optional(),
            giftCardServiceName: z.string().optional(),
            giftCardServiceDefinitionId: z.string().optional(),
            url: z.nullable(z.string()).optional(),
            request: z.nullable(z.string()).optional(),
            response: z.nullable(z.string()).optional(),
            responseStatusCode: z.nullable(z.number()).optional(),
            reason: z.string().optional(),
        })
        .transform((v) => {
            return remap$(v, {
                giftCardServiceId: "gift_card_service_id",
                giftCardServiceName: "gift_card_service_name",
                giftCardServiceDefinitionId: "gift_card_service_definition_id",
                responseStatusCode: "response_status_code",
            });
        });
}

/** @internal */
export namespace GiftCardRefundFailed$ {
    export const inboundSchema: z.ZodType<GiftCardRefundFailed, z.ZodTypeDef, unknown> = z
        .object({
            type: GiftCardRefundFailedType$.inboundSchema.optional(),
            id: z.string().optional(),
            name: GiftCardRefundFailedName$.inboundSchema.optional(),
            created_at: z
                .string()
                .datetime({ offset: true })
                .transform((v) => new Date(v))
                .optional(),
            context: z.lazy(() => GiftCardRefundFailedContext$.inboundSchema).optional(),
        })
        .transform((v) => {
            return remap$(v, {
                created_at: "createdAt",
            });
        });

    export type Outbound = {
        type?: string | undefined;
        id?: string | undefined;
        name?: string | undefined;
        created_at?: string | undefined;
        context?: GiftCardRefundFailedContext$.Outbound | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, GiftCardRefundFailed> = z
        .object({
            type: GiftCardRefundFailedType$.outboundSchema.optional(),
            id: z.string().optional(),
            name: GiftCardRefundFailedName$.outboundSchema.optional(),
            createdAt: z
                .date()
                .transform((v) => v.toISOString())
                .optional(),
            context: z.lazy(() => GiftCardRefundFailedContext$.outboundSchema).optional(),
        })
        .transform((v) => {
            return remap$(v, {
                createdAt: "created_at",
            });
        });
}

/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { ClosedEnum } from "../../types/enums.js";

export const TransactionStatus = {
  Processing: "processing",
  AuthorizationSucceeded: "authorization_succeeded",
  AuthorizationDeclined: "authorization_declined",
  AuthorizationFailed: "authorization_failed",
  AuthorizationVoided: "authorization_voided",
  AuthorizationVoidPending: "authorization_void_pending",
  CaptureSucceeded: "capture_succeeded",
  CapturePending: "capture_pending",
  BuyerApprovalPending: "buyer_approval_pending",
} as const;
export type TransactionStatus = ClosedEnum<typeof TransactionStatus>;

/** @internal */
export const TransactionStatus$inboundSchema: z.ZodNativeEnum<
  typeof TransactionStatus
> = z.nativeEnum(TransactionStatus);

/** @internal */
export const TransactionStatus$outboundSchema: z.ZodNativeEnum<
  typeof TransactionStatus
> = TransactionStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace TransactionStatus$ {
  /** @deprecated use `TransactionStatus$inboundSchema` instead. */
  export const inboundSchema = TransactionStatus$inboundSchema;
  /** @deprecated use `TransactionStatus$outboundSchema` instead. */
  export const outboundSchema = TransactionStatus$outboundSchema;
}

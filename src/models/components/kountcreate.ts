/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives.js";
import { ClosedEnum } from "../../types/enums.js";
import {
    ApiRoutersAntiFraudServicesSchemasField,
    ApiRoutersAntiFraudServicesSchemasField$inboundSchema,
    ApiRoutersAntiFraudServicesSchemasField$Outbound,
    ApiRoutersAntiFraudServicesSchemasField$outboundSchema,
} from "./apiroutersantifraudservicesschemasfield.js";
import * as z from "zod";

export const KountCreateAntiFraudServiceDefinitionId = {
    KountAntiFraud: "kount-anti-fraud",
} as const;
export type KountCreateAntiFraudServiceDefinitionId = ClosedEnum<
    typeof KountCreateAntiFraudServiceDefinitionId
>;

/**
 * Base model with JSON encoders.
 */
export type KountCreate = {
    fields: Array<ApiRoutersAntiFraudServicesSchemasField>;
    antiFraudServiceDefinitionId?: KountCreateAntiFraudServiceDefinitionId | undefined;
    displayName: string;
    active?: boolean | undefined;
    reviewsEnabled?: boolean | undefined;
};

/** @internal */
export const KountCreateAntiFraudServiceDefinitionId$inboundSchema: z.ZodNativeEnum<
    typeof KountCreateAntiFraudServiceDefinitionId
> = z.nativeEnum(KountCreateAntiFraudServiceDefinitionId);

/** @internal */
export const KountCreateAntiFraudServiceDefinitionId$outboundSchema: z.ZodNativeEnum<
    typeof KountCreateAntiFraudServiceDefinitionId
> = KountCreateAntiFraudServiceDefinitionId$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace KountCreateAntiFraudServiceDefinitionId$ {
    /** @deprecated use `KountCreateAntiFraudServiceDefinitionId$inboundSchema` instead. */
    export const inboundSchema = KountCreateAntiFraudServiceDefinitionId$inboundSchema;
    /** @deprecated use `KountCreateAntiFraudServiceDefinitionId$outboundSchema` instead. */
    export const outboundSchema = KountCreateAntiFraudServiceDefinitionId$outboundSchema;
}

/** @internal */
export const KountCreate$inboundSchema: z.ZodType<KountCreate, z.ZodTypeDef, unknown> = z
    .object({
        fields: z.array(ApiRoutersAntiFraudServicesSchemasField$inboundSchema),
        anti_fraud_service_definition_id:
            KountCreateAntiFraudServiceDefinitionId$inboundSchema.default("kount-anti-fraud"),
        display_name: z.string(),
        active: z.boolean().default(true),
        reviews_enabled: z.boolean().default(false),
    })
    .transform((v) => {
        return remap$(v, {
            anti_fraud_service_definition_id: "antiFraudServiceDefinitionId",
            display_name: "displayName",
            reviews_enabled: "reviewsEnabled",
        });
    });

/** @internal */
export type KountCreate$Outbound = {
    fields: Array<ApiRoutersAntiFraudServicesSchemasField$Outbound>;
    anti_fraud_service_definition_id: string;
    display_name: string;
    active: boolean;
    reviews_enabled: boolean;
};

/** @internal */
export const KountCreate$outboundSchema: z.ZodType<
    KountCreate$Outbound,
    z.ZodTypeDef,
    KountCreate
> = z
    .object({
        fields: z.array(ApiRoutersAntiFraudServicesSchemasField$outboundSchema),
        antiFraudServiceDefinitionId:
            KountCreateAntiFraudServiceDefinitionId$outboundSchema.default("kount-anti-fraud"),
        displayName: z.string(),
        active: z.boolean().default(true),
        reviewsEnabled: z.boolean().default(false),
    })
    .transform((v) => {
        return remap$(v, {
            antiFraudServiceDefinitionId: "anti_fraud_service_definition_id",
            displayName: "display_name",
            reviewsEnabled: "reviews_enabled",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace KountCreate$ {
    /** @deprecated use `KountCreate$inboundSchema` instead. */
    export const inboundSchema = KountCreate$inboundSchema;
    /** @deprecated use `KountCreate$outboundSchema` instead. */
    export const outboundSchema = KountCreate$outboundSchema;
    /** @deprecated use `KountCreate$Outbound` instead. */
    export type Outbound = KountCreate$Outbound;
}

/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as z from "zod";

/**
 * The type of this resource.
 */
export enum GiftCardSnapshotType {
    GiftCard = "gift-card",
}

/**
 * A snapshot of a gift card used in a transaction.
 */
export type GiftCardSnapshot = {
    /**
     * The type of this resource.
     */
    type?: GiftCardSnapshotType | undefined;
    /**
     * The ID of this gift card. This may be `null` if the gift
     *
     * @remarks
     * card is not stored.
     */
    id?: string | null | undefined;
    /**
     * The first 6 digits of the full gift card number.
     */
    bin?: string | undefined;
    /**
     * The 3 digits after the `bin` of the full gift card number.
     */
    subBin?: string | undefined;
    /**
     * The last 4 digits for the gift card.
     */
    last4?: string | undefined;
};

/** @internal */
export const GiftCardSnapshotType$ = z.nativeEnum(GiftCardSnapshotType);

/** @internal */
export namespace GiftCardSnapshot$ {
    export type Inbound = {
        type?: GiftCardSnapshotType | undefined;
        id?: string | null | undefined;
        bin?: string | undefined;
        sub_bin?: string | undefined;
        last4?: string | undefined;
    };

    export const inboundSchema: z.ZodType<GiftCardSnapshot, z.ZodTypeDef, Inbound> = z
        .object({
            type: GiftCardSnapshotType$.optional(),
            id: z.nullable(z.string()).optional(),
            bin: z.string().optional(),
            sub_bin: z.string().optional(),
            last4: z.string().optional(),
        })
        .transform((v) => {
            return {
                ...(v.type === undefined ? null : { type: v.type }),
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.bin === undefined ? null : { bin: v.bin }),
                ...(v.sub_bin === undefined ? null : { subBin: v.sub_bin }),
                ...(v.last4 === undefined ? null : { last4: v.last4 }),
            };
        });

    export type Outbound = {
        type?: GiftCardSnapshotType | undefined;
        id?: string | null | undefined;
        bin?: string | undefined;
        sub_bin?: string | undefined;
        last4?: string | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, GiftCardSnapshot> = z
        .object({
            type: GiftCardSnapshotType$.optional(),
            id: z.nullable(z.string()).optional(),
            bin: z.string().optional(),
            subBin: z.string().optional(),
            last4: z.string().optional(),
        })
        .transform((v) => {
            return {
                ...(v.type === undefined ? null : { type: v.type }),
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.bin === undefined ? null : { bin: v.bin }),
                ...(v.subBin === undefined ? null : { sub_bin: v.subBin }),
                ...(v.last4 === undefined ? null : { last4: v.last4 }),
            };
        });
}

/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives.js";
import { ClosedEnum } from "../../types/enums.js";
import * as z from "zod";

/**
 * The type of this resource.
 */
export const GiftCardSnapshotType = {
    GiftCard: "gift-card",
} as const;
/**
 * The type of this resource.
 */
export type GiftCardSnapshotType = ClosedEnum<typeof GiftCardSnapshotType>;

/**
 * A snapshot of a gift card used in a transaction.
 */
export type GiftCardSnapshot = {
    /**
     * The type of this resource.
     */
    type?: GiftCardSnapshotType | undefined;
    /**
     * The ID of this gift card. This may be `null` if the gift
     *
     * @remarks
     * card is not stored.
     */
    id?: string | null | undefined;
    /**
     * The first 6 digits of the full gift card number.
     */
    bin?: string | undefined;
    /**
     * The 3 digits after the `bin` of the full gift card number.
     */
    subBin?: string | undefined;
    /**
     * The last 4 digits for the gift card.
     */
    last4?: string | undefined;
};

/** @internal */
export const GiftCardSnapshotType$inboundSchema: z.ZodNativeEnum<typeof GiftCardSnapshotType> =
    z.nativeEnum(GiftCardSnapshotType);

/** @internal */
export const GiftCardSnapshotType$outboundSchema: z.ZodNativeEnum<typeof GiftCardSnapshotType> =
    GiftCardSnapshotType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GiftCardSnapshotType$ {
    /** @deprecated use `GiftCardSnapshotType$inboundSchema` instead. */
    export const inboundSchema = GiftCardSnapshotType$inboundSchema;
    /** @deprecated use `GiftCardSnapshotType$outboundSchema` instead. */
    export const outboundSchema = GiftCardSnapshotType$outboundSchema;
}

/** @internal */
export const GiftCardSnapshot$inboundSchema: z.ZodType<GiftCardSnapshot, z.ZodTypeDef, unknown> = z
    .object({
        type: GiftCardSnapshotType$inboundSchema.optional(),
        id: z.nullable(z.string()).optional(),
        bin: z.string().optional(),
        sub_bin: z.string().optional(),
        last4: z.string().optional(),
    })
    .transform((v) => {
        return remap$(v, {
            sub_bin: "subBin",
        });
    });

/** @internal */
export type GiftCardSnapshot$Outbound = {
    type?: string | undefined;
    id?: string | null | undefined;
    bin?: string | undefined;
    sub_bin?: string | undefined;
    last4?: string | undefined;
};

/** @internal */
export const GiftCardSnapshot$outboundSchema: z.ZodType<
    GiftCardSnapshot$Outbound,
    z.ZodTypeDef,
    GiftCardSnapshot
> = z
    .object({
        type: GiftCardSnapshotType$outboundSchema.optional(),
        id: z.nullable(z.string()).optional(),
        bin: z.string().optional(),
        subBin: z.string().optional(),
        last4: z.string().optional(),
    })
    .transform((v) => {
        return remap$(v, {
            subBin: "sub_bin",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GiftCardSnapshot$ {
    /** @deprecated use `GiftCardSnapshot$inboundSchema` instead. */
    export const inboundSchema = GiftCardSnapshot$inboundSchema;
    /** @deprecated use `GiftCardSnapshot$outboundSchema` instead. */
    export const outboundSchema = GiftCardSnapshot$outboundSchema;
    /** @deprecated use `GiftCardSnapshot$Outbound` instead. */
    export type Outbound = GiftCardSnapshot$Outbound;
}

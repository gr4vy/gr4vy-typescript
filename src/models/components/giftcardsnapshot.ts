/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives";
import * as z from "zod";

/**
 * The type of this resource.
 */
export enum GiftCardSnapshotType {
    GiftCard = "gift-card",
}

/**
 * A snapshot of a gift card used in a transaction.
 */
export type GiftCardSnapshot = {
    /**
     * The type of this resource.
     */
    type?: GiftCardSnapshotType | undefined;
    /**
     * The ID of this gift card. This may be `null` if the gift
     *
     * @remarks
     * card is not stored.
     */
    id?: string | null | undefined;
    /**
     * The first 6 digits of the full gift card number.
     */
    bin?: string | undefined;
    /**
     * The 3 digits after the `bin` of the full gift card number.
     */
    subBin?: string | undefined;
    /**
     * The last 4 digits for the gift card.
     */
    last4?: string | undefined;
};

/** @internal */
export namespace GiftCardSnapshotType$ {
    export const inboundSchema = z.nativeEnum(GiftCardSnapshotType);
    export const outboundSchema = inboundSchema;
}

/** @internal */
export namespace GiftCardSnapshot$ {
    export const inboundSchema: z.ZodType<GiftCardSnapshot, z.ZodTypeDef, unknown> = z
        .object({
            type: GiftCardSnapshotType$.inboundSchema.optional(),
            id: z.nullable(z.string()).optional(),
            bin: z.string().optional(),
            sub_bin: z.string().optional(),
            last4: z.string().optional(),
        })
        .transform((v) => {
            return remap$(v, {
                sub_bin: "subBin",
            });
        });

    export type Outbound = {
        type?: string | undefined;
        id?: string | null | undefined;
        bin?: string | undefined;
        sub_bin?: string | undefined;
        last4?: string | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, GiftCardSnapshot> = z
        .object({
            type: GiftCardSnapshotType$.outboundSchema.optional(),
            id: z.nullable(z.string()).optional(),
            bin: z.string().optional(),
            subBin: z.string().optional(),
            last4: z.string().optional(),
        })
        .transform((v) => {
            return remap$(v, {
                subBin: "sub_bin",
            });
        });
}

/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives.js";
import { ClosedEnum } from "../../types/enums.js";
import {
    ApiRoutersAntiFraudServicesSchemasField,
    ApiRoutersAntiFraudServicesSchemasField$inboundSchema,
    ApiRoutersAntiFraudServicesSchemasField$Outbound,
    ApiRoutersAntiFraudServicesSchemasField$outboundSchema,
} from "./apiroutersantifraudservicesschemasfield.js";
import * as z from "zod";

export const SimualtorVerifyAntiFraudServiceDefinitionId = {
    MockAntiFraud: "mock-anti-fraud",
} as const;
export type SimualtorVerifyAntiFraudServiceDefinitionId = ClosedEnum<
    typeof SimualtorVerifyAntiFraudServiceDefinitionId
>;

/**
 * Base model with JSON encoders.
 */
export type SimualtorVerify = {
    fields?: Array<ApiRoutersAntiFraudServicesSchemasField> | undefined;
    antiFraudServiceDefinitionId?: SimualtorVerifyAntiFraudServiceDefinitionId | undefined;
    antiFraudServiceId?: string | undefined;
};

/** @internal */
export const SimualtorVerifyAntiFraudServiceDefinitionId$inboundSchema: z.ZodNativeEnum<
    typeof SimualtorVerifyAntiFraudServiceDefinitionId
> = z.nativeEnum(SimualtorVerifyAntiFraudServiceDefinitionId);

/** @internal */
export const SimualtorVerifyAntiFraudServiceDefinitionId$outboundSchema: z.ZodNativeEnum<
    typeof SimualtorVerifyAntiFraudServiceDefinitionId
> = SimualtorVerifyAntiFraudServiceDefinitionId$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace SimualtorVerifyAntiFraudServiceDefinitionId$ {
    /** @deprecated use `SimualtorVerifyAntiFraudServiceDefinitionId$inboundSchema` instead. */
    export const inboundSchema = SimualtorVerifyAntiFraudServiceDefinitionId$inboundSchema;
    /** @deprecated use `SimualtorVerifyAntiFraudServiceDefinitionId$outboundSchema` instead. */
    export const outboundSchema = SimualtorVerifyAntiFraudServiceDefinitionId$outboundSchema;
}

/** @internal */
export const SimualtorVerify$inboundSchema: z.ZodType<SimualtorVerify, z.ZodTypeDef, unknown> = z
    .object({
        fields: z.array(ApiRoutersAntiFraudServicesSchemasField$inboundSchema).optional(),
        anti_fraud_service_definition_id:
            SimualtorVerifyAntiFraudServiceDefinitionId$inboundSchema.default("mock-anti-fraud"),
        anti_fraud_service_id: z.string().optional(),
    })
    .transform((v) => {
        return remap$(v, {
            anti_fraud_service_definition_id: "antiFraudServiceDefinitionId",
            anti_fraud_service_id: "antiFraudServiceId",
        });
    });

/** @internal */
export type SimualtorVerify$Outbound = {
    fields?: Array<ApiRoutersAntiFraudServicesSchemasField$Outbound> | undefined;
    anti_fraud_service_definition_id: string;
    anti_fraud_service_id?: string | undefined;
};

/** @internal */
export const SimualtorVerify$outboundSchema: z.ZodType<
    SimualtorVerify$Outbound,
    z.ZodTypeDef,
    SimualtorVerify
> = z
    .object({
        fields: z.array(ApiRoutersAntiFraudServicesSchemasField$outboundSchema).optional(),
        antiFraudServiceDefinitionId:
            SimualtorVerifyAntiFraudServiceDefinitionId$outboundSchema.default("mock-anti-fraud"),
        antiFraudServiceId: z.string().optional(),
    })
    .transform((v) => {
        return remap$(v, {
            antiFraudServiceDefinitionId: "anti_fraud_service_definition_id",
            antiFraudServiceId: "anti_fraud_service_id",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace SimualtorVerify$ {
    /** @deprecated use `SimualtorVerify$inboundSchema` instead. */
    export const inboundSchema = SimualtorVerify$inboundSchema;
    /** @deprecated use `SimualtorVerify$outboundSchema` instead. */
    export const outboundSchema = SimualtorVerify$outboundSchema;
    /** @deprecated use `SimualtorVerify$Outbound` instead. */
    export type Outbound = SimualtorVerify$Outbound;
}

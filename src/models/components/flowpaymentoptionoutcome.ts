/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives";
import * as z from "zod";

/**
 * The type of this resource. Is always `action`.
 */
export enum FlowPaymentOptionOutcomeType {
    Action = "action",
}

/**
 * Outcome for checkout flow/select payment options action.
 *
 * @remarks
 * Each option is a Gr4vy payment option object.
 */
export type FlowPaymentOptionOutcome = {
    /**
     * The type of this resource. Is always `action`.
     */
    type?: FlowPaymentOptionOutcomeType | undefined;
    /**
     * Payment option identifier.
     */
    id?: string | undefined;
    /**
     * Verbose payment option name.
     */
    label?: string | undefined;
    /**
     * The status of the payment option, true if at least one underlying
     *
     * @remarks
     * connection is active, otherwise false.
     */
    active?: boolean | undefined;
    /**
     * Optional group label for a given payment option, e.g. `Bank`.
     */
    group?: string | null | undefined;
    /**
     * Payment option icon URL.
     */
    iconUrl?: string | undefined;
};

/** @internal */
export namespace FlowPaymentOptionOutcomeType$ {
    export const inboundSchema = z.nativeEnum(FlowPaymentOptionOutcomeType);
    export const outboundSchema = inboundSchema;
}

/** @internal */
export namespace FlowPaymentOptionOutcome$ {
    export const inboundSchema: z.ZodType<FlowPaymentOptionOutcome, z.ZodTypeDef, unknown> = z
        .object({
            type: FlowPaymentOptionOutcomeType$.inboundSchema.optional(),
            id: z.string().optional(),
            label: z.string().optional(),
            active: z.boolean().optional(),
            group: z.nullable(z.string()).optional(),
            icon_url: z.string().optional(),
        })
        .transform((v) => {
            return remap$(v, {
                icon_url: "iconUrl",
            });
        });

    export type Outbound = {
        type?: string | undefined;
        id?: string | undefined;
        label?: string | undefined;
        active?: boolean | undefined;
        group?: string | null | undefined;
        icon_url?: string | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, FlowPaymentOptionOutcome> = z
        .object({
            type: FlowPaymentOptionOutcomeType$.outboundSchema.optional(),
            id: z.string().optional(),
            label: z.string().optional(),
            active: z.boolean().optional(),
            group: z.nullable(z.string()).optional(),
            iconUrl: z.string().optional(),
        })
        .transform((v) => {
            return remap$(v, {
                iconUrl: "icon_url",
            });
        });
}

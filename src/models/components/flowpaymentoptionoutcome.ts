/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives.js";
import { ClosedEnum } from "../../types/enums.js";
import * as z from "zod";

/**
 * The type of this resource. Is always `action`.
 */
export const FlowPaymentOptionOutcomeType = {
    Action: "action",
} as const;
/**
 * The type of this resource. Is always `action`.
 */
export type FlowPaymentOptionOutcomeType = ClosedEnum<typeof FlowPaymentOptionOutcomeType>;

/**
 * Outcome for checkout flow/select payment options action.
 *
 * @remarks
 * Each option is a Gr4vy payment option object.
 */
export type FlowPaymentOptionOutcome = {
    /**
     * The type of this resource. Is always `action`.
     */
    type?: FlowPaymentOptionOutcomeType | undefined;
    /**
     * Payment option identifier.
     */
    id?: string | undefined;
    /**
     * Verbose payment option name.
     */
    label?: string | undefined;
    /**
     * The status of the payment option, true if at least one underlying
     *
     * @remarks
     * connection is active, otherwise false.
     */
    active?: boolean | undefined;
    /**
     * Optional group label for a given payment option, e.g. `Bank`.
     */
    group?: string | null | undefined;
    /**
     * Payment option icon URL.
     */
    iconUrl?: string | undefined;
};

/** @internal */
export const FlowPaymentOptionOutcomeType$inboundSchema: z.ZodNativeEnum<
    typeof FlowPaymentOptionOutcomeType
> = z.nativeEnum(FlowPaymentOptionOutcomeType);

/** @internal */
export const FlowPaymentOptionOutcomeType$outboundSchema: z.ZodNativeEnum<
    typeof FlowPaymentOptionOutcomeType
> = FlowPaymentOptionOutcomeType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FlowPaymentOptionOutcomeType$ {
    /** @deprecated use `FlowPaymentOptionOutcomeType$inboundSchema` instead. */
    export const inboundSchema = FlowPaymentOptionOutcomeType$inboundSchema;
    /** @deprecated use `FlowPaymentOptionOutcomeType$outboundSchema` instead. */
    export const outboundSchema = FlowPaymentOptionOutcomeType$outboundSchema;
}

/** @internal */
export const FlowPaymentOptionOutcome$inboundSchema: z.ZodType<
    FlowPaymentOptionOutcome,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        type: FlowPaymentOptionOutcomeType$inboundSchema.optional(),
        id: z.string().optional(),
        label: z.string().optional(),
        active: z.boolean().optional(),
        group: z.nullable(z.string()).optional(),
        icon_url: z.string().optional(),
    })
    .transform((v) => {
        return remap$(v, {
            icon_url: "iconUrl",
        });
    });

/** @internal */
export type FlowPaymentOptionOutcome$Outbound = {
    type?: string | undefined;
    id?: string | undefined;
    label?: string | undefined;
    active?: boolean | undefined;
    group?: string | null | undefined;
    icon_url?: string | undefined;
};

/** @internal */
export const FlowPaymentOptionOutcome$outboundSchema: z.ZodType<
    FlowPaymentOptionOutcome$Outbound,
    z.ZodTypeDef,
    FlowPaymentOptionOutcome
> = z
    .object({
        type: FlowPaymentOptionOutcomeType$outboundSchema.optional(),
        id: z.string().optional(),
        label: z.string().optional(),
        active: z.boolean().optional(),
        group: z.nullable(z.string()).optional(),
        iconUrl: z.string().optional(),
    })
    .transform((v) => {
        return remap$(v, {
            iconUrl: "icon_url",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FlowPaymentOptionOutcome$ {
    /** @deprecated use `FlowPaymentOptionOutcome$inboundSchema` instead. */
    export const inboundSchema = FlowPaymentOptionOutcome$inboundSchema;
    /** @deprecated use `FlowPaymentOptionOutcome$outboundSchema` instead. */
    export const outboundSchema = FlowPaymentOptionOutcome$outboundSchema;
    /** @deprecated use `FlowPaymentOptionOutcome$Outbound` instead. */
    export type Outbound = FlowPaymentOptionOutcome$Outbound;
}

/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives.js";
import { ClosedEnum } from "../../types/enums.js";
import * as z from "zod";

export const DigitalWalletPANPaymentMethodCreateMethod = {
    GooglepayPanOnly: "googlepay_pan_only",
    ClickToPay: "click-to-pay",
} as const;
export type DigitalWalletPANPaymentMethodCreateMethod = ClosedEnum<
    typeof DigitalWalletPANPaymentMethodCreateMethod
>;

/**
 * Card
 *
 * @remarks
 *
 * Card details to use in a transaction or to register a new payment method.
 */
export type DigitalWalletPANPaymentMethodCreate = {
    expirationDate: string;
    number: string;
    buyerExternalIdentifier?: string | undefined;
    buyerId?: string | undefined;
    externalIdentifier?: string | undefined;
    cardType?: string | undefined;
    method: DigitalWalletPANPaymentMethodCreateMethod;
    redirectUrl?: string | undefined;
    securityCode?: any | null | undefined;
};

/** @internal */
export const DigitalWalletPANPaymentMethodCreateMethod$inboundSchema: z.ZodNativeEnum<
    typeof DigitalWalletPANPaymentMethodCreateMethod
> = z.nativeEnum(DigitalWalletPANPaymentMethodCreateMethod);

/** @internal */
export const DigitalWalletPANPaymentMethodCreateMethod$outboundSchema: z.ZodNativeEnum<
    typeof DigitalWalletPANPaymentMethodCreateMethod
> = DigitalWalletPANPaymentMethodCreateMethod$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DigitalWalletPANPaymentMethodCreateMethod$ {
    /** @deprecated use `DigitalWalletPANPaymentMethodCreateMethod$inboundSchema` instead. */
    export const inboundSchema = DigitalWalletPANPaymentMethodCreateMethod$inboundSchema;
    /** @deprecated use `DigitalWalletPANPaymentMethodCreateMethod$outboundSchema` instead. */
    export const outboundSchema = DigitalWalletPANPaymentMethodCreateMethod$outboundSchema;
}

/** @internal */
export const DigitalWalletPANPaymentMethodCreate$inboundSchema: z.ZodType<
    DigitalWalletPANPaymentMethodCreate,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        expiration_date: z.string(),
        number: z.string(),
        buyer_external_identifier: z.string().optional(),
        buyer_id: z.string().optional(),
        external_identifier: z.string().optional(),
        card_type: z.string().optional(),
        method: DigitalWalletPANPaymentMethodCreateMethod$inboundSchema,
        redirect_url: z.string().optional(),
        security_code: z.nullable(z.any()).optional(),
    })
    .transform((v) => {
        return remap$(v, {
            expiration_date: "expirationDate",
            buyer_external_identifier: "buyerExternalIdentifier",
            buyer_id: "buyerId",
            external_identifier: "externalIdentifier",
            card_type: "cardType",
            redirect_url: "redirectUrl",
            security_code: "securityCode",
        });
    });

/** @internal */
export type DigitalWalletPANPaymentMethodCreate$Outbound = {
    expiration_date: string;
    number: string;
    buyer_external_identifier?: string | undefined;
    buyer_id?: string | undefined;
    external_identifier?: string | undefined;
    card_type?: string | undefined;
    method: string;
    redirect_url?: string | undefined;
    security_code?: any | null | undefined;
};

/** @internal */
export const DigitalWalletPANPaymentMethodCreate$outboundSchema: z.ZodType<
    DigitalWalletPANPaymentMethodCreate$Outbound,
    z.ZodTypeDef,
    DigitalWalletPANPaymentMethodCreate
> = z
    .object({
        expirationDate: z.string(),
        number: z.string(),
        buyerExternalIdentifier: z.string().optional(),
        buyerId: z.string().optional(),
        externalIdentifier: z.string().optional(),
        cardType: z.string().optional(),
        method: DigitalWalletPANPaymentMethodCreateMethod$outboundSchema,
        redirectUrl: z.string().optional(),
        securityCode: z.nullable(z.any()).optional(),
    })
    .transform((v) => {
        return remap$(v, {
            expirationDate: "expiration_date",
            buyerExternalIdentifier: "buyer_external_identifier",
            buyerId: "buyer_id",
            externalIdentifier: "external_identifier",
            cardType: "card_type",
            redirectUrl: "redirect_url",
            securityCode: "security_code",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DigitalWalletPANPaymentMethodCreate$ {
    /** @deprecated use `DigitalWalletPANPaymentMethodCreate$inboundSchema` instead. */
    export const inboundSchema = DigitalWalletPANPaymentMethodCreate$inboundSchema;
    /** @deprecated use `DigitalWalletPANPaymentMethodCreate$outboundSchema` instead. */
    export const outboundSchema = DigitalWalletPANPaymentMethodCreate$outboundSchema;
    /** @deprecated use `DigitalWalletPANPaymentMethodCreate$Outbound` instead. */
    export type Outbound = DigitalWalletPANPaymentMethodCreate$Outbound;
}

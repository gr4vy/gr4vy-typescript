/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives";
import * as z from "zod";

/**
 * The type of this resource. Is always `transaction-event`.
 */
export enum GiftCardRedemptionFailedType {
    TransactionEvent = "transaction-event",
}

/**
 * The name of this resource. Is always `gift-card-redemption-failed`.
 */
export enum GiftCardRedemptionFailedName {
    GiftCardRedemptionFailed = "gift-card-redemption-failed",
}

/**
 * Additional context for this event.
 */
export type GiftCardRedemptionFailedContext = {
    /**
     * The unique ID of the Gift Card service used.
     */
    giftCardServiceId?: string | undefined;
    /**
     * The name of the Gift Card service used.
     */
    giftCardServiceName?: string | undefined;
    /**
     * The Gift Card service definition used.
     */
    giftCardServiceDefinitionId?: string | undefined;
    /**
     * The endpoint for the request, if performed.
     */
    url?: string | null | undefined;
    /**
     * The HTTP body sent to the Gift Card provider, if performed.
     */
    request?: string | null | undefined;
    /**
     * The HTTP body received from the Gift Card provider, if any.
     */
    response?: string | null | undefined;
    /**
     * The HTTP response status code from the Gift Card provider, if any.
     */
    responseStatusCode?: number | null | undefined;
    /**
     * The reason we could not redeem the gift cards.
     */
    reason?: string | undefined;
};

/**
 * This event logs the request and response details of HTTP calls made to redeem gift cards, in case the call failed.
 */
export type GiftCardRedemptionFailed = {
    /**
     * The type of this resource. Is always `transaction-event`.
     */
    type?: GiftCardRedemptionFailedType | undefined;
    /**
     * The unique identifier for this event.
     */
    id?: string | undefined;
    /**
     * The name of this resource. Is always `gift-card-redemption-failed`.
     */
    name?: GiftCardRedemptionFailedName | undefined;
    /**
     * The date and time when this event was created in our system.
     */
    createdAt?: Date | undefined;
    /**
     * Additional context for this event.
     */
    context?: GiftCardRedemptionFailedContext | undefined;
};

/** @internal */
export namespace GiftCardRedemptionFailedType$ {
    export const inboundSchema = z.nativeEnum(GiftCardRedemptionFailedType);
    export const outboundSchema = inboundSchema;
}

/** @internal */
export namespace GiftCardRedemptionFailedName$ {
    export const inboundSchema = z.nativeEnum(GiftCardRedemptionFailedName);
    export const outboundSchema = inboundSchema;
}

/** @internal */
export namespace GiftCardRedemptionFailedContext$ {
    export const inboundSchema: z.ZodType<GiftCardRedemptionFailedContext, z.ZodTypeDef, unknown> =
        z
            .object({
                gift_card_service_id: z.string().optional(),
                gift_card_service_name: z.string().optional(),
                gift_card_service_definition_id: z.string().optional(),
                url: z.nullable(z.string()).optional(),
                request: z.nullable(z.string()).optional(),
                response: z.nullable(z.string()).optional(),
                response_status_code: z.nullable(z.number()).optional(),
                reason: z.string().optional(),
            })
            .transform((v) => {
                return remap$(v, {
                    gift_card_service_id: "giftCardServiceId",
                    gift_card_service_name: "giftCardServiceName",
                    gift_card_service_definition_id: "giftCardServiceDefinitionId",
                    response_status_code: "responseStatusCode",
                });
            });

    export type Outbound = {
        gift_card_service_id?: string | undefined;
        gift_card_service_name?: string | undefined;
        gift_card_service_definition_id?: string | undefined;
        url?: string | null | undefined;
        request?: string | null | undefined;
        response?: string | null | undefined;
        response_status_code?: number | null | undefined;
        reason?: string | undefined;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        GiftCardRedemptionFailedContext
    > = z
        .object({
            giftCardServiceId: z.string().optional(),
            giftCardServiceName: z.string().optional(),
            giftCardServiceDefinitionId: z.string().optional(),
            url: z.nullable(z.string()).optional(),
            request: z.nullable(z.string()).optional(),
            response: z.nullable(z.string()).optional(),
            responseStatusCode: z.nullable(z.number()).optional(),
            reason: z.string().optional(),
        })
        .transform((v) => {
            return remap$(v, {
                giftCardServiceId: "gift_card_service_id",
                giftCardServiceName: "gift_card_service_name",
                giftCardServiceDefinitionId: "gift_card_service_definition_id",
                responseStatusCode: "response_status_code",
            });
        });
}

/** @internal */
export namespace GiftCardRedemptionFailed$ {
    export const inboundSchema: z.ZodType<GiftCardRedemptionFailed, z.ZodTypeDef, unknown> = z
        .object({
            type: GiftCardRedemptionFailedType$.inboundSchema.optional(),
            id: z.string().optional(),
            name: GiftCardRedemptionFailedName$.inboundSchema.optional(),
            created_at: z
                .string()
                .datetime({ offset: true })
                .transform((v) => new Date(v))
                .optional(),
            context: z.lazy(() => GiftCardRedemptionFailedContext$.inboundSchema).optional(),
        })
        .transform((v) => {
            return remap$(v, {
                created_at: "createdAt",
            });
        });

    export type Outbound = {
        type?: string | undefined;
        id?: string | undefined;
        name?: string | undefined;
        created_at?: string | undefined;
        context?: GiftCardRedemptionFailedContext$.Outbound | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, GiftCardRedemptionFailed> = z
        .object({
            type: GiftCardRedemptionFailedType$.outboundSchema.optional(),
            id: z.string().optional(),
            name: GiftCardRedemptionFailedName$.outboundSchema.optional(),
            createdAt: z
                .date()
                .transform((v) => v.toISOString())
                .optional(),
            context: z.lazy(() => GiftCardRedemptionFailedContext$.outboundSchema).optional(),
        })
        .transform((v) => {
            return remap$(v, {
                createdAt: "created_at",
            });
        });
}

/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives";
import * as z from "zod";

/**
 * The gift card details to store.
 */
export type GiftCardStoreRequest = {
    /**
     * The 16-19 digit number for this gift card.
     */
    number: string;
    /**
     * The PIN for this gift card.
     */
    pin: string;
    /**
     * The ID of the buyer to associate this gift card to. If this field is
     *
     * @remarks
     * provided then the `buyer_external_identifier` field needs to be unset.
     */
    buyerId?: string | undefined;
    /**
     * The `external_identifier` of the buyer to associate this gift card
     *
     * @remarks
     * to. If this field is provided then the `buyer_id` field
     * needs to be unset.
     */
    buyerExternalIdentifier?: string | undefined;
};

/** @internal */
export namespace GiftCardStoreRequest$ {
    export const inboundSchema: z.ZodType<GiftCardStoreRequest, z.ZodTypeDef, unknown> = z
        .object({
            number: z.string(),
            pin: z.string(),
            buyer_id: z.string().optional(),
            buyer_external_identifier: z.string().optional(),
        })
        .transform((v) => {
            return remap$(v, {
                buyer_id: "buyerId",
                buyer_external_identifier: "buyerExternalIdentifier",
            });
        });

    export type Outbound = {
        number: string;
        pin: string;
        buyer_id?: string | undefined;
        buyer_external_identifier?: string | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, GiftCardStoreRequest> = z
        .object({
            number: z.string(),
            pin: z.string(),
            buyerId: z.string().optional(),
            buyerExternalIdentifier: z.string().optional(),
        })
        .transform((v) => {
            return remap$(v, {
                buyerId: "buyer_id",
                buyerExternalIdentifier: "buyer_external_identifier",
            });
        });
}

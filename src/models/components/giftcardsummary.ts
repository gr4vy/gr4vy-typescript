/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives.js";
import { ClosedEnum } from "../../types/enums.js";
import * as z from "zod";

/**
 * The type of this resource.
 */
export const GiftCardSummaryType = {
    GiftCard: "gift-card",
} as const;
/**
 * The type of this resource.
 */
export type GiftCardSummaryType = ClosedEnum<typeof GiftCardSummaryType>;

/**
 * If the last balance update failed, this will contain the
 *
 * @remarks
 * internal code for this error.
 */
export const BalanceErrorCode = {
    ExpiredCard: "expired_card",
    InactiveCard: "inactive_card",
    IncorrectCurrency: "incorrect_currency",
    InsufficientFunds: "insufficient_funds",
    InvalidAmount: "invalid_amount",
    InvalidGiftCard: "invalid_gift_card",
    InvalidServiceConfiguration: "invalid_service_configuration",
    InvalidServiceCredentials: "invalid_service_credentials",
    OperationCanceled: "operation_canceled",
    ServiceError: "service_error",
    ServiceNetworkError: "service_network_error",
    UnknownError: "unknown_error",
} as const;
/**
 * If the last balance update failed, this will contain the
 *
 * @remarks
 * internal code for this error.
 */
export type BalanceErrorCode = ClosedEnum<typeof BalanceErrorCode>;

/**
 * A gift card stored for a buyer.
 */
export type GiftCardSummary = {
    /**
     * The type of this resource.
     */
    type?: GiftCardSummaryType | undefined;
    /**
     * The ID of this gift card.
     */
    id?: string | null | undefined;
    /**
     * The unique ID for a merchant account.
     */
    merchantAccountId?: string | undefined;
    /**
     * The first 6 digits of the full gift card number.
     */
    bin?: string | undefined;
    /**
     * The 3 digits after the `bin` of the full gift card number.
     */
    subBin?: string | undefined;
    /**
     * The last 4 digits for the gift card.
     */
    last4?: string | undefined;
    /**
     * The date and time when this gift card expires. This is a full
     *
     * @remarks
     * date/time and may be more accurate than the actual expiry date
     * received by the gift card service.
     */
    expirationDate?: Date | null | undefined;
    /**
     * The amount remaining on the balance for this gift card according to the
     *
     * @remarks
     * gift card service. This may be `null` if the balance could not be fetched.
     */
    balance?: number | null | undefined;
    /**
     * The ISO-4217 currency code that this gift card has a balance for.
     */
    currency?: string | null | undefined;
    /**
     * If the last balance update failed, this will contain the
     *
     * @remarks
     * internal code for this error.
     */
    balanceErrorCode?: BalanceErrorCode | null | undefined;
    /**
     * If the last balance update failed, this will contain the
     *
     * @remarks
     * the raw error code received from the gift card provider.
     */
    balanceRawErrorCode?: string | null | undefined;
    /**
     * If the last balance update failed, this will contain the
     *
     * @remarks
     * the raw error message received from the gift card provider.
     */
    balanceRawErrorMessage?: string | null | undefined;
};

/** @internal */
export const GiftCardSummaryType$inboundSchema: z.ZodNativeEnum<typeof GiftCardSummaryType> =
    z.nativeEnum(GiftCardSummaryType);

/** @internal */
export const GiftCardSummaryType$outboundSchema: z.ZodNativeEnum<typeof GiftCardSummaryType> =
    GiftCardSummaryType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GiftCardSummaryType$ {
    /** @deprecated use `GiftCardSummaryType$inboundSchema` instead. */
    export const inboundSchema = GiftCardSummaryType$inboundSchema;
    /** @deprecated use `GiftCardSummaryType$outboundSchema` instead. */
    export const outboundSchema = GiftCardSummaryType$outboundSchema;
}

/** @internal */
export const BalanceErrorCode$inboundSchema: z.ZodNativeEnum<typeof BalanceErrorCode> =
    z.nativeEnum(BalanceErrorCode);

/** @internal */
export const BalanceErrorCode$outboundSchema: z.ZodNativeEnum<typeof BalanceErrorCode> =
    BalanceErrorCode$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace BalanceErrorCode$ {
    /** @deprecated use `BalanceErrorCode$inboundSchema` instead. */
    export const inboundSchema = BalanceErrorCode$inboundSchema;
    /** @deprecated use `BalanceErrorCode$outboundSchema` instead. */
    export const outboundSchema = BalanceErrorCode$outboundSchema;
}

/** @internal */
export const GiftCardSummary$inboundSchema: z.ZodType<GiftCardSummary, z.ZodTypeDef, unknown> = z
    .object({
        type: GiftCardSummaryType$inboundSchema.optional(),
        id: z.nullable(z.string()).optional(),
        merchant_account_id: z.string().optional(),
        bin: z.string().optional(),
        sub_bin: z.string().optional(),
        last4: z.string().optional(),
        expiration_date: z
            .nullable(
                z
                    .string()
                    .datetime({ offset: true })
                    .transform((v) => new Date(v))
            )
            .optional(),
        balance: z.nullable(z.number().int()).optional(),
        currency: z.nullable(z.string()).optional(),
        balance_error_code: z.nullable(BalanceErrorCode$inboundSchema).optional(),
        balance_raw_error_code: z.nullable(z.string()).optional(),
        balance_raw_error_message: z.nullable(z.string()).optional(),
    })
    .transform((v) => {
        return remap$(v, {
            merchant_account_id: "merchantAccountId",
            sub_bin: "subBin",
            expiration_date: "expirationDate",
            balance_error_code: "balanceErrorCode",
            balance_raw_error_code: "balanceRawErrorCode",
            balance_raw_error_message: "balanceRawErrorMessage",
        });
    });

/** @internal */
export type GiftCardSummary$Outbound = {
    type?: string | undefined;
    id?: string | null | undefined;
    merchant_account_id?: string | undefined;
    bin?: string | undefined;
    sub_bin?: string | undefined;
    last4?: string | undefined;
    expiration_date?: string | null | undefined;
    balance?: number | null | undefined;
    currency?: string | null | undefined;
    balance_error_code?: string | null | undefined;
    balance_raw_error_code?: string | null | undefined;
    balance_raw_error_message?: string | null | undefined;
};

/** @internal */
export const GiftCardSummary$outboundSchema: z.ZodType<
    GiftCardSummary$Outbound,
    z.ZodTypeDef,
    GiftCardSummary
> = z
    .object({
        type: GiftCardSummaryType$outboundSchema.optional(),
        id: z.nullable(z.string()).optional(),
        merchantAccountId: z.string().optional(),
        bin: z.string().optional(),
        subBin: z.string().optional(),
        last4: z.string().optional(),
        expirationDate: z.nullable(z.date().transform((v) => v.toISOString())).optional(),
        balance: z.nullable(z.number().int()).optional(),
        currency: z.nullable(z.string()).optional(),
        balanceErrorCode: z.nullable(BalanceErrorCode$outboundSchema).optional(),
        balanceRawErrorCode: z.nullable(z.string()).optional(),
        balanceRawErrorMessage: z.nullable(z.string()).optional(),
    })
    .transform((v) => {
        return remap$(v, {
            merchantAccountId: "merchant_account_id",
            subBin: "sub_bin",
            expirationDate: "expiration_date",
            balanceErrorCode: "balance_error_code",
            balanceRawErrorCode: "balance_raw_error_code",
            balanceRawErrorMessage: "balance_raw_error_message",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GiftCardSummary$ {
    /** @deprecated use `GiftCardSummary$inboundSchema` instead. */
    export const inboundSchema = GiftCardSummary$inboundSchema;
    /** @deprecated use `GiftCardSummary$outboundSchema` instead. */
    export const outboundSchema = GiftCardSummary$outboundSchema;
    /** @deprecated use `GiftCardSummary$Outbound` instead. */
    export type Outbound = GiftCardSummary$Outbound;
}

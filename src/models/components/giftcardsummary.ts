/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as z from "zod";

/**
 * The type of this resource.
 */
export enum GiftCardSummaryType {
    GiftCard = "gift-card",
}

/**
 * If the last balance update failed, this will contain the
 *
 * @remarks
 * internal code for this error.
 */
export enum BalanceErrorCode {
    ExpiredCard = "expired_card",
    InactiveCard = "inactive_card",
    IncorrectCurrency = "incorrect_currency",
    InsufficientFunds = "insufficient_funds",
    InvalidAmount = "invalid_amount",
    InvalidGiftCard = "invalid_gift_card",
    InvalidServiceConfiguration = "invalid_service_configuration",
    InvalidServiceCredentials = "invalid_service_credentials",
    OperationCanceled = "operation_canceled",
    ServiceError = "service_error",
    ServiceNetworkError = "service_network_error",
    UnknownError = "unknown_error",
}

/**
 * A gift card stored for a buyer.
 */
export type GiftCardSummary = {
    /**
     * The type of this resource.
     */
    type?: GiftCardSummaryType | undefined;
    /**
     * The ID of this gift card.
     */
    id?: string | null | undefined;
    /**
     * The unique ID for a merchant account.
     */
    merchantAccountId?: string | undefined;
    /**
     * The first 6 digits of the full gift card number.
     */
    bin?: string | undefined;
    /**
     * The 3 digits after the `bin` of the full gift card number.
     */
    subBin?: string | undefined;
    /**
     * The last 4 digits for the gift card.
     */
    last4?: string | undefined;
    /**
     * The date and time when this gift card expires. This is a full
     *
     * @remarks
     * date/time and may be more accurate than the actual expiry date
     * received by the gift card service.
     */
    expirationDate?: Date | null | undefined;
    /**
     * The amount remaining on the balance for this gift card according to the
     *
     * @remarks
     * gift card service. This may be `null` if the balance could not be fetched.
     */
    balance?: number | null | undefined;
    /**
     * The ISO-4217 currency code that this gift card has a balance for.
     */
    currency?: string | null | undefined;
    /**
     * If the last balance update failed, this will contain the
     *
     * @remarks
     * internal code for this error.
     */
    balanceErrorCode?: BalanceErrorCode | null | undefined;
    /**
     * If the last balance update failed, this will contain the
     *
     * @remarks
     * the raw error code received from the gift card provider.
     */
    balanceRawErrorCode?: string | null | undefined;
    /**
     * If the last balance update failed, this will contain the
     *
     * @remarks
     * the raw error message received from the gift card provider.
     */
    balanceRawErrorMessage?: string | null | undefined;
};

/** @internal */
export const GiftCardSummaryType$ = z.nativeEnum(GiftCardSummaryType);

/** @internal */
export const BalanceErrorCode$ = z.nativeEnum(BalanceErrorCode);

/** @internal */
export namespace GiftCardSummary$ {
    export type Inbound = {
        type?: GiftCardSummaryType | undefined;
        id?: string | null | undefined;
        merchant_account_id?: string | undefined;
        bin?: string | undefined;
        sub_bin?: string | undefined;
        last4?: string | undefined;
        expiration_date?: string | null | undefined;
        balance?: number | null | undefined;
        currency?: string | null | undefined;
        balance_error_code?: BalanceErrorCode | null | undefined;
        balance_raw_error_code?: string | null | undefined;
        balance_raw_error_message?: string | null | undefined;
    };

    export const inboundSchema: z.ZodType<GiftCardSummary, z.ZodTypeDef, Inbound> = z
        .object({
            type: GiftCardSummaryType$.optional(),
            id: z.nullable(z.string()).optional(),
            merchant_account_id: z.string().optional(),
            bin: z.string().optional(),
            sub_bin: z.string().optional(),
            last4: z.string().optional(),
            expiration_date: z
                .nullable(
                    z
                        .string()
                        .datetime({ offset: true })
                        .transform((v) => new Date(v))
                )
                .optional(),
            balance: z.nullable(z.number().int()).optional(),
            currency: z.nullable(z.string()).optional(),
            balance_error_code: z.nullable(BalanceErrorCode$).optional(),
            balance_raw_error_code: z.nullable(z.string()).optional(),
            balance_raw_error_message: z.nullable(z.string()).optional(),
        })
        .transform((v) => {
            return {
                ...(v.type === undefined ? null : { type: v.type }),
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.merchant_account_id === undefined
                    ? null
                    : { merchantAccountId: v.merchant_account_id }),
                ...(v.bin === undefined ? null : { bin: v.bin }),
                ...(v.sub_bin === undefined ? null : { subBin: v.sub_bin }),
                ...(v.last4 === undefined ? null : { last4: v.last4 }),
                ...(v.expiration_date === undefined ? null : { expirationDate: v.expiration_date }),
                ...(v.balance === undefined ? null : { balance: v.balance }),
                ...(v.currency === undefined ? null : { currency: v.currency }),
                ...(v.balance_error_code === undefined
                    ? null
                    : { balanceErrorCode: v.balance_error_code }),
                ...(v.balance_raw_error_code === undefined
                    ? null
                    : { balanceRawErrorCode: v.balance_raw_error_code }),
                ...(v.balance_raw_error_message === undefined
                    ? null
                    : { balanceRawErrorMessage: v.balance_raw_error_message }),
            };
        });

    export type Outbound = {
        type?: GiftCardSummaryType | undefined;
        id?: string | null | undefined;
        merchant_account_id?: string | undefined;
        bin?: string | undefined;
        sub_bin?: string | undefined;
        last4?: string | undefined;
        expiration_date?: string | null | undefined;
        balance?: number | null | undefined;
        currency?: string | null | undefined;
        balance_error_code?: BalanceErrorCode | null | undefined;
        balance_raw_error_code?: string | null | undefined;
        balance_raw_error_message?: string | null | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, GiftCardSummary> = z
        .object({
            type: GiftCardSummaryType$.optional(),
            id: z.nullable(z.string()).optional(),
            merchantAccountId: z.string().optional(),
            bin: z.string().optional(),
            subBin: z.string().optional(),
            last4: z.string().optional(),
            expirationDate: z.nullable(z.date().transform((v) => v.toISOString())).optional(),
            balance: z.nullable(z.number().int()).optional(),
            currency: z.nullable(z.string()).optional(),
            balanceErrorCode: z.nullable(BalanceErrorCode$).optional(),
            balanceRawErrorCode: z.nullable(z.string()).optional(),
            balanceRawErrorMessage: z.nullable(z.string()).optional(),
        })
        .transform((v) => {
            return {
                ...(v.type === undefined ? null : { type: v.type }),
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.merchantAccountId === undefined
                    ? null
                    : { merchant_account_id: v.merchantAccountId }),
                ...(v.bin === undefined ? null : { bin: v.bin }),
                ...(v.subBin === undefined ? null : { sub_bin: v.subBin }),
                ...(v.last4 === undefined ? null : { last4: v.last4 }),
                ...(v.expirationDate === undefined ? null : { expiration_date: v.expirationDate }),
                ...(v.balance === undefined ? null : { balance: v.balance }),
                ...(v.currency === undefined ? null : { currency: v.currency }),
                ...(v.balanceErrorCode === undefined
                    ? null
                    : { balance_error_code: v.balanceErrorCode }),
                ...(v.balanceRawErrorCode === undefined
                    ? null
                    : { balance_raw_error_code: v.balanceRawErrorCode }),
                ...(v.balanceRawErrorMessage === undefined
                    ? null
                    : { balance_raw_error_message: v.balanceRawErrorMessage }),
            };
        });
}

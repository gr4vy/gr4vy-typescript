/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as z from "zod";

/**
 * The type of this resource. Is always `outcome`.
 */
export enum FlowRedirectTransactionRoutingOutcomeType {
    Outcome = "outcome",
}

/**
 * Outcome for redirect transactions flow/routing action.
 *
 * @remarks
 * Each option is a Gr4vy payment service object.
 */
export type FlowRedirectTransactionRoutingOutcome = {
    /**
     * The type of this resource. Is always `outcome`.
     */
    type?: FlowRedirectTransactionRoutingOutcomeType | undefined;
    /**
     * Payment service identifier.
     */
    id?: string | undefined;
    /**
     * The display name of the payment service.
     */
    label?: string | undefined;
    /**
     * The status of the payment service.
     */
    active?: boolean | undefined;
    /**
     * Payment service icon URL.
     */
    iconUrl?: string | null | undefined;
    /**
     * Accepted currency ISO codes for the payment service.
     */
    countries?: Array<string> | undefined;
    /**
     * Accepted country ISO codes for the payment service.
     */
    currencies?: Array<string> | undefined;
};

/** @internal */
export const FlowRedirectTransactionRoutingOutcomeType$ = z.nativeEnum(
    FlowRedirectTransactionRoutingOutcomeType
);

/** @internal */
export namespace FlowRedirectTransactionRoutingOutcome$ {
    export type Inbound = {
        type?: FlowRedirectTransactionRoutingOutcomeType | undefined;
        id?: string | undefined;
        label?: string | undefined;
        active?: boolean | undefined;
        icon_url?: string | null | undefined;
        countries?: Array<string> | undefined;
        currencies?: Array<string> | undefined;
    };

    export const inboundSchema: z.ZodType<
        FlowRedirectTransactionRoutingOutcome,
        z.ZodTypeDef,
        Inbound
    > = z
        .object({
            type: FlowRedirectTransactionRoutingOutcomeType$.optional(),
            id: z.string().optional(),
            label: z.string().optional(),
            active: z.boolean().optional(),
            icon_url: z.nullable(z.string()).optional(),
            countries: z.array(z.string()).optional(),
            currencies: z.array(z.string()).optional(),
        })
        .transform((v) => {
            return {
                ...(v.type === undefined ? null : { type: v.type }),
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.label === undefined ? null : { label: v.label }),
                ...(v.active === undefined ? null : { active: v.active }),
                ...(v.icon_url === undefined ? null : { iconUrl: v.icon_url }),
                ...(v.countries === undefined ? null : { countries: v.countries }),
                ...(v.currencies === undefined ? null : { currencies: v.currencies }),
            };
        });

    export type Outbound = {
        type?: FlowRedirectTransactionRoutingOutcomeType | undefined;
        id?: string | undefined;
        label?: string | undefined;
        active?: boolean | undefined;
        icon_url?: string | null | undefined;
        countries?: Array<string> | undefined;
        currencies?: Array<string> | undefined;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        FlowRedirectTransactionRoutingOutcome
    > = z
        .object({
            type: FlowRedirectTransactionRoutingOutcomeType$.optional(),
            id: z.string().optional(),
            label: z.string().optional(),
            active: z.boolean().optional(),
            iconUrl: z.nullable(z.string()).optional(),
            countries: z.array(z.string()).optional(),
            currencies: z.array(z.string()).optional(),
        })
        .transform((v) => {
            return {
                ...(v.type === undefined ? null : { type: v.type }),
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.label === undefined ? null : { label: v.label }),
                ...(v.active === undefined ? null : { active: v.active }),
                ...(v.iconUrl === undefined ? null : { icon_url: v.iconUrl }),
                ...(v.countries === undefined ? null : { countries: v.countries }),
                ...(v.currencies === undefined ? null : { currencies: v.currencies }),
            };
        });
}

/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives.js";
import { ClosedEnum } from "../../types/enums.js";
import * as z from "zod";

/**
 * The type of this resource. Is always `outcome`.
 */
export const FlowRedirectTransactionRoutingOutcomeType = {
    Outcome: "outcome",
} as const;
/**
 * The type of this resource. Is always `outcome`.
 */
export type FlowRedirectTransactionRoutingOutcomeType = ClosedEnum<
    typeof FlowRedirectTransactionRoutingOutcomeType
>;

/**
 * Outcome for redirect transactions flow/routing action.
 *
 * @remarks
 * Each option is a Gr4vy payment service object.
 */
export type FlowRedirectTransactionRoutingOutcome = {
    /**
     * The type of this resource. Is always `outcome`.
     */
    type?: FlowRedirectTransactionRoutingOutcomeType | undefined;
    /**
     * Payment service identifier.
     */
    id?: string | undefined;
    /**
     * The display name of the payment service.
     */
    label?: string | undefined;
    /**
     * The status of the payment service.
     */
    active?: boolean | undefined;
    /**
     * Payment service icon URL.
     */
    iconUrl?: string | null | undefined;
    /**
     * Accepted currency ISO codes for the payment service.
     */
    countries?: Array<string> | undefined;
    /**
     * Accepted country ISO codes for the payment service.
     */
    currencies?: Array<string> | undefined;
};

/** @internal */
export const FlowRedirectTransactionRoutingOutcomeType$inboundSchema: z.ZodNativeEnum<
    typeof FlowRedirectTransactionRoutingOutcomeType
> = z.nativeEnum(FlowRedirectTransactionRoutingOutcomeType);

/** @internal */
export const FlowRedirectTransactionRoutingOutcomeType$outboundSchema: z.ZodNativeEnum<
    typeof FlowRedirectTransactionRoutingOutcomeType
> = FlowRedirectTransactionRoutingOutcomeType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FlowRedirectTransactionRoutingOutcomeType$ {
    /** @deprecated use `FlowRedirectTransactionRoutingOutcomeType$inboundSchema` instead. */
    export const inboundSchema = FlowRedirectTransactionRoutingOutcomeType$inboundSchema;
    /** @deprecated use `FlowRedirectTransactionRoutingOutcomeType$outboundSchema` instead. */
    export const outboundSchema = FlowRedirectTransactionRoutingOutcomeType$outboundSchema;
}

/** @internal */
export const FlowRedirectTransactionRoutingOutcome$inboundSchema: z.ZodType<
    FlowRedirectTransactionRoutingOutcome,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        type: FlowRedirectTransactionRoutingOutcomeType$inboundSchema.optional(),
        id: z.string().optional(),
        label: z.string().optional(),
        active: z.boolean().optional(),
        icon_url: z.nullable(z.string()).optional(),
        countries: z.array(z.string()).optional(),
        currencies: z.array(z.string()).optional(),
    })
    .transform((v) => {
        return remap$(v, {
            icon_url: "iconUrl",
        });
    });

/** @internal */
export type FlowRedirectTransactionRoutingOutcome$Outbound = {
    type?: string | undefined;
    id?: string | undefined;
    label?: string | undefined;
    active?: boolean | undefined;
    icon_url?: string | null | undefined;
    countries?: Array<string> | undefined;
    currencies?: Array<string> | undefined;
};

/** @internal */
export const FlowRedirectTransactionRoutingOutcome$outboundSchema: z.ZodType<
    FlowRedirectTransactionRoutingOutcome$Outbound,
    z.ZodTypeDef,
    FlowRedirectTransactionRoutingOutcome
> = z
    .object({
        type: FlowRedirectTransactionRoutingOutcomeType$outboundSchema.optional(),
        id: z.string().optional(),
        label: z.string().optional(),
        active: z.boolean().optional(),
        iconUrl: z.nullable(z.string()).optional(),
        countries: z.array(z.string()).optional(),
        currencies: z.array(z.string()).optional(),
    })
    .transform((v) => {
        return remap$(v, {
            iconUrl: "icon_url",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FlowRedirectTransactionRoutingOutcome$ {
    /** @deprecated use `FlowRedirectTransactionRoutingOutcome$inboundSchema` instead. */
    export const inboundSchema = FlowRedirectTransactionRoutingOutcome$inboundSchema;
    /** @deprecated use `FlowRedirectTransactionRoutingOutcome$outboundSchema` instead. */
    export const outboundSchema = FlowRedirectTransactionRoutingOutcome$outboundSchema;
    /** @deprecated use `FlowRedirectTransactionRoutingOutcome$Outbound` instead. */
    export type Outbound = FlowRedirectTransactionRoutingOutcome$Outbound;
}

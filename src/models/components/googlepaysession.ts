/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives.js";
import * as z from "zod";

export type GooglePaySession = {
    /**
     * Your merchant ID.
     */
    gatewayMerchantId?: string | undefined;
    /**
     * The JWT for the current Google Pay session.
     */
    token?: string | undefined;
};

/** @internal */
export const GooglePaySession$inboundSchema: z.ZodType<GooglePaySession, z.ZodTypeDef, unknown> = z
    .object({
        gateway_merchant_id: z.string().optional(),
        token: z.string().optional(),
    })
    .transform((v) => {
        return remap$(v, {
            gateway_merchant_id: "gatewayMerchantId",
        });
    });

/** @internal */
export type GooglePaySession$Outbound = {
    gateway_merchant_id?: string | undefined;
    token?: string | undefined;
};

/** @internal */
export const GooglePaySession$outboundSchema: z.ZodType<
    GooglePaySession$Outbound,
    z.ZodTypeDef,
    GooglePaySession
> = z
    .object({
        gatewayMerchantId: z.string().optional(),
        token: z.string().optional(),
    })
    .transform((v) => {
        return remap$(v, {
            gatewayMerchantId: "gateway_merchant_id",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GooglePaySession$ {
    /** @deprecated use `GooglePaySession$inboundSchema` instead. */
    export const inboundSchema = GooglePaySession$inboundSchema;
    /** @deprecated use `GooglePaySession$outboundSchema` instead. */
    export const outboundSchema = GooglePaySession$outboundSchema;
    /** @deprecated use `GooglePaySession$Outbound` instead. */
    export type Outbound = GooglePaySession$Outbound;
}

/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives";
import * as z from "zod";

export type GooglePaySession = {
    /**
     * Your merchant ID.
     */
    gatewayMerchantId?: string | undefined;
    /**
     * The JWT for the current Google Pay session.
     */
    token?: string | undefined;
};

/** @internal */
export namespace GooglePaySession$ {
    export const inboundSchema: z.ZodType<GooglePaySession, z.ZodTypeDef, unknown> = z
        .object({
            gateway_merchant_id: z.string().optional(),
            token: z.string().optional(),
        })
        .transform((v) => {
            return remap$(v, {
                gateway_merchant_id: "gatewayMerchantId",
            });
        });

    export type Outbound = {
        gateway_merchant_id?: string | undefined;
        token?: string | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, GooglePaySession> = z
        .object({
            gatewayMerchantId: z.string().optional(),
            token: z.string().optional(),
        })
        .transform((v) => {
            return remap$(v, {
                gatewayMerchantId: "gateway_merchant_id",
            });
        });
}

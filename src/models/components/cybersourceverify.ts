/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives.js";
import { ClosedEnum } from "../../types/enums.js";
import {
    ApiRoutersAntiFraudServicesSchemasField,
    ApiRoutersAntiFraudServicesSchemasField$inboundSchema,
    ApiRoutersAntiFraudServicesSchemasField$Outbound,
    ApiRoutersAntiFraudServicesSchemasField$outboundSchema,
} from "./apiroutersantifraudservicesschemasfield.js";
import * as z from "zod";

export const CyberSourceVerifyAntiFraudServiceDefinitionId = {
    CybersourceAntiFraud: "cybersource-anti-fraud",
} as const;
export type CyberSourceVerifyAntiFraudServiceDefinitionId = ClosedEnum<
    typeof CyberSourceVerifyAntiFraudServiceDefinitionId
>;

/**
 * Base model with JSON encoders.
 */
export type CyberSourceVerify = {
    fields?: Array<ApiRoutersAntiFraudServicesSchemasField> | undefined;
    antiFraudServiceDefinitionId?: CyberSourceVerifyAntiFraudServiceDefinitionId | undefined;
    antiFraudServiceId?: string | undefined;
};

/** @internal */
export const CyberSourceVerifyAntiFraudServiceDefinitionId$inboundSchema: z.ZodNativeEnum<
    typeof CyberSourceVerifyAntiFraudServiceDefinitionId
> = z.nativeEnum(CyberSourceVerifyAntiFraudServiceDefinitionId);

/** @internal */
export const CyberSourceVerifyAntiFraudServiceDefinitionId$outboundSchema: z.ZodNativeEnum<
    typeof CyberSourceVerifyAntiFraudServiceDefinitionId
> = CyberSourceVerifyAntiFraudServiceDefinitionId$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CyberSourceVerifyAntiFraudServiceDefinitionId$ {
    /** @deprecated use `CyberSourceVerifyAntiFraudServiceDefinitionId$inboundSchema` instead. */
    export const inboundSchema = CyberSourceVerifyAntiFraudServiceDefinitionId$inboundSchema;
    /** @deprecated use `CyberSourceVerifyAntiFraudServiceDefinitionId$outboundSchema` instead. */
    export const outboundSchema = CyberSourceVerifyAntiFraudServiceDefinitionId$outboundSchema;
}

/** @internal */
export const CyberSourceVerify$inboundSchema: z.ZodType<CyberSourceVerify, z.ZodTypeDef, unknown> =
    z
        .object({
            fields: z.array(ApiRoutersAntiFraudServicesSchemasField$inboundSchema).optional(),
            anti_fraud_service_definition_id:
                CyberSourceVerifyAntiFraudServiceDefinitionId$inboundSchema.default(
                    "cybersource-anti-fraud"
                ),
            anti_fraud_service_id: z.string().optional(),
        })
        .transform((v) => {
            return remap$(v, {
                anti_fraud_service_definition_id: "antiFraudServiceDefinitionId",
                anti_fraud_service_id: "antiFraudServiceId",
            });
        });

/** @internal */
export type CyberSourceVerify$Outbound = {
    fields?: Array<ApiRoutersAntiFraudServicesSchemasField$Outbound> | undefined;
    anti_fraud_service_definition_id: string;
    anti_fraud_service_id?: string | undefined;
};

/** @internal */
export const CyberSourceVerify$outboundSchema: z.ZodType<
    CyberSourceVerify$Outbound,
    z.ZodTypeDef,
    CyberSourceVerify
> = z
    .object({
        fields: z.array(ApiRoutersAntiFraudServicesSchemasField$outboundSchema).optional(),
        antiFraudServiceDefinitionId:
            CyberSourceVerifyAntiFraudServiceDefinitionId$outboundSchema.default(
                "cybersource-anti-fraud"
            ),
        antiFraudServiceId: z.string().optional(),
    })
    .transform((v) => {
        return remap$(v, {
            antiFraudServiceDefinitionId: "anti_fraud_service_definition_id",
            antiFraudServiceId: "anti_fraud_service_id",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CyberSourceVerify$ {
    /** @deprecated use `CyberSourceVerify$inboundSchema` instead. */
    export const inboundSchema = CyberSourceVerify$inboundSchema;
    /** @deprecated use `CyberSourceVerify$outboundSchema` instead. */
    export const outboundSchema = CyberSourceVerify$outboundSchema;
    /** @deprecated use `CyberSourceVerify$Outbound` instead. */
    export type Outbound = CyberSourceVerify$Outbound;
}

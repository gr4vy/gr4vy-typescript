/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";

/**
 * Base model with JSON encoders.
 */
export type GiftCardTransactionCreate = {
    number: string;
    pin: string;
    amount: number;
};

/** @internal */
export const GiftCardTransactionCreate$inboundSchema: z.ZodType<
    GiftCardTransactionCreate,
    z.ZodTypeDef,
    unknown
> = z.object({
    number: z.string(),
    pin: z.string(),
    amount: z.number().int(),
});

/** @internal */
export type GiftCardTransactionCreate$Outbound = {
    number: string;
    pin: string;
    amount: number;
};

/** @internal */
export const GiftCardTransactionCreate$outboundSchema: z.ZodType<
    GiftCardTransactionCreate$Outbound,
    z.ZodTypeDef,
    GiftCardTransactionCreate
> = z.object({
    number: z.string(),
    pin: z.string(),
    amount: z.number().int(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GiftCardTransactionCreate$ {
    /** @deprecated use `GiftCardTransactionCreate$inboundSchema` instead. */
    export const inboundSchema = GiftCardTransactionCreate$inboundSchema;
    /** @deprecated use `GiftCardTransactionCreate$outboundSchema` instead. */
    export const outboundSchema = GiftCardTransactionCreate$outboundSchema;
    /** @deprecated use `GiftCardTransactionCreate$Outbound` instead. */
    export type Outbound = GiftCardTransactionCreate$Outbound;
}

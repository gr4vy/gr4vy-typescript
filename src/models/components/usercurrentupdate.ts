/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as z from "zod";

/**
 * A request to update the current user.
 */
export type UserCurrentUpdate = {
    /**
     * The full name of the user which is used in the Gr4vy admin panel to give a user a human readable name.
     */
    name?: string | undefined;
};

/** @internal */
export namespace UserCurrentUpdate$ {
    export type Inbound = {
        name?: string | undefined;
    };

    export const inboundSchema: z.ZodType<UserCurrentUpdate, z.ZodTypeDef, Inbound> = z
        .object({
            name: z.string().optional(),
        })
        .transform((v) => {
            return {
                ...(v.name === undefined ? null : { name: v.name }),
            };
        });

    export type Outbound = {
        name?: string | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, UserCurrentUpdate> = z
        .object({
            name: z.string().optional(),
        })
        .transform((v) => {
            return {
                ...(v.name === undefined ? null : { name: v.name }),
            };
        });
}

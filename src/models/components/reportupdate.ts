/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives.js";
import * as z from "zod";

/**
 * Base model with JSON encoders.
 */
export type ReportUpdate = {
    name?: string | undefined;
    description?: string | undefined;
    scheduleEnabled?: boolean | undefined;
};

/** @internal */
export const ReportUpdate$inboundSchema: z.ZodType<ReportUpdate, z.ZodTypeDef, unknown> = z
    .object({
        name: z.string().optional(),
        description: z.string().optional(),
        schedule_enabled: z.boolean().optional(),
    })
    .transform((v) => {
        return remap$(v, {
            schedule_enabled: "scheduleEnabled",
        });
    });

/** @internal */
export type ReportUpdate$Outbound = {
    name?: string | undefined;
    description?: string | undefined;
    schedule_enabled?: boolean | undefined;
};

/** @internal */
export const ReportUpdate$outboundSchema: z.ZodType<
    ReportUpdate$Outbound,
    z.ZodTypeDef,
    ReportUpdate
> = z
    .object({
        name: z.string().optional(),
        description: z.string().optional(),
        scheduleEnabled: z.boolean().optional(),
    })
    .transform((v) => {
        return remap$(v, {
            scheduleEnabled: "schedule_enabled",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ReportUpdate$ {
    /** @deprecated use `ReportUpdate$inboundSchema` instead. */
    export const inboundSchema = ReportUpdate$inboundSchema;
    /** @deprecated use `ReportUpdate$outboundSchema` instead. */
    export const outboundSchema = ReportUpdate$outboundSchema;
    /** @deprecated use `ReportUpdate$Outbound` instead. */
    export type Outbound = ReportUpdate$Outbound;
}

/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives.js";
import {
    BillingDetails,
    BillingDetails$inboundSchema,
    BillingDetails$Outbound,
    BillingDetails$outboundSchema,
} from "./billingdetails.js";
import * as z from "zod";

/**
 * Request body for creating a new buyer
 */
export type BuyerCreate = {
    displayName?: string | undefined;
    externalIdentifier?: string | undefined;
    /**
     * Base model with JSON encoders.
     */
    billingDetails?: BillingDetails | undefined;
};

/** @internal */
export const BuyerCreate$inboundSchema: z.ZodType<BuyerCreate, z.ZodTypeDef, unknown> = z
    .object({
        display_name: z.string().optional(),
        external_identifier: z.string().optional(),
        billing_details: BillingDetails$inboundSchema.optional(),
    })
    .transform((v) => {
        return remap$(v, {
            display_name: "displayName",
            external_identifier: "externalIdentifier",
            billing_details: "billingDetails",
        });
    });

/** @internal */
export type BuyerCreate$Outbound = {
    display_name?: string | undefined;
    external_identifier?: string | undefined;
    billing_details?: BillingDetails$Outbound | undefined;
};

/** @internal */
export const BuyerCreate$outboundSchema: z.ZodType<
    BuyerCreate$Outbound,
    z.ZodTypeDef,
    BuyerCreate
> = z
    .object({
        displayName: z.string().optional(),
        externalIdentifier: z.string().optional(),
        billingDetails: BillingDetails$outboundSchema.optional(),
    })
    .transform((v) => {
        return remap$(v, {
            displayName: "display_name",
            externalIdentifier: "external_identifier",
            billingDetails: "billing_details",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace BuyerCreate$ {
    /** @deprecated use `BuyerCreate$inboundSchema` instead. */
    export const inboundSchema = BuyerCreate$inboundSchema;
    /** @deprecated use `BuyerCreate$outboundSchema` instead. */
    export const outboundSchema = BuyerCreate$outboundSchema;
    /** @deprecated use `BuyerCreate$Outbound` instead. */
    export type Outbound = BuyerCreate$Outbound;
}

/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";

/**
 * Create a transaction with a stored gift card.
 */
export type TransactionGiftCardStoredRequest = {
    /**
     * The ID of the gift card to check a balance for.
     */
    id: string;
    /**
     * The monetary amount to charge for this gift card, in the smallest
     *
     * @remarks
     * currency unit for the given currency, for example `1299` cents to create
     * an authorization for `$12.99`.
     *
     * All gift card amounts are subtracted from the total transaction amount. The
     * remainder is charged to the provided `payment_method`.
     */
    amount: number;
};

/** @internal */
export const TransactionGiftCardStoredRequest$inboundSchema: z.ZodType<
    TransactionGiftCardStoredRequest,
    z.ZodTypeDef,
    unknown
> = z.object({
    id: z.string(),
    amount: z.number().int(),
});

/** @internal */
export type TransactionGiftCardStoredRequest$Outbound = {
    id: string;
    amount: number;
};

/** @internal */
export const TransactionGiftCardStoredRequest$outboundSchema: z.ZodType<
    TransactionGiftCardStoredRequest$Outbound,
    z.ZodTypeDef,
    TransactionGiftCardStoredRequest
> = z.object({
    id: z.string(),
    amount: z.number().int(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace TransactionGiftCardStoredRequest$ {
    /** @deprecated use `TransactionGiftCardStoredRequest$inboundSchema` instead. */
    export const inboundSchema = TransactionGiftCardStoredRequest$inboundSchema;
    /** @deprecated use `TransactionGiftCardStoredRequest$outboundSchema` instead. */
    export const outboundSchema = TransactionGiftCardStoredRequest$outboundSchema;
    /** @deprecated use `TransactionGiftCardStoredRequest$Outbound` instead. */
    export type Outbound = TransactionGiftCardStoredRequest$Outbound;
}

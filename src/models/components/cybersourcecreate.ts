/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives.js";
import { ClosedEnum } from "../../types/enums.js";
import {
    ApiRoutersAntiFraudServicesSchemasField,
    ApiRoutersAntiFraudServicesSchemasField$inboundSchema,
    ApiRoutersAntiFraudServicesSchemasField$Outbound,
    ApiRoutersAntiFraudServicesSchemasField$outboundSchema,
} from "./apiroutersantifraudservicesschemasfield.js";
import * as z from "zod";

export const CybersourceCreateAntiFraudServiceDefinitionId = {
    CybersourceAntiFraud: "cybersource-anti-fraud",
} as const;
export type CybersourceCreateAntiFraudServiceDefinitionId = ClosedEnum<
    typeof CybersourceCreateAntiFraudServiceDefinitionId
>;

/**
 * Base model with JSON encoders.
 */
export type CybersourceCreate = {
    fields: Array<ApiRoutersAntiFraudServicesSchemasField>;
    antiFraudServiceDefinitionId?: CybersourceCreateAntiFraudServiceDefinitionId | undefined;
    displayName: string;
    active?: boolean | undefined;
    reviewsEnabled?: boolean | undefined;
};

/** @internal */
export const CybersourceCreateAntiFraudServiceDefinitionId$inboundSchema: z.ZodNativeEnum<
    typeof CybersourceCreateAntiFraudServiceDefinitionId
> = z.nativeEnum(CybersourceCreateAntiFraudServiceDefinitionId);

/** @internal */
export const CybersourceCreateAntiFraudServiceDefinitionId$outboundSchema: z.ZodNativeEnum<
    typeof CybersourceCreateAntiFraudServiceDefinitionId
> = CybersourceCreateAntiFraudServiceDefinitionId$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CybersourceCreateAntiFraudServiceDefinitionId$ {
    /** @deprecated use `CybersourceCreateAntiFraudServiceDefinitionId$inboundSchema` instead. */
    export const inboundSchema = CybersourceCreateAntiFraudServiceDefinitionId$inboundSchema;
    /** @deprecated use `CybersourceCreateAntiFraudServiceDefinitionId$outboundSchema` instead. */
    export const outboundSchema = CybersourceCreateAntiFraudServiceDefinitionId$outboundSchema;
}

/** @internal */
export const CybersourceCreate$inboundSchema: z.ZodType<CybersourceCreate, z.ZodTypeDef, unknown> =
    z
        .object({
            fields: z.array(ApiRoutersAntiFraudServicesSchemasField$inboundSchema),
            anti_fraud_service_definition_id:
                CybersourceCreateAntiFraudServiceDefinitionId$inboundSchema.default(
                    "cybersource-anti-fraud"
                ),
            display_name: z.string(),
            active: z.boolean().default(true),
            reviews_enabled: z.boolean().default(false),
        })
        .transform((v) => {
            return remap$(v, {
                anti_fraud_service_definition_id: "antiFraudServiceDefinitionId",
                display_name: "displayName",
                reviews_enabled: "reviewsEnabled",
            });
        });

/** @internal */
export type CybersourceCreate$Outbound = {
    fields: Array<ApiRoutersAntiFraudServicesSchemasField$Outbound>;
    anti_fraud_service_definition_id: string;
    display_name: string;
    active: boolean;
    reviews_enabled: boolean;
};

/** @internal */
export const CybersourceCreate$outboundSchema: z.ZodType<
    CybersourceCreate$Outbound,
    z.ZodTypeDef,
    CybersourceCreate
> = z
    .object({
        fields: z.array(ApiRoutersAntiFraudServicesSchemasField$outboundSchema),
        antiFraudServiceDefinitionId:
            CybersourceCreateAntiFraudServiceDefinitionId$outboundSchema.default(
                "cybersource-anti-fraud"
            ),
        displayName: z.string(),
        active: z.boolean().default(true),
        reviewsEnabled: z.boolean().default(false),
    })
    .transform((v) => {
        return remap$(v, {
            antiFraudServiceDefinitionId: "anti_fraud_service_definition_id",
            displayName: "display_name",
            reviewsEnabled: "reviews_enabled",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CybersourceCreate$ {
    /** @deprecated use `CybersourceCreate$inboundSchema` instead. */
    export const inboundSchema = CybersourceCreate$inboundSchema;
    /** @deprecated use `CybersourceCreate$outboundSchema` instead. */
    export const outboundSchema = CybersourceCreate$outboundSchema;
    /** @deprecated use `CybersourceCreate$Outbound` instead. */
    export type Outbound = CybersourceCreate$Outbound;
}

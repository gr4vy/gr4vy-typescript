/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { ClosedEnum } from "../../types/enums.js";
import * as z from "zod";

/**
 * The type of match made for this rule.
 */
export const FlowBINRangeConditionName = {
    CardBin: "card_bin",
} as const;
/**
 * The type of match made for this rule.
 */
export type FlowBINRangeConditionName = ClosedEnum<typeof FlowBINRangeConditionName>;

/**
 * The comparison to make on the `card_bin` `value`.
 */
export const FlowBINRangeConditionOperator = {
    IsOneOf: "is_one_of",
    IsNotOneOf: "is_not_one_of",
} as const;
/**
 * The comparison to make on the `card_bin` `value`.
 */
export type FlowBINRangeConditionOperator = ClosedEnum<typeof FlowBINRangeConditionOperator>;

/**
 * BIN range conditions with a name, operator, and value.
 */
export type FlowBINRangeCondition = {
    /**
     * The type of match made for this rule.
     */
    name: FlowBINRangeConditionName;
    /**
     * The comparison to make on the `card_bin` `value`.
     */
    operator: FlowBINRangeConditionOperator;
    /**
     * BIN range to compare with the transaction. A card BIN is
     *
     * @remarks
     * 8 characters long at maximum.
     */
    value: Array<string>;
};

/** @internal */
export const FlowBINRangeConditionName$inboundSchema: z.ZodNativeEnum<
    typeof FlowBINRangeConditionName
> = z.nativeEnum(FlowBINRangeConditionName);

/** @internal */
export const FlowBINRangeConditionName$outboundSchema: z.ZodNativeEnum<
    typeof FlowBINRangeConditionName
> = FlowBINRangeConditionName$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FlowBINRangeConditionName$ {
    /** @deprecated use `FlowBINRangeConditionName$inboundSchema` instead. */
    export const inboundSchema = FlowBINRangeConditionName$inboundSchema;
    /** @deprecated use `FlowBINRangeConditionName$outboundSchema` instead. */
    export const outboundSchema = FlowBINRangeConditionName$outboundSchema;
}

/** @internal */
export const FlowBINRangeConditionOperator$inboundSchema: z.ZodNativeEnum<
    typeof FlowBINRangeConditionOperator
> = z.nativeEnum(FlowBINRangeConditionOperator);

/** @internal */
export const FlowBINRangeConditionOperator$outboundSchema: z.ZodNativeEnum<
    typeof FlowBINRangeConditionOperator
> = FlowBINRangeConditionOperator$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FlowBINRangeConditionOperator$ {
    /** @deprecated use `FlowBINRangeConditionOperator$inboundSchema` instead. */
    export const inboundSchema = FlowBINRangeConditionOperator$inboundSchema;
    /** @deprecated use `FlowBINRangeConditionOperator$outboundSchema` instead. */
    export const outboundSchema = FlowBINRangeConditionOperator$outboundSchema;
}

/** @internal */
export const FlowBINRangeCondition$inboundSchema: z.ZodType<
    FlowBINRangeCondition,
    z.ZodTypeDef,
    unknown
> = z.object({
    name: FlowBINRangeConditionName$inboundSchema,
    operator: FlowBINRangeConditionOperator$inboundSchema,
    value: z.array(z.string()),
});

/** @internal */
export type FlowBINRangeCondition$Outbound = {
    name: string;
    operator: string;
    value: Array<string>;
};

/** @internal */
export const FlowBINRangeCondition$outboundSchema: z.ZodType<
    FlowBINRangeCondition$Outbound,
    z.ZodTypeDef,
    FlowBINRangeCondition
> = z.object({
    name: FlowBINRangeConditionName$outboundSchema,
    operator: FlowBINRangeConditionOperator$outboundSchema,
    value: z.array(z.string()),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FlowBINRangeCondition$ {
    /** @deprecated use `FlowBINRangeCondition$inboundSchema` instead. */
    export const inboundSchema = FlowBINRangeCondition$inboundSchema;
    /** @deprecated use `FlowBINRangeCondition$outboundSchema` instead. */
    export const outboundSchema = FlowBINRangeCondition$outboundSchema;
    /** @deprecated use `FlowBINRangeCondition$Outbound` instead. */
    export type Outbound = FlowBINRangeCondition$Outbound;
}

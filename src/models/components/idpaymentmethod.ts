/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives.js";
import { ClosedEnum } from "../../types/enums.js";
import * as z from "zod";

export const IdPaymentMethodMethod = {
    Id: "id",
} as const;
export type IdPaymentMethodMethod = ClosedEnum<typeof IdPaymentMethodMethod>;

/**
 * Base model with JSON encoders.
 */
export type IdPaymentMethod = {
    method?: IdPaymentMethodMethod | undefined;
    id: string;
    securityCode?: string | undefined;
};

/** @internal */
export const IdPaymentMethodMethod$inboundSchema: z.ZodNativeEnum<typeof IdPaymentMethodMethod> =
    z.nativeEnum(IdPaymentMethodMethod);

/** @internal */
export const IdPaymentMethodMethod$outboundSchema: z.ZodNativeEnum<typeof IdPaymentMethodMethod> =
    IdPaymentMethodMethod$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace IdPaymentMethodMethod$ {
    /** @deprecated use `IdPaymentMethodMethod$inboundSchema` instead. */
    export const inboundSchema = IdPaymentMethodMethod$inboundSchema;
    /** @deprecated use `IdPaymentMethodMethod$outboundSchema` instead. */
    export const outboundSchema = IdPaymentMethodMethod$outboundSchema;
}

/** @internal */
export const IdPaymentMethod$inboundSchema: z.ZodType<IdPaymentMethod, z.ZodTypeDef, unknown> = z
    .object({
        method: IdPaymentMethodMethod$inboundSchema.default("id"),
        id: z.string(),
        security_code: z.string().optional(),
    })
    .transform((v) => {
        return remap$(v, {
            security_code: "securityCode",
        });
    });

/** @internal */
export type IdPaymentMethod$Outbound = {
    method: string;
    id: string;
    security_code?: string | undefined;
};

/** @internal */
export const IdPaymentMethod$outboundSchema: z.ZodType<
    IdPaymentMethod$Outbound,
    z.ZodTypeDef,
    IdPaymentMethod
> = z
    .object({
        method: IdPaymentMethodMethod$outboundSchema.default("id"),
        id: z.string(),
        securityCode: z.string().optional(),
    })
    .transform((v) => {
        return remap$(v, {
            securityCode: "security_code",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace IdPaymentMethod$ {
    /** @deprecated use `IdPaymentMethod$inboundSchema` instead. */
    export const inboundSchema = IdPaymentMethod$inboundSchema;
    /** @deprecated use `IdPaymentMethod$outboundSchema` instead. */
    export const outboundSchema = IdPaymentMethod$outboundSchema;
    /** @deprecated use `IdPaymentMethod$Outbound` instead. */
    export type Outbound = IdPaymentMethod$Outbound;
}

/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  CardSchemeDefinition,
  CardSchemeDefinition$inboundSchema,
  CardSchemeDefinition$Outbound,
  CardSchemeDefinition$outboundSchema,
} from "./cardschemedefinition.js";

export type CollectionNoCursorCardSchemeDefinition = {
  /**
   * A list of items returned for this request.
   */
  items: Array<CardSchemeDefinition>;
};

/** @internal */
export const CollectionNoCursorCardSchemeDefinition$inboundSchema: z.ZodType<
  CollectionNoCursorCardSchemeDefinition,
  z.ZodTypeDef,
  unknown
> = z.object({
  items: z.array(CardSchemeDefinition$inboundSchema),
});

/** @internal */
export type CollectionNoCursorCardSchemeDefinition$Outbound = {
  items: Array<CardSchemeDefinition$Outbound>;
};

/** @internal */
export const CollectionNoCursorCardSchemeDefinition$outboundSchema: z.ZodType<
  CollectionNoCursorCardSchemeDefinition$Outbound,
  z.ZodTypeDef,
  CollectionNoCursorCardSchemeDefinition
> = z.object({
  items: z.array(CardSchemeDefinition$outboundSchema),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CollectionNoCursorCardSchemeDefinition$ {
  /** @deprecated use `CollectionNoCursorCardSchemeDefinition$inboundSchema` instead. */
  export const inboundSchema =
    CollectionNoCursorCardSchemeDefinition$inboundSchema;
  /** @deprecated use `CollectionNoCursorCardSchemeDefinition$outboundSchema` instead. */
  export const outboundSchema =
    CollectionNoCursorCardSchemeDefinition$outboundSchema;
  /** @deprecated use `CollectionNoCursorCardSchemeDefinition$Outbound` instead. */
  export type Outbound = CollectionNoCursorCardSchemeDefinition$Outbound;
}

export function collectionNoCursorCardSchemeDefinitionToJSON(
  collectionNoCursorCardSchemeDefinition:
    CollectionNoCursorCardSchemeDefinition,
): string {
  return JSON.stringify(
    CollectionNoCursorCardSchemeDefinition$outboundSchema.parse(
      collectionNoCursorCardSchemeDefinition,
    ),
  );
}

export function collectionNoCursorCardSchemeDefinitionFromJSON(
  jsonString: string,
): SafeParseResult<CollectionNoCursorCardSchemeDefinition, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      CollectionNoCursorCardSchemeDefinition$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CollectionNoCursorCardSchemeDefinition' from JSON`,
  );
}

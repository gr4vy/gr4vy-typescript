/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import {
    ConnectionDefinition,
    ConnectionDefinition$inboundSchema,
    ConnectionDefinition$Outbound,
    ConnectionDefinition$outboundSchema,
} from "./connectiondefinition.js";
import * as z from "zod";

/**
 * A list of available connection definitions.
 */
export type ConnectionDefinitions = {
    items?: Array<ConnectionDefinition> | undefined;
};

/** @internal */
export const ConnectionDefinitions$inboundSchema: z.ZodType<
    ConnectionDefinitions,
    z.ZodTypeDef,
    unknown
> = z.object({
    items: z.array(ConnectionDefinition$inboundSchema).optional(),
});

/** @internal */
export type ConnectionDefinitions$Outbound = {
    items?: Array<ConnectionDefinition$Outbound> | undefined;
};

/** @internal */
export const ConnectionDefinitions$outboundSchema: z.ZodType<
    ConnectionDefinitions$Outbound,
    z.ZodTypeDef,
    ConnectionDefinitions
> = z.object({
    items: z.array(ConnectionDefinition$outboundSchema).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ConnectionDefinitions$ {
    /** @deprecated use `ConnectionDefinitions$inboundSchema` instead. */
    export const inboundSchema = ConnectionDefinitions$inboundSchema;
    /** @deprecated use `ConnectionDefinitions$outboundSchema` instead. */
    export const outboundSchema = ConnectionDefinitions$outboundSchema;
    /** @deprecated use `ConnectionDefinitions$Outbound` instead. */
    export type Outbound = ConnectionDefinitions$Outbound;
}

/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import {
    ConnectionDefinition,
    ConnectionDefinition$inboundSchema,
    ConnectionDefinition$Outbound,
    ConnectionDefinition$outboundSchema,
} from "./connectiondefinition.js";
import * as z from "zod";

/**
 * A configured connection.
 */
export type Connection = {
    /**
     * The ID of the connection.
     */
    id?: string | undefined;
    /**
     * `connection`.
     */
    type?: string | undefined;
    /**
     * The name of this connection.
     */
    name?: string | undefined;
    /**
     * Whether this connection is currently in use. Connections can
     *
     * @remarks
     * be deactivated to allow for them to be kept around and
     * re-activated at a later date.
     */
    active?: boolean | undefined;
    /**
     * A connection that can be configured.
     */
    definition?: ConnectionDefinition | undefined;
};

/** @internal */
export const Connection$inboundSchema: z.ZodType<Connection, z.ZodTypeDef, unknown> = z.object({
    id: z.string().optional(),
    type: z.string().default("connection"),
    name: z.string().optional(),
    active: z.boolean().optional(),
    definition: ConnectionDefinition$inboundSchema.optional(),
});

/** @internal */
export type Connection$Outbound = {
    id?: string | undefined;
    type: string;
    name?: string | undefined;
    active?: boolean | undefined;
    definition?: ConnectionDefinition$Outbound | undefined;
};

/** @internal */
export const Connection$outboundSchema: z.ZodType<Connection$Outbound, z.ZodTypeDef, Connection> =
    z.object({
        id: z.string().optional(),
        type: z.string().default("connection"),
        name: z.string().optional(),
        active: z.boolean().optional(),
        definition: ConnectionDefinition$outboundSchema.optional(),
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Connection$ {
    /** @deprecated use `Connection$inboundSchema` instead. */
    export const inboundSchema = Connection$inboundSchema;
    /** @deprecated use `Connection$outboundSchema` instead. */
    export const outboundSchema = Connection$outboundSchema;
    /** @deprecated use `Connection$Outbound` instead. */
    export type Outbound = Connection$Outbound;
}

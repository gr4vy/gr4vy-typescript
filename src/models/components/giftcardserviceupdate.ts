/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives.js";
import {
    ApiRoutersGiftCardServicesSchemasVoidableField,
    ApiRoutersGiftCardServicesSchemasVoidableField$inboundSchema,
    ApiRoutersGiftCardServicesSchemasVoidableField$Outbound,
    ApiRoutersGiftCardServicesSchemasVoidableField$outboundSchema,
} from "./apiroutersgiftcardservicesschemasvoidablefield.js";
import * as z from "zod";

/**
 * Base model with JSON encoders.
 */
export type GiftCardServiceUpdate = {
    displayName?: string | undefined;
    active?: boolean | undefined;
    fields?: Array<ApiRoutersGiftCardServicesSchemasVoidableField> | undefined;
};

/** @internal */
export const GiftCardServiceUpdate$inboundSchema: z.ZodType<
    GiftCardServiceUpdate,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        display_name: z.string().optional(),
        active: z.boolean().optional(),
        fields: z.array(ApiRoutersGiftCardServicesSchemasVoidableField$inboundSchema).optional(),
    })
    .transform((v) => {
        return remap$(v, {
            display_name: "displayName",
        });
    });

/** @internal */
export type GiftCardServiceUpdate$Outbound = {
    display_name?: string | undefined;
    active?: boolean | undefined;
    fields?: Array<ApiRoutersGiftCardServicesSchemasVoidableField$Outbound> | undefined;
};

/** @internal */
export const GiftCardServiceUpdate$outboundSchema: z.ZodType<
    GiftCardServiceUpdate$Outbound,
    z.ZodTypeDef,
    GiftCardServiceUpdate
> = z
    .object({
        displayName: z.string().optional(),
        active: z.boolean().optional(),
        fields: z.array(ApiRoutersGiftCardServicesSchemasVoidableField$outboundSchema).optional(),
    })
    .transform((v) => {
        return remap$(v, {
            displayName: "display_name",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GiftCardServiceUpdate$ {
    /** @deprecated use `GiftCardServiceUpdate$inboundSchema` instead. */
    export const inboundSchema = GiftCardServiceUpdate$inboundSchema;
    /** @deprecated use `GiftCardServiceUpdate$outboundSchema` instead. */
    export const outboundSchema = GiftCardServiceUpdate$outboundSchema;
    /** @deprecated use `GiftCardServiceUpdate$Outbound` instead. */
    export type Outbound = GiftCardServiceUpdate$Outbound;
}

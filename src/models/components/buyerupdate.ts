/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  BillingDetails,
  BillingDetails$inboundSchema,
  BillingDetails$Outbound,
  BillingDetails$outboundSchema,
} from "./billingdetails.js";

/**
 * Request body for creating a new buyer
 */
export type BuyerUpdate = {
  /**
   * The display name for the buyer.
   */
  displayName?: string | undefined;
  /**
   * The merchant identifier for this buyer.
   */
  externalIdentifier?: string | undefined;
  /**
   * Base model with JSON encoders.
   */
  billingDetails?: BillingDetails | undefined;
};

/** @internal */
export const BuyerUpdate$inboundSchema: z.ZodType<
  BuyerUpdate,
  z.ZodTypeDef,
  unknown
> = z.object({
  display_name: z.string().optional(),
  external_identifier: z.string().optional(),
  billing_details: BillingDetails$inboundSchema.optional(),
}).transform((v) => {
  return remap$(v, {
    "display_name": "displayName",
    "external_identifier": "externalIdentifier",
    "billing_details": "billingDetails",
  });
});

/** @internal */
export type BuyerUpdate$Outbound = {
  display_name?: string | undefined;
  external_identifier?: string | undefined;
  billing_details?: BillingDetails$Outbound | undefined;
};

/** @internal */
export const BuyerUpdate$outboundSchema: z.ZodType<
  BuyerUpdate$Outbound,
  z.ZodTypeDef,
  BuyerUpdate
> = z.object({
  displayName: z.string().optional(),
  externalIdentifier: z.string().optional(),
  billingDetails: BillingDetails$outboundSchema.optional(),
}).transform((v) => {
  return remap$(v, {
    displayName: "display_name",
    externalIdentifier: "external_identifier",
    billingDetails: "billing_details",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace BuyerUpdate$ {
  /** @deprecated use `BuyerUpdate$inboundSchema` instead. */
  export const inboundSchema = BuyerUpdate$inboundSchema;
  /** @deprecated use `BuyerUpdate$outboundSchema` instead. */
  export const outboundSchema = BuyerUpdate$outboundSchema;
  /** @deprecated use `BuyerUpdate$Outbound` instead. */
  export type Outbound = BuyerUpdate$Outbound;
}

export function buyerUpdateToJSON(buyerUpdate: BuyerUpdate): string {
  return JSON.stringify(BuyerUpdate$outboundSchema.parse(buyerUpdate));
}

export function buyerUpdateFromJSON(
  jsonString: string,
): SafeParseResult<BuyerUpdate, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => BuyerUpdate$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'BuyerUpdate' from JSON`,
  );
}

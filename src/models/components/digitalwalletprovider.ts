/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod/v3";
import {
  catchUnrecognizedEnum,
  OpenEnum,
  Unrecognized,
} from "../../types/enums.js";

export const DigitalWalletProvider = {
  Apple: "apple",
  Google: "google",
  ClickToPay: "click-to-pay",
} as const;
export type DigitalWalletProvider = OpenEnum<typeof DigitalWalletProvider>;

/** @internal */
export const DigitalWalletProvider$inboundSchema: z.ZodType<
  DigitalWalletProvider,
  z.ZodTypeDef,
  unknown
> = z
  .union([
    z.nativeEnum(DigitalWalletProvider),
    z.string().transform(catchUnrecognizedEnum),
  ]);

/** @internal */
export const DigitalWalletProvider$outboundSchema: z.ZodType<
  DigitalWalletProvider,
  z.ZodTypeDef,
  DigitalWalletProvider
> = z.union([
  z.nativeEnum(DigitalWalletProvider),
  z.string().and(z.custom<Unrecognized<string>>()),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DigitalWalletProvider$ {
  /** @deprecated use `DigitalWalletProvider$inboundSchema` instead. */
  export const inboundSchema = DigitalWalletProvider$inboundSchema;
  /** @deprecated use `DigitalWalletProvider$outboundSchema` instead. */
  export const outboundSchema = DigitalWalletProvider$outboundSchema;
}

/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { ClosedEnum } from "../../types/enums.js";
import * as z from "zod";

/**
 * The role to associate with the role assignment.
 */
export type RoleAssignmentRequestRole = {
    /**
     * The ID of the role to associate with the role assignment.
     */
    id: string;
};

/**
 * The type of the assignee to associate with the role assignment.
 */
export const RoleAssignmentRequestType = {
    User: "user",
} as const;
/**
 * The type of the assignee to associate with the role assignment.
 */
export type RoleAssignmentRequestType = ClosedEnum<typeof RoleAssignmentRequestType>;

/**
 * The assignee to associate with the role assignment.
 */
export type RoleAssignmentRequestAssignee = {
    /**
     * The type of the assignee to associate with the role assignment.
     */
    type: RoleAssignmentRequestType;
    /**
     * The ID of the assignee to associate with the role assignment.
     */
    id: string;
};

/**
 * A request to create a role assignment.
 */
export type RoleAssignmentRequest = {
    /**
     * The role to associate with the role assignment.
     */
    role: RoleAssignmentRequestRole;
    /**
     * The assignee to associate with the role assignment.
     */
    assignee: RoleAssignmentRequestAssignee;
};

/** @internal */
export const RoleAssignmentRequestRole$inboundSchema: z.ZodType<
    RoleAssignmentRequestRole,
    z.ZodTypeDef,
    unknown
> = z.object({
    id: z.string(),
});

/** @internal */
export type RoleAssignmentRequestRole$Outbound = {
    id: string;
};

/** @internal */
export const RoleAssignmentRequestRole$outboundSchema: z.ZodType<
    RoleAssignmentRequestRole$Outbound,
    z.ZodTypeDef,
    RoleAssignmentRequestRole
> = z.object({
    id: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RoleAssignmentRequestRole$ {
    /** @deprecated use `RoleAssignmentRequestRole$inboundSchema` instead. */
    export const inboundSchema = RoleAssignmentRequestRole$inboundSchema;
    /** @deprecated use `RoleAssignmentRequestRole$outboundSchema` instead. */
    export const outboundSchema = RoleAssignmentRequestRole$outboundSchema;
    /** @deprecated use `RoleAssignmentRequestRole$Outbound` instead. */
    export type Outbound = RoleAssignmentRequestRole$Outbound;
}

/** @internal */
export const RoleAssignmentRequestType$inboundSchema: z.ZodNativeEnum<
    typeof RoleAssignmentRequestType
> = z.nativeEnum(RoleAssignmentRequestType);

/** @internal */
export const RoleAssignmentRequestType$outboundSchema: z.ZodNativeEnum<
    typeof RoleAssignmentRequestType
> = RoleAssignmentRequestType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RoleAssignmentRequestType$ {
    /** @deprecated use `RoleAssignmentRequestType$inboundSchema` instead. */
    export const inboundSchema = RoleAssignmentRequestType$inboundSchema;
    /** @deprecated use `RoleAssignmentRequestType$outboundSchema` instead. */
    export const outboundSchema = RoleAssignmentRequestType$outboundSchema;
}

/** @internal */
export const RoleAssignmentRequestAssignee$inboundSchema: z.ZodType<
    RoleAssignmentRequestAssignee,
    z.ZodTypeDef,
    unknown
> = z.object({
    type: RoleAssignmentRequestType$inboundSchema,
    id: z.string(),
});

/** @internal */
export type RoleAssignmentRequestAssignee$Outbound = {
    type: string;
    id: string;
};

/** @internal */
export const RoleAssignmentRequestAssignee$outboundSchema: z.ZodType<
    RoleAssignmentRequestAssignee$Outbound,
    z.ZodTypeDef,
    RoleAssignmentRequestAssignee
> = z.object({
    type: RoleAssignmentRequestType$outboundSchema,
    id: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RoleAssignmentRequestAssignee$ {
    /** @deprecated use `RoleAssignmentRequestAssignee$inboundSchema` instead. */
    export const inboundSchema = RoleAssignmentRequestAssignee$inboundSchema;
    /** @deprecated use `RoleAssignmentRequestAssignee$outboundSchema` instead. */
    export const outboundSchema = RoleAssignmentRequestAssignee$outboundSchema;
    /** @deprecated use `RoleAssignmentRequestAssignee$Outbound` instead. */
    export type Outbound = RoleAssignmentRequestAssignee$Outbound;
}

/** @internal */
export const RoleAssignmentRequest$inboundSchema: z.ZodType<
    RoleAssignmentRequest,
    z.ZodTypeDef,
    unknown
> = z.object({
    role: z.lazy(() => RoleAssignmentRequestRole$inboundSchema),
    assignee: z.lazy(() => RoleAssignmentRequestAssignee$inboundSchema),
});

/** @internal */
export type RoleAssignmentRequest$Outbound = {
    role: RoleAssignmentRequestRole$Outbound;
    assignee: RoleAssignmentRequestAssignee$Outbound;
};

/** @internal */
export const RoleAssignmentRequest$outboundSchema: z.ZodType<
    RoleAssignmentRequest$Outbound,
    z.ZodTypeDef,
    RoleAssignmentRequest
> = z.object({
    role: z.lazy(() => RoleAssignmentRequestRole$outboundSchema),
    assignee: z.lazy(() => RoleAssignmentRequestAssignee$outboundSchema),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RoleAssignmentRequest$ {
    /** @deprecated use `RoleAssignmentRequest$inboundSchema` instead. */
    export const inboundSchema = RoleAssignmentRequest$inboundSchema;
    /** @deprecated use `RoleAssignmentRequest$outboundSchema` instead. */
    export const outboundSchema = RoleAssignmentRequest$outboundSchema;
    /** @deprecated use `RoleAssignmentRequest$Outbound` instead. */
    export type Outbound = RoleAssignmentRequest$Outbound;
}

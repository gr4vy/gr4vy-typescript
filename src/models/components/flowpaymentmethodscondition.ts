/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { ClosedEnum } from "../../types/enums.js";
import * as z from "zod";

/**
 * The type of match made for this rule.
 */
export const FlowPaymentMethodsConditionName = {
    PaymentMethod: "payment_method",
} as const;
/**
 * The type of match made for this rule.
 */
export type FlowPaymentMethodsConditionName = ClosedEnum<typeof FlowPaymentMethodsConditionName>;

/**
 * The comparison to make on the `value`.
 */
export const FlowPaymentMethodsConditionOperator = {
    IsOneOf: "is_one_of",
    IsNotOneOf: "is_not_one_of",
} as const;
/**
 * The comparison to make on the `value`.
 */
export type FlowPaymentMethodsConditionOperator = ClosedEnum<
    typeof FlowPaymentMethodsConditionOperator
>;

export const FlowPaymentMethodsConditionValue = {
    Afterpay: "afterpay",
    Alipay: "alipay",
    Alipayhk: "alipayhk",
    Applepay: "applepay",
    Bacs: "bacs",
    Bancontact: "bancontact",
    Banked: "banked",
    Becs: "becs",
    Bitpay: "bitpay",
    Boleto: "boleto",
    Boost: "boost",
    Card: "card",
    Cashapp: "cashapp",
    Chaseorbital: "chaseorbital",
    CheckoutSession: "checkout-session",
    Clearpay: "clearpay",
    ClickToPay: "click-to-pay",
    Dana: "dana",
    Dcb: "dcb",
    Dlocal: "dlocal",
    Ebanx: "ebanx",
    Eps: "eps",
    Everydaypay: "everydaypay",
    Gcash: "gcash",
    Giropay: "giropay",
    Givingblock: "givingblock",
    Gocardless: "gocardless",
    Googlepay: "googlepay",
    Gopay: "gopay",
    Grabpay: "grabpay",
    Ideal: "ideal",
    Kakaopay: "kakaopay",
    Klarna: "klarna",
    Laybuy: "laybuy",
    Linepay: "linepay",
    Linkaja: "linkaja",
    Maybankqrpay: "maybankqrpay",
    Multibanco: "multibanco",
    Multipago: "multipago",
    NetworkToken: "network-token",
    Oney3x: "oney_3x",
    Oney4x: "oney_4x",
    Oney6x: "oney_6x",
    Oney10x: "oney_10x",
    Oney12x: "oney_12x",
    Ovo: "ovo",
    Oxxo: "oxxo",
    Payid: "payid",
    Paymaya: "paymaya",
    Paypal: "paypal",
    Paypalpaylater: "paypalpaylater",
    Payto: "payto",
    Venmo: "venmo",
    Pix: "pix",
    Rabbitlinepay: "rabbitlinepay",
    Razorpay: "razorpay",
    Scalapay: "scalapay",
    Sepa: "sepa",
    Shopeepay: "shopeepay",
    Singteldash: "singteldash",
    Smartpay: "smartpay",
    Sofort: "sofort",
    Stripedd: "stripedd",
    Thaiqr: "thaiqr",
    Touchngo: "touchngo",
    Truemoney: "truemoney",
    Trustly: "trustly",
    Trustlyeurope: "trustlyeurope",
    Vipps: "vipps",
    Waave: "waave",
    Wechat: "wechat",
    Zippay: "zippay",
} as const;
export type FlowPaymentMethodsConditionValue = ClosedEnum<typeof FlowPaymentMethodsConditionValue>;

/**
 * Payment methods condition with a name, operator, and value. This
 *
 * @remarks
 * condition is only for use with the `decline-early` action.
 */
export type FlowPaymentMethodsCondition = {
    /**
     * The type of match made for this rule.
     */
    name: FlowPaymentMethodsConditionName;
    /**
     * The comparison to make on the `value`.
     */
    operator: FlowPaymentMethodsConditionOperator;
    /**
     * Payment method(s) to compare the transaction to.
     */
    value: Array<FlowPaymentMethodsConditionValue>;
};

/** @internal */
export const FlowPaymentMethodsConditionName$inboundSchema: z.ZodNativeEnum<
    typeof FlowPaymentMethodsConditionName
> = z.nativeEnum(FlowPaymentMethodsConditionName);

/** @internal */
export const FlowPaymentMethodsConditionName$outboundSchema: z.ZodNativeEnum<
    typeof FlowPaymentMethodsConditionName
> = FlowPaymentMethodsConditionName$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FlowPaymentMethodsConditionName$ {
    /** @deprecated use `FlowPaymentMethodsConditionName$inboundSchema` instead. */
    export const inboundSchema = FlowPaymentMethodsConditionName$inboundSchema;
    /** @deprecated use `FlowPaymentMethodsConditionName$outboundSchema` instead. */
    export const outboundSchema = FlowPaymentMethodsConditionName$outboundSchema;
}

/** @internal */
export const FlowPaymentMethodsConditionOperator$inboundSchema: z.ZodNativeEnum<
    typeof FlowPaymentMethodsConditionOperator
> = z.nativeEnum(FlowPaymentMethodsConditionOperator);

/** @internal */
export const FlowPaymentMethodsConditionOperator$outboundSchema: z.ZodNativeEnum<
    typeof FlowPaymentMethodsConditionOperator
> = FlowPaymentMethodsConditionOperator$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FlowPaymentMethodsConditionOperator$ {
    /** @deprecated use `FlowPaymentMethodsConditionOperator$inboundSchema` instead. */
    export const inboundSchema = FlowPaymentMethodsConditionOperator$inboundSchema;
    /** @deprecated use `FlowPaymentMethodsConditionOperator$outboundSchema` instead. */
    export const outboundSchema = FlowPaymentMethodsConditionOperator$outboundSchema;
}

/** @internal */
export const FlowPaymentMethodsConditionValue$inboundSchema: z.ZodNativeEnum<
    typeof FlowPaymentMethodsConditionValue
> = z.nativeEnum(FlowPaymentMethodsConditionValue);

/** @internal */
export const FlowPaymentMethodsConditionValue$outboundSchema: z.ZodNativeEnum<
    typeof FlowPaymentMethodsConditionValue
> = FlowPaymentMethodsConditionValue$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FlowPaymentMethodsConditionValue$ {
    /** @deprecated use `FlowPaymentMethodsConditionValue$inboundSchema` instead. */
    export const inboundSchema = FlowPaymentMethodsConditionValue$inboundSchema;
    /** @deprecated use `FlowPaymentMethodsConditionValue$outboundSchema` instead. */
    export const outboundSchema = FlowPaymentMethodsConditionValue$outboundSchema;
}

/** @internal */
export const FlowPaymentMethodsCondition$inboundSchema: z.ZodType<
    FlowPaymentMethodsCondition,
    z.ZodTypeDef,
    unknown
> = z.object({
    name: FlowPaymentMethodsConditionName$inboundSchema,
    operator: FlowPaymentMethodsConditionOperator$inboundSchema,
    value: z.array(FlowPaymentMethodsConditionValue$inboundSchema),
});

/** @internal */
export type FlowPaymentMethodsCondition$Outbound = {
    name: string;
    operator: string;
    value: Array<string>;
};

/** @internal */
export const FlowPaymentMethodsCondition$outboundSchema: z.ZodType<
    FlowPaymentMethodsCondition$Outbound,
    z.ZodTypeDef,
    FlowPaymentMethodsCondition
> = z.object({
    name: FlowPaymentMethodsConditionName$outboundSchema,
    operator: FlowPaymentMethodsConditionOperator$outboundSchema,
    value: z.array(FlowPaymentMethodsConditionValue$outboundSchema),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FlowPaymentMethodsCondition$ {
    /** @deprecated use `FlowPaymentMethodsCondition$inboundSchema` instead. */
    export const inboundSchema = FlowPaymentMethodsCondition$inboundSchema;
    /** @deprecated use `FlowPaymentMethodsCondition$outboundSchema` instead. */
    export const outboundSchema = FlowPaymentMethodsCondition$outboundSchema;
    /** @deprecated use `FlowPaymentMethodsCondition$Outbound` instead. */
    export type Outbound = FlowPaymentMethodsCondition$Outbound;
}

/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod/v3";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type AdyenOptions = {
  /**
   * Passes additional data to the Adyen API when creating a transaction.
   */
  additionalData?: { [k: string]: string } | null | undefined;
};

/** @internal */
export const AdyenOptions$inboundSchema: z.ZodType<
  AdyenOptions,
  z.ZodTypeDef,
  unknown
> = z.object({
  additionalData: z.nullable(z.record(z.string())).optional(),
});

/** @internal */
export type AdyenOptions$Outbound = {
  additionalData?: { [k: string]: string } | null | undefined;
};

/** @internal */
export const AdyenOptions$outboundSchema: z.ZodType<
  AdyenOptions$Outbound,
  z.ZodTypeDef,
  AdyenOptions
> = z.object({
  additionalData: z.nullable(z.record(z.string())).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AdyenOptions$ {
  /** @deprecated use `AdyenOptions$inboundSchema` instead. */
  export const inboundSchema = AdyenOptions$inboundSchema;
  /** @deprecated use `AdyenOptions$outboundSchema` instead. */
  export const outboundSchema = AdyenOptions$outboundSchema;
  /** @deprecated use `AdyenOptions$Outbound` instead. */
  export type Outbound = AdyenOptions$Outbound;
}

export function adyenOptionsToJSON(adyenOptions: AdyenOptions): string {
  return JSON.stringify(AdyenOptions$outboundSchema.parse(adyenOptions));
}

export function adyenOptionsFromJSON(
  jsonString: string,
): SafeParseResult<AdyenOptions, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => AdyenOptions$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'AdyenOptions' from JSON`,
  );
}

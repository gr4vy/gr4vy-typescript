/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives.js";
import { ClosedEnum } from "../../types/enums.js";
import * as z from "zod";

export const TokenPaymentMethodCreateMethod = {
    Id: "id",
} as const;
export type TokenPaymentMethodCreateMethod = ClosedEnum<typeof TokenPaymentMethodCreateMethod>;

/**
 * Payment Method ID
 *
 * @remarks
 *
 * Payment Method ID to use in a transaction.
 */
export type TokenPaymentMethodCreate = {
    id: string;
    method?: TokenPaymentMethodCreateMethod | undefined;
    securityCode?: string | undefined;
    redirectUrl?: string | undefined;
};

/** @internal */
export const TokenPaymentMethodCreateMethod$inboundSchema: z.ZodNativeEnum<
    typeof TokenPaymentMethodCreateMethod
> = z.nativeEnum(TokenPaymentMethodCreateMethod);

/** @internal */
export const TokenPaymentMethodCreateMethod$outboundSchema: z.ZodNativeEnum<
    typeof TokenPaymentMethodCreateMethod
> = TokenPaymentMethodCreateMethod$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace TokenPaymentMethodCreateMethod$ {
    /** @deprecated use `TokenPaymentMethodCreateMethod$inboundSchema` instead. */
    export const inboundSchema = TokenPaymentMethodCreateMethod$inboundSchema;
    /** @deprecated use `TokenPaymentMethodCreateMethod$outboundSchema` instead. */
    export const outboundSchema = TokenPaymentMethodCreateMethod$outboundSchema;
}

/** @internal */
export const TokenPaymentMethodCreate$inboundSchema: z.ZodType<
    TokenPaymentMethodCreate,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        id: z.string(),
        method: TokenPaymentMethodCreateMethod$inboundSchema.default("id"),
        security_code: z.string().optional(),
        redirect_url: z.string().optional(),
    })
    .transform((v) => {
        return remap$(v, {
            security_code: "securityCode",
            redirect_url: "redirectUrl",
        });
    });

/** @internal */
export type TokenPaymentMethodCreate$Outbound = {
    id: string;
    method: string;
    security_code?: string | undefined;
    redirect_url?: string | undefined;
};

/** @internal */
export const TokenPaymentMethodCreate$outboundSchema: z.ZodType<
    TokenPaymentMethodCreate$Outbound,
    z.ZodTypeDef,
    TokenPaymentMethodCreate
> = z
    .object({
        id: z.string(),
        method: TokenPaymentMethodCreateMethod$outboundSchema.default("id"),
        securityCode: z.string().optional(),
        redirectUrl: z.string().optional(),
    })
    .transform((v) => {
        return remap$(v, {
            securityCode: "security_code",
            redirectUrl: "redirect_url",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace TokenPaymentMethodCreate$ {
    /** @deprecated use `TokenPaymentMethodCreate$inboundSchema` instead. */
    export const inboundSchema = TokenPaymentMethodCreate$inboundSchema;
    /** @deprecated use `TokenPaymentMethodCreate$outboundSchema` instead. */
    export const outboundSchema = TokenPaymentMethodCreate$outboundSchema;
    /** @deprecated use `TokenPaymentMethodCreate$Outbound` instead. */
    export type Outbound = TokenPaymentMethodCreate$Outbound;
}

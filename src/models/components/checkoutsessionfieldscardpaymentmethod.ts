/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as z from "zod";

/**
 * `card`.
 */
export enum CheckoutSessionFieldsCardPaymentMethodMethod {
    Card = "card",
}

/**
 * Details to store a new card payment method.
 */
export type CheckoutSessionFieldsCardPaymentMethod = {
    /**
     * `card`.
     */
    method: CheckoutSessionFieldsCardPaymentMethodMethod;
    /**
     * The 13-19 digit number for this card as it can be found on the
     *
     * @remarks
     * front of the card.
     */
    number?: string | undefined;
    /**
     * The expiration date of the card, formatted `MM/YY`.
     */
    expirationDate?: string | undefined;
    /**
     * The 3 or 4 digit security code often found on the card. This often
     *
     * @remarks
     * referred to as the CVV or CVD.
     *
     * The security code can only be set if the stored payment method
     * represents a card.
     */
    securityCode?: string | undefined;
};

/** @internal */
export const CheckoutSessionFieldsCardPaymentMethodMethod$: z.ZodNativeEnum<
    typeof CheckoutSessionFieldsCardPaymentMethodMethod
> = z.nativeEnum(CheckoutSessionFieldsCardPaymentMethodMethod);

/** @internal */
export namespace CheckoutSessionFieldsCardPaymentMethod$ {
    export type Inbound = {
        method: CheckoutSessionFieldsCardPaymentMethodMethod;
        number?: string | undefined;
        expiration_date?: string | undefined;
        security_code?: string | undefined;
    };

    export const inboundSchema: z.ZodType<
        CheckoutSessionFieldsCardPaymentMethod,
        z.ZodTypeDef,
        Inbound
    > = z
        .object({
            method: CheckoutSessionFieldsCardPaymentMethodMethod$,
            number: z.string().optional(),
            expiration_date: z.string().optional(),
            security_code: z.string().optional(),
        })
        .transform((v) => {
            return {
                method: v.method,
                ...(v.number === undefined ? null : { number: v.number }),
                ...(v.expiration_date === undefined ? null : { expirationDate: v.expiration_date }),
                ...(v.security_code === undefined ? null : { securityCode: v.security_code }),
            };
        });

    export type Outbound = {
        method: CheckoutSessionFieldsCardPaymentMethodMethod;
        number?: string | undefined;
        expiration_date?: string | undefined;
        security_code?: string | undefined;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        CheckoutSessionFieldsCardPaymentMethod
    > = z
        .object({
            method: CheckoutSessionFieldsCardPaymentMethodMethod$,
            number: z.string().optional(),
            expirationDate: z.string().optional(),
            securityCode: z.string().optional(),
        })
        .transform((v) => {
            return {
                method: v.method,
                ...(v.number === undefined ? null : { number: v.number }),
                ...(v.expirationDate === undefined ? null : { expiration_date: v.expirationDate }),
                ...(v.securityCode === undefined ? null : { security_code: v.securityCode }),
            };
        });
}

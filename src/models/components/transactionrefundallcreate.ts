/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";

/**
 * Base model with JSON encoders.
 */
export type TransactionRefundAllCreate = {
    reason?: string | undefined;
};

/** @internal */
export const TransactionRefundAllCreate$inboundSchema: z.ZodType<
    TransactionRefundAllCreate,
    z.ZodTypeDef,
    unknown
> = z.object({
    reason: z.string().optional(),
});

/** @internal */
export type TransactionRefundAllCreate$Outbound = {
    reason?: string | undefined;
};

/** @internal */
export const TransactionRefundAllCreate$outboundSchema: z.ZodType<
    TransactionRefundAllCreate$Outbound,
    z.ZodTypeDef,
    TransactionRefundAllCreate
> = z.object({
    reason: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace TransactionRefundAllCreate$ {
    /** @deprecated use `TransactionRefundAllCreate$inboundSchema` instead. */
    export const inboundSchema = TransactionRefundAllCreate$inboundSchema;
    /** @deprecated use `TransactionRefundAllCreate$outboundSchema` instead. */
    export const outboundSchema = TransactionRefundAllCreate$outboundSchema;
    /** @deprecated use `TransactionRefundAllCreate$Outbound` instead. */
    export type Outbound = TransactionRefundAllCreate$Outbound;
}

/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives.js";
import { ClosedEnum } from "../../types/enums.js";
import {
    AccountUpdaterInquirySummary,
    AccountUpdaterInquirySummary$inboundSchema,
    AccountUpdaterInquirySummary$Outbound,
    AccountUpdaterInquirySummary$outboundSchema,
} from "./accountupdaterinquirysummary.js";
import * as z from "zod";

/**
 * The type of this resource. Is always `account-updater-job`.
 */
export const Type = {
    AccountUpdaterJob: "account-updater-job",
} as const;
/**
 * The type of this resource. Is always `account-updater-job`.
 */
export type Type = ClosedEnum<typeof Type>;

/**
 * An Account Updater job.
 */
export type AccountUpdaterJob = {
    /**
     * The type of this resource. Is always `account-updater-job`.
     */
    type?: Type | undefined;
    /**
     * The unique identifier for this Account Updater job.
     */
    id?: string | undefined;
    /**
     * The unique ID for a merchant account.
     */
    merchantAccountId?: string | undefined;
    /**
     * The date and time when this Account Updater job was created.
     */
    createdAt?: Date | undefined;
    /**
     * The date and time when this Account Updater job was last updated.
     */
    updatedAt?: Date | undefined;
    /**
     * A list of inquiries associated with this Account Updater job.
     */
    inquiries?: Array<AccountUpdaterInquirySummary> | undefined;
};

/** @internal */
export const Type$inboundSchema: z.ZodNativeEnum<typeof Type> = z.nativeEnum(Type);

/** @internal */
export const Type$outboundSchema: z.ZodNativeEnum<typeof Type> = Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Type$ {
    /** @deprecated use `Type$inboundSchema` instead. */
    export const inboundSchema = Type$inboundSchema;
    /** @deprecated use `Type$outboundSchema` instead. */
    export const outboundSchema = Type$outboundSchema;
}

/** @internal */
export const AccountUpdaterJob$inboundSchema: z.ZodType<AccountUpdaterJob, z.ZodTypeDef, unknown> =
    z
        .object({
            type: Type$inboundSchema.optional(),
            id: z.string().optional(),
            merchant_account_id: z.string().optional(),
            created_at: z
                .string()
                .datetime({ offset: true })
                .transform((v) => new Date(v))
                .optional(),
            updated_at: z
                .string()
                .datetime({ offset: true })
                .transform((v) => new Date(v))
                .optional(),
            inquiries: z.array(AccountUpdaterInquirySummary$inboundSchema).optional(),
        })
        .transform((v) => {
            return remap$(v, {
                merchant_account_id: "merchantAccountId",
                created_at: "createdAt",
                updated_at: "updatedAt",
            });
        });

/** @internal */
export type AccountUpdaterJob$Outbound = {
    type?: string | undefined;
    id?: string | undefined;
    merchant_account_id?: string | undefined;
    created_at?: string | undefined;
    updated_at?: string | undefined;
    inquiries?: Array<AccountUpdaterInquirySummary$Outbound> | undefined;
};

/** @internal */
export const AccountUpdaterJob$outboundSchema: z.ZodType<
    AccountUpdaterJob$Outbound,
    z.ZodTypeDef,
    AccountUpdaterJob
> = z
    .object({
        type: Type$outboundSchema.optional(),
        id: z.string().optional(),
        merchantAccountId: z.string().optional(),
        createdAt: z
            .date()
            .transform((v) => v.toISOString())
            .optional(),
        updatedAt: z
            .date()
            .transform((v) => v.toISOString())
            .optional(),
        inquiries: z.array(AccountUpdaterInquirySummary$outboundSchema).optional(),
    })
    .transform((v) => {
        return remap$(v, {
            merchantAccountId: "merchant_account_id",
            createdAt: "created_at",
            updatedAt: "updated_at",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AccountUpdaterJob$ {
    /** @deprecated use `AccountUpdaterJob$inboundSchema` instead. */
    export const inboundSchema = AccountUpdaterJob$inboundSchema;
    /** @deprecated use `AccountUpdaterJob$outboundSchema` instead. */
    export const outboundSchema = AccountUpdaterJob$outboundSchema;
    /** @deprecated use `AccountUpdaterJob$Outbound` instead. */
    export type Outbound = AccountUpdaterJob$Outbound;
}

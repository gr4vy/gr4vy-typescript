/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives";
import {
    AccountUpdaterInquirySummary,
    AccountUpdaterInquirySummary$,
} from "./accountupdaterinquirysummary";
import * as z from "zod";

/**
 * The type of this resource. Is always `account-updater-job`.
 */
export enum Type {
    AccountUpdaterJob = "account-updater-job",
}

/**
 * An Account Updater job.
 */
export type AccountUpdaterJob = {
    /**
     * The type of this resource. Is always `account-updater-job`.
     */
    type?: Type | undefined;
    /**
     * The unique identifier for this Account Updater job.
     */
    id?: string | undefined;
    /**
     * The unique ID for a merchant account.
     */
    merchantAccountId?: string | undefined;
    /**
     * The date and time when this Account Updater job was created.
     */
    createdAt?: Date | undefined;
    /**
     * The date and time when this Account Updater job was last updated.
     */
    updatedAt?: Date | undefined;
    /**
     * A list of inquiries associated with this Account Updater job.
     */
    inquiries?: Array<AccountUpdaterInquirySummary> | undefined;
};

/** @internal */
export namespace Type$ {
    export const inboundSchema = z.nativeEnum(Type);
    export const outboundSchema = inboundSchema;
}

/** @internal */
export namespace AccountUpdaterJob$ {
    export const inboundSchema: z.ZodType<AccountUpdaterJob, z.ZodTypeDef, unknown> = z
        .object({
            type: Type$.inboundSchema.optional(),
            id: z.string().optional(),
            merchant_account_id: z.string().optional(),
            created_at: z
                .string()
                .datetime({ offset: true })
                .transform((v) => new Date(v))
                .optional(),
            updated_at: z
                .string()
                .datetime({ offset: true })
                .transform((v) => new Date(v))
                .optional(),
            inquiries: z.array(AccountUpdaterInquirySummary$.inboundSchema).optional(),
        })
        .transform((v) => {
            return remap$(v, {
                merchant_account_id: "merchantAccountId",
                created_at: "createdAt",
                updated_at: "updatedAt",
            });
        });

    export type Outbound = {
        type?: string | undefined;
        id?: string | undefined;
        merchant_account_id?: string | undefined;
        created_at?: string | undefined;
        updated_at?: string | undefined;
        inquiries?: Array<AccountUpdaterInquirySummary$.Outbound> | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, AccountUpdaterJob> = z
        .object({
            type: Type$.outboundSchema.optional(),
            id: z.string().optional(),
            merchantAccountId: z.string().optional(),
            createdAt: z
                .date()
                .transform((v) => v.toISOString())
                .optional(),
            updatedAt: z
                .date()
                .transform((v) => v.toISOString())
                .optional(),
            inquiries: z.array(AccountUpdaterInquirySummary$.outboundSchema).optional(),
        })
        .transform((v) => {
            return remap$(v, {
                merchantAccountId: "merchant_account_id",
                createdAt: "created_at",
                updatedAt: "updated_at",
            });
        });
}

/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";

/**
 * The permissions associated with a role.
 */
export type RolePermissions = {
    /**
     * The list of permissions to allow for a role.
     */
    allow?: Array<string> | undefined;
};

/** @internal */
export const RolePermissions$inboundSchema: z.ZodType<RolePermissions, z.ZodTypeDef, unknown> =
    z.object({
        allow: z.array(z.string()).optional(),
    });

/** @internal */
export type RolePermissions$Outbound = {
    allow?: Array<string> | undefined;
};

/** @internal */
export const RolePermissions$outboundSchema: z.ZodType<
    RolePermissions$Outbound,
    z.ZodTypeDef,
    RolePermissions
> = z.object({
    allow: z.array(z.string()).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RolePermissions$ {
    /** @deprecated use `RolePermissions$inboundSchema` instead. */
    export const inboundSchema = RolePermissions$inboundSchema;
    /** @deprecated use `RolePermissions$outboundSchema` instead. */
    export const outboundSchema = RolePermissions$outboundSchema;
    /** @deprecated use `RolePermissions$Outbound` instead. */
    export type Outbound = RolePermissions$Outbound;
}

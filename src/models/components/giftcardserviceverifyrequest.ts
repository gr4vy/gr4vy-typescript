/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives";
import * as z from "zod";

/**
 * A key-value pair that represents a field defined in the definition for this service.
 */
export type GiftCardServiceVerifyRequestFields = {
    /**
     * The key of the field to set a value for.
     */
    key: string;
    /**
     * The value of a field to set.
     */
    value: string;
};

/**
 * Request body for verifying credentials against a gift card service.
 */
export type GiftCardServiceVerifyRequest = {
    /**
     * The ID of the gift card service to use.
     */
    giftCardServiceDefinitionId: string;
    /**
     * The ID of the gift card service. Required if sending a partial set of
     *
     * @remarks
     * credentials in the `fields` property. This will merge the provided
     * fields with those already on the service.
     */
    giftCardServiceId?: string | undefined;
    /**
     * A list of fields where each field is a key-value pair that represents a defined field in the definition of the service. You are not required to send the full list of fields if the credentials for the service are already stored.
     *
     * @remarks
     * For example, if your credentials for `qwikcilver-gift-card` are stored and you only provide a `secret_key` in the request, it will override the stored `secret_key` and verify the resulting set of credentials against the service.
     */
    fields: Array<GiftCardServiceVerifyRequestFields>;
};

/** @internal */
export namespace GiftCardServiceVerifyRequestFields$ {
    export const inboundSchema: z.ZodType<
        GiftCardServiceVerifyRequestFields,
        z.ZodTypeDef,
        unknown
    > = z.object({
        key: z.string(),
        value: z.string(),
    });

    export type Outbound = {
        key: string;
        value: string;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        GiftCardServiceVerifyRequestFields
    > = z.object({
        key: z.string(),
        value: z.string(),
    });
}

/** @internal */
export namespace GiftCardServiceVerifyRequest$ {
    export const inboundSchema: z.ZodType<GiftCardServiceVerifyRequest, z.ZodTypeDef, unknown> = z
        .object({
            gift_card_service_definition_id: z.string(),
            gift_card_service_id: z.string().optional(),
            fields: z.array(z.lazy(() => GiftCardServiceVerifyRequestFields$.inboundSchema)),
        })
        .transform((v) => {
            return remap$(v, {
                gift_card_service_definition_id: "giftCardServiceDefinitionId",
                gift_card_service_id: "giftCardServiceId",
            });
        });

    export type Outbound = {
        gift_card_service_definition_id: string;
        gift_card_service_id?: string | undefined;
        fields: Array<GiftCardServiceVerifyRequestFields$.Outbound>;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, GiftCardServiceVerifyRequest> = z
        .object({
            giftCardServiceDefinitionId: z.string(),
            giftCardServiceId: z.string().optional(),
            fields: z.array(z.lazy(() => GiftCardServiceVerifyRequestFields$.outboundSchema)),
        })
        .transform((v) => {
            return remap$(v, {
                giftCardServiceDefinitionId: "gift_card_service_definition_id",
                giftCardServiceId: "gift_card_service_id",
            });
        });
}

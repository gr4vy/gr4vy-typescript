/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";

/**
 * A request to fully refund a transaction.
 */
export type TransactionRefundAllRequest = {
    /**
     * The reason to refund for. This can be used to attach a written reason to the
     *
     * @remarks
     * refund request.
     */
    reason?: string | null | undefined;
};

/** @internal */
export const TransactionRefundAllRequest$inboundSchema: z.ZodType<
    TransactionRefundAllRequest,
    z.ZodTypeDef,
    unknown
> = z.object({
    reason: z.nullable(z.string()).optional(),
});

/** @internal */
export type TransactionRefundAllRequest$Outbound = {
    reason?: string | null | undefined;
};

/** @internal */
export const TransactionRefundAllRequest$outboundSchema: z.ZodType<
    TransactionRefundAllRequest$Outbound,
    z.ZodTypeDef,
    TransactionRefundAllRequest
> = z.object({
    reason: z.nullable(z.string()).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace TransactionRefundAllRequest$ {
    /** @deprecated use `TransactionRefundAllRequest$inboundSchema` instead. */
    export const inboundSchema = TransactionRefundAllRequest$inboundSchema;
    /** @deprecated use `TransactionRefundAllRequest$outboundSchema` instead. */
    export const outboundSchema = TransactionRefundAllRequest$outboundSchema;
    /** @deprecated use `TransactionRefundAllRequest$Outbound` instead. */
    export type Outbound = TransactionRefundAllRequest$Outbound;
}

/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives.js";
import { ClosedEnum } from "../../types/enums.js";
import * as z from "zod";

/**
 * The type of this resource. Is always `transaction-event`.
 */
export const GiftCardRefundSucceededType = {
    TransactionEvent: "transaction-event",
} as const;
/**
 * The type of this resource. Is always `transaction-event`.
 */
export type GiftCardRefundSucceededType = ClosedEnum<typeof GiftCardRefundSucceededType>;

/**
 * The name of this resource. Is always `gift-card-refund-succeeded`.
 */
export const GiftCardRefundSucceededName = {
    GiftCardRefundSucceeded: "gift-card-refund-succeeded",
} as const;
/**
 * The name of this resource. Is always `gift-card-refund-succeeded`.
 */
export type GiftCardRefundSucceededName = ClosedEnum<typeof GiftCardRefundSucceededName>;

/**
 * Additional context for this event.
 */
export type GiftCardRefundSucceededContext = {
    /**
     * The unique ID of the Gift Card service used.
     */
    giftCardServiceId?: string | undefined;
    /**
     * The name of the Gift Card service used.
     */
    giftCardServiceName?: string | undefined;
    /**
     * The Gift Card service definition used.
     */
    giftCardServiceDefinitionId?: string | undefined;
    /**
     * The endpoint for the request.
     */
    url?: string | null | undefined;
    /**
     * The HTTP body sent to the Gift Card provider.
     */
    request?: string | undefined;
    /**
     * The HTTP body received from the Gift Card provider.
     */
    response?: string | undefined;
    /**
     * The HTTP response status code from the Gift Card provider.
     */
    responseStatusCode?: number | undefined;
};

/**
 * This event logs the request and response details of HTTP calls made to refund gift cards, in case the call succeeded.
 */
export type GiftCardRefundSucceeded = {
    /**
     * The type of this resource. Is always `transaction-event`.
     */
    type?: GiftCardRefundSucceededType | undefined;
    /**
     * The unique identifier for this event.
     */
    id?: string | undefined;
    /**
     * The name of this resource. Is always `gift-card-refund-succeeded`.
     */
    name?: GiftCardRefundSucceededName | undefined;
    /**
     * The date and time when this event was created in our system.
     */
    createdAt?: Date | undefined;
    /**
     * Additional context for this event.
     */
    context?: GiftCardRefundSucceededContext | undefined;
};

/** @internal */
export const GiftCardRefundSucceededType$inboundSchema: z.ZodNativeEnum<
    typeof GiftCardRefundSucceededType
> = z.nativeEnum(GiftCardRefundSucceededType);

/** @internal */
export const GiftCardRefundSucceededType$outboundSchema: z.ZodNativeEnum<
    typeof GiftCardRefundSucceededType
> = GiftCardRefundSucceededType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GiftCardRefundSucceededType$ {
    /** @deprecated use `GiftCardRefundSucceededType$inboundSchema` instead. */
    export const inboundSchema = GiftCardRefundSucceededType$inboundSchema;
    /** @deprecated use `GiftCardRefundSucceededType$outboundSchema` instead. */
    export const outboundSchema = GiftCardRefundSucceededType$outboundSchema;
}

/** @internal */
export const GiftCardRefundSucceededName$inboundSchema: z.ZodNativeEnum<
    typeof GiftCardRefundSucceededName
> = z.nativeEnum(GiftCardRefundSucceededName);

/** @internal */
export const GiftCardRefundSucceededName$outboundSchema: z.ZodNativeEnum<
    typeof GiftCardRefundSucceededName
> = GiftCardRefundSucceededName$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GiftCardRefundSucceededName$ {
    /** @deprecated use `GiftCardRefundSucceededName$inboundSchema` instead. */
    export const inboundSchema = GiftCardRefundSucceededName$inboundSchema;
    /** @deprecated use `GiftCardRefundSucceededName$outboundSchema` instead. */
    export const outboundSchema = GiftCardRefundSucceededName$outboundSchema;
}

/** @internal */
export const GiftCardRefundSucceededContext$inboundSchema: z.ZodType<
    GiftCardRefundSucceededContext,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        gift_card_service_id: z.string().optional(),
        gift_card_service_name: z.string().optional(),
        gift_card_service_definition_id: z.string().optional(),
        url: z.nullable(z.string()).optional(),
        request: z.string().optional(),
        response: z.string().optional(),
        response_status_code: z.number().optional(),
    })
    .transform((v) => {
        return remap$(v, {
            gift_card_service_id: "giftCardServiceId",
            gift_card_service_name: "giftCardServiceName",
            gift_card_service_definition_id: "giftCardServiceDefinitionId",
            response_status_code: "responseStatusCode",
        });
    });

/** @internal */
export type GiftCardRefundSucceededContext$Outbound = {
    gift_card_service_id?: string | undefined;
    gift_card_service_name?: string | undefined;
    gift_card_service_definition_id?: string | undefined;
    url?: string | null | undefined;
    request?: string | undefined;
    response?: string | undefined;
    response_status_code?: number | undefined;
};

/** @internal */
export const GiftCardRefundSucceededContext$outboundSchema: z.ZodType<
    GiftCardRefundSucceededContext$Outbound,
    z.ZodTypeDef,
    GiftCardRefundSucceededContext
> = z
    .object({
        giftCardServiceId: z.string().optional(),
        giftCardServiceName: z.string().optional(),
        giftCardServiceDefinitionId: z.string().optional(),
        url: z.nullable(z.string()).optional(),
        request: z.string().optional(),
        response: z.string().optional(),
        responseStatusCode: z.number().optional(),
    })
    .transform((v) => {
        return remap$(v, {
            giftCardServiceId: "gift_card_service_id",
            giftCardServiceName: "gift_card_service_name",
            giftCardServiceDefinitionId: "gift_card_service_definition_id",
            responseStatusCode: "response_status_code",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GiftCardRefundSucceededContext$ {
    /** @deprecated use `GiftCardRefundSucceededContext$inboundSchema` instead. */
    export const inboundSchema = GiftCardRefundSucceededContext$inboundSchema;
    /** @deprecated use `GiftCardRefundSucceededContext$outboundSchema` instead. */
    export const outboundSchema = GiftCardRefundSucceededContext$outboundSchema;
    /** @deprecated use `GiftCardRefundSucceededContext$Outbound` instead. */
    export type Outbound = GiftCardRefundSucceededContext$Outbound;
}

/** @internal */
export const GiftCardRefundSucceeded$inboundSchema: z.ZodType<
    GiftCardRefundSucceeded,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        type: GiftCardRefundSucceededType$inboundSchema.optional(),
        id: z.string().optional(),
        name: GiftCardRefundSucceededName$inboundSchema.optional(),
        created_at: z
            .string()
            .datetime({ offset: true })
            .transform((v) => new Date(v))
            .optional(),
        context: z.lazy(() => GiftCardRefundSucceededContext$inboundSchema).optional(),
    })
    .transform((v) => {
        return remap$(v, {
            created_at: "createdAt",
        });
    });

/** @internal */
export type GiftCardRefundSucceeded$Outbound = {
    type?: string | undefined;
    id?: string | undefined;
    name?: string | undefined;
    created_at?: string | undefined;
    context?: GiftCardRefundSucceededContext$Outbound | undefined;
};

/** @internal */
export const GiftCardRefundSucceeded$outboundSchema: z.ZodType<
    GiftCardRefundSucceeded$Outbound,
    z.ZodTypeDef,
    GiftCardRefundSucceeded
> = z
    .object({
        type: GiftCardRefundSucceededType$outboundSchema.optional(),
        id: z.string().optional(),
        name: GiftCardRefundSucceededName$outboundSchema.optional(),
        createdAt: z
            .date()
            .transform((v) => v.toISOString())
            .optional(),
        context: z.lazy(() => GiftCardRefundSucceededContext$outboundSchema).optional(),
    })
    .transform((v) => {
        return remap$(v, {
            createdAt: "created_at",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GiftCardRefundSucceeded$ {
    /** @deprecated use `GiftCardRefundSucceeded$inboundSchema` instead. */
    export const inboundSchema = GiftCardRefundSucceeded$inboundSchema;
    /** @deprecated use `GiftCardRefundSucceeded$outboundSchema` instead. */
    export const outboundSchema = GiftCardRefundSucceeded$outboundSchema;
    /** @deprecated use `GiftCardRefundSucceeded$Outbound` instead. */
    export type Outbound = GiftCardRefundSucceeded$Outbound;
}

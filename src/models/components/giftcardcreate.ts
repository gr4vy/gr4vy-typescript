/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod/v3";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type GiftCardCreate = {
  /**
   * The 16-19 digit number for the gift card.
   */
  number: string;
  /**
   * The PIN for this gift card.
   */
  pin: string;
  /**
   *  The ID of the buyer to associate this gift card to. If this field is provided then the `buyer_external_identifier` field needs to be unset.
   */
  buyerId?: string | null | undefined;
  /**
   * The `external_identifier` of the buyer to associate this gift card to. If this field is provided then the `buyer_id` field needs to be unset.
   */
  buyerExternalIdentifier?: string | null | undefined;
};

/** @internal */
export const GiftCardCreate$inboundSchema: z.ZodType<
  GiftCardCreate,
  z.ZodTypeDef,
  unknown
> = z.object({
  number: z.string(),
  pin: z.string(),
  buyer_id: z.nullable(z.string()).optional(),
  buyer_external_identifier: z.nullable(z.string()).optional(),
}).transform((v) => {
  return remap$(v, {
    "buyer_id": "buyerId",
    "buyer_external_identifier": "buyerExternalIdentifier",
  });
});

/** @internal */
export type GiftCardCreate$Outbound = {
  number: string;
  pin: string;
  buyer_id?: string | null | undefined;
  buyer_external_identifier?: string | null | undefined;
};

/** @internal */
export const GiftCardCreate$outboundSchema: z.ZodType<
  GiftCardCreate$Outbound,
  z.ZodTypeDef,
  GiftCardCreate
> = z.object({
  number: z.string(),
  pin: z.string(),
  buyerId: z.nullable(z.string()).optional(),
  buyerExternalIdentifier: z.nullable(z.string()).optional(),
}).transform((v) => {
  return remap$(v, {
    buyerId: "buyer_id",
    buyerExternalIdentifier: "buyer_external_identifier",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GiftCardCreate$ {
  /** @deprecated use `GiftCardCreate$inboundSchema` instead. */
  export const inboundSchema = GiftCardCreate$inboundSchema;
  /** @deprecated use `GiftCardCreate$outboundSchema` instead. */
  export const outboundSchema = GiftCardCreate$outboundSchema;
  /** @deprecated use `GiftCardCreate$Outbound` instead. */
  export type Outbound = GiftCardCreate$Outbound;
}

export function giftCardCreateToJSON(giftCardCreate: GiftCardCreate): string {
  return JSON.stringify(GiftCardCreate$outboundSchema.parse(giftCardCreate));
}

export function giftCardCreateFromJSON(
  jsonString: string,
): SafeParseResult<GiftCardCreate, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GiftCardCreate$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GiftCardCreate' from JSON`,
  );
}

/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as z from "zod";

/**
 * A request to create a user.
 */
export type UserRequest = {
    /**
     * The full name of the user which is used in the Gr4vy admin panel to give an user a human readable name.
     */
    name?: string | undefined;
    /**
     * The email address for this user.
     */
    emailAddress?: string | undefined;
    /**
     * A list of role ids that will be assigned to the user being created. The creator must have `roles.write` or the role that is being assigned.
     */
    roleIds?: Array<string> | undefined;
    /**
     * A list of merchant account IDs that the user being created will be assigned to.
     */
    merchantAccountIds?: Array<string> | null | undefined;
};

/** @internal */
export namespace UserRequest$ {
    export type Inbound = {
        name?: string | undefined;
        email_address?: string | undefined;
        role_ids?: Array<string> | undefined;
        merchant_account_ids?: Array<string> | null | undefined;
    };

    export const inboundSchema: z.ZodType<UserRequest, z.ZodTypeDef, Inbound> = z
        .object({
            name: z.string().optional(),
            email_address: z.string().optional(),
            role_ids: z.array(z.string()).optional(),
            merchant_account_ids: z.nullable(z.array(z.string())).optional(),
        })
        .transform((v) => {
            return {
                ...(v.name === undefined ? null : { name: v.name }),
                ...(v.email_address === undefined ? null : { emailAddress: v.email_address }),
                ...(v.role_ids === undefined ? null : { roleIds: v.role_ids }),
                ...(v.merchant_account_ids === undefined
                    ? null
                    : { merchantAccountIds: v.merchant_account_ids }),
            };
        });

    export type Outbound = {
        name?: string | undefined;
        email_address?: string | undefined;
        role_ids?: Array<string> | undefined;
        merchant_account_ids?: Array<string> | null | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, UserRequest> = z
        .object({
            name: z.string().optional(),
            emailAddress: z.string().optional(),
            roleIds: z.array(z.string()).optional(),
            merchantAccountIds: z.nullable(z.array(z.string())).optional(),
        })
        .transform((v) => {
            return {
                ...(v.name === undefined ? null : { name: v.name }),
                ...(v.emailAddress === undefined ? null : { email_address: v.emailAddress }),
                ...(v.roleIds === undefined ? null : { role_ids: v.roleIds }),
                ...(v.merchantAccountIds === undefined
                    ? null
                    : { merchant_account_ids: v.merchantAccountIds }),
            };
        });
}

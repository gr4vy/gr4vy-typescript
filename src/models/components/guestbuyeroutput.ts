/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod/v3";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  BillingDetailsOutput,
  BillingDetailsOutput$inboundSchema,
  BillingDetailsOutput$Outbound,
  BillingDetailsOutput$outboundSchema,
} from "./billingdetailsoutput.js";
import {
  ShippingDetailsCreate,
  ShippingDetailsCreate$inboundSchema,
  ShippingDetailsCreate$Outbound,
  ShippingDetailsCreate$outboundSchema,
} from "./shippingdetailscreate.js";

export type GuestBuyerOutput = {
  /**
   * The display name for the buyer.
   */
  displayName?: string | null | undefined;
  /**
   * The merchant identifier for this buyer.
   */
  externalIdentifier?: string | null | undefined;
  /**
   * The billing name, address, email, and other fields for this buyer.
   */
  billingDetails?: BillingDetailsOutput | null | undefined;
  /**
   * The buyer account number
   */
  accountNumber?: string | null | undefined;
  /**
   * The optional shipping details for this buyer.
   */
  shippingDetails?: ShippingDetailsCreate | null | undefined;
};

/** @internal */
export const GuestBuyerOutput$inboundSchema: z.ZodType<
  GuestBuyerOutput,
  z.ZodTypeDef,
  unknown
> = z.object({
  display_name: z.nullable(z.string()).optional(),
  external_identifier: z.nullable(z.string()).optional(),
  billing_details: z.nullable(BillingDetailsOutput$inboundSchema).optional(),
  account_number: z.nullable(z.string()).optional(),
  shipping_details: z.nullable(ShippingDetailsCreate$inboundSchema).optional(),
}).transform((v) => {
  return remap$(v, {
    "display_name": "displayName",
    "external_identifier": "externalIdentifier",
    "billing_details": "billingDetails",
    "account_number": "accountNumber",
    "shipping_details": "shippingDetails",
  });
});

/** @internal */
export type GuestBuyerOutput$Outbound = {
  display_name?: string | null | undefined;
  external_identifier?: string | null | undefined;
  billing_details?: BillingDetailsOutput$Outbound | null | undefined;
  account_number?: string | null | undefined;
  shipping_details?: ShippingDetailsCreate$Outbound | null | undefined;
};

/** @internal */
export const GuestBuyerOutput$outboundSchema: z.ZodType<
  GuestBuyerOutput$Outbound,
  z.ZodTypeDef,
  GuestBuyerOutput
> = z.object({
  displayName: z.nullable(z.string()).optional(),
  externalIdentifier: z.nullable(z.string()).optional(),
  billingDetails: z.nullable(BillingDetailsOutput$outboundSchema).optional(),
  accountNumber: z.nullable(z.string()).optional(),
  shippingDetails: z.nullable(ShippingDetailsCreate$outboundSchema).optional(),
}).transform((v) => {
  return remap$(v, {
    displayName: "display_name",
    externalIdentifier: "external_identifier",
    billingDetails: "billing_details",
    accountNumber: "account_number",
    shippingDetails: "shipping_details",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GuestBuyerOutput$ {
  /** @deprecated use `GuestBuyerOutput$inboundSchema` instead. */
  export const inboundSchema = GuestBuyerOutput$inboundSchema;
  /** @deprecated use `GuestBuyerOutput$outboundSchema` instead. */
  export const outboundSchema = GuestBuyerOutput$outboundSchema;
  /** @deprecated use `GuestBuyerOutput$Outbound` instead. */
  export type Outbound = GuestBuyerOutput$Outbound;
}

export function guestBuyerOutputToJSON(
  guestBuyerOutput: GuestBuyerOutput,
): string {
  return JSON.stringify(
    GuestBuyerOutput$outboundSchema.parse(guestBuyerOutput),
  );
}

export function guestBuyerOutputFromJSON(
  jsonString: string,
): SafeParseResult<GuestBuyerOutput, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GuestBuyerOutput$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GuestBuyerOutput' from JSON`,
  );
}

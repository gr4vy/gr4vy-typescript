/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod/v3";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type ForterAntiFraudOptionsDiscountCouponDiscountAmount = {
  /**
   * The discount amount in USD.
   */
  amountUsd?: string | null | undefined;
  /**
   * The discount amount in local currency.
   */
  amountLocalCurrency?: string | null | undefined;
  /**
   * The currency code for the discount amount.
   */
  currency?: string | null | undefined;
};

/** @internal */
export const ForterAntiFraudOptionsDiscountCouponDiscountAmount$inboundSchema:
  z.ZodType<
    ForterAntiFraudOptionsDiscountCouponDiscountAmount,
    z.ZodTypeDef,
    unknown
  > = z.object({
    amount_usd: z.nullable(z.string()).optional(),
    amount_local_currency: z.nullable(z.string()).optional(),
    currency: z.nullable(z.string()).optional(),
  }).transform((v) => {
    return remap$(v, {
      "amount_usd": "amountUsd",
      "amount_local_currency": "amountLocalCurrency",
    });
  });

/** @internal */
export type ForterAntiFraudOptionsDiscountCouponDiscountAmount$Outbound = {
  amount_usd?: string | null | undefined;
  amount_local_currency?: string | null | undefined;
  currency?: string | null | undefined;
};

/** @internal */
export const ForterAntiFraudOptionsDiscountCouponDiscountAmount$outboundSchema:
  z.ZodType<
    ForterAntiFraudOptionsDiscountCouponDiscountAmount$Outbound,
    z.ZodTypeDef,
    ForterAntiFraudOptionsDiscountCouponDiscountAmount
  > = z.object({
    amountUsd: z.nullable(z.string()).optional(),
    amountLocalCurrency: z.nullable(z.string()).optional(),
    currency: z.nullable(z.string()).optional(),
  }).transform((v) => {
    return remap$(v, {
      amountUsd: "amount_usd",
      amountLocalCurrency: "amount_local_currency",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ForterAntiFraudOptionsDiscountCouponDiscountAmount$ {
  /** @deprecated use `ForterAntiFraudOptionsDiscountCouponDiscountAmount$inboundSchema` instead. */
  export const inboundSchema =
    ForterAntiFraudOptionsDiscountCouponDiscountAmount$inboundSchema;
  /** @deprecated use `ForterAntiFraudOptionsDiscountCouponDiscountAmount$outboundSchema` instead. */
  export const outboundSchema =
    ForterAntiFraudOptionsDiscountCouponDiscountAmount$outboundSchema;
  /** @deprecated use `ForterAntiFraudOptionsDiscountCouponDiscountAmount$Outbound` instead. */
  export type Outbound =
    ForterAntiFraudOptionsDiscountCouponDiscountAmount$Outbound;
}

export function forterAntiFraudOptionsDiscountCouponDiscountAmountToJSON(
  forterAntiFraudOptionsDiscountCouponDiscountAmount:
    ForterAntiFraudOptionsDiscountCouponDiscountAmount,
): string {
  return JSON.stringify(
    ForterAntiFraudOptionsDiscountCouponDiscountAmount$outboundSchema.parse(
      forterAntiFraudOptionsDiscountCouponDiscountAmount,
    ),
  );
}

export function forterAntiFraudOptionsDiscountCouponDiscountAmountFromJSON(
  jsonString: string,
): SafeParseResult<
  ForterAntiFraudOptionsDiscountCouponDiscountAmount,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      ForterAntiFraudOptionsDiscountCouponDiscountAmount$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'ForterAntiFraudOptionsDiscountCouponDiscountAmount' from JSON`,
  );
}

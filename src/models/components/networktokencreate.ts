/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives.js";
import * as z from "zod";

/**
 * Base model with JSON encoders.
 */
export type NetworkTokenCreate = {
    securityCode?: string | undefined;
    merchantInitiated: boolean;
    isSubsequentPayment: boolean;
};

/** @internal */
export const NetworkTokenCreate$inboundSchema: z.ZodType<
    NetworkTokenCreate,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        security_code: z.string().optional(),
        merchant_initiated: z.boolean(),
        is_subsequent_payment: z.boolean(),
    })
    .transform((v) => {
        return remap$(v, {
            security_code: "securityCode",
            merchant_initiated: "merchantInitiated",
            is_subsequent_payment: "isSubsequentPayment",
        });
    });

/** @internal */
export type NetworkTokenCreate$Outbound = {
    security_code?: string | undefined;
    merchant_initiated: boolean;
    is_subsequent_payment: boolean;
};

/** @internal */
export const NetworkTokenCreate$outboundSchema: z.ZodType<
    NetworkTokenCreate$Outbound,
    z.ZodTypeDef,
    NetworkTokenCreate
> = z
    .object({
        securityCode: z.string().optional(),
        merchantInitiated: z.boolean(),
        isSubsequentPayment: z.boolean(),
    })
    .transform((v) => {
        return remap$(v, {
            securityCode: "security_code",
            merchantInitiated: "merchant_initiated",
            isSubsequentPayment: "is_subsequent_payment",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace NetworkTokenCreate$ {
    /** @deprecated use `NetworkTokenCreate$inboundSchema` instead. */
    export const inboundSchema = NetworkTokenCreate$inboundSchema;
    /** @deprecated use `NetworkTokenCreate$outboundSchema` instead. */
    export const outboundSchema = NetworkTokenCreate$outboundSchema;
    /** @deprecated use `NetworkTokenCreate$Outbound` instead. */
    export type Outbound = NetworkTokenCreate$Outbound;
}

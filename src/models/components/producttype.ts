/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import {
  catchUnrecognizedEnum,
  OpenEnum,
  Unrecognized,
} from "../../types/enums.js";

export const ProductType = {
  Physical: "physical",
  Discount: "discount",
  ShippingFee: "shipping_fee",
  SalesTax: "sales_tax",
  Digital: "digital",
  GiftCard: "gift_card",
  StoreCredit: "store_credit",
  Surcharge: "surcharge",
} as const;
export type ProductType = OpenEnum<typeof ProductType>;

/** @internal */
export const ProductType$inboundSchema: z.ZodType<
  ProductType,
  z.ZodTypeDef,
  unknown
> = z
  .union([
    z.nativeEnum(ProductType),
    z.string().transform(catchUnrecognizedEnum),
  ]);

/** @internal */
export const ProductType$outboundSchema: z.ZodType<
  ProductType,
  z.ZodTypeDef,
  ProductType
> = z.union([
  z.nativeEnum(ProductType),
  z.string().and(z.custom<Unrecognized<string>>()),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ProductType$ {
  /** @deprecated use `ProductType$inboundSchema` instead. */
  export const inboundSchema = ProductType$inboundSchema;
  /** @deprecated use `ProductType$outboundSchema` instead. */
  export const outboundSchema = ProductType$outboundSchema;
}

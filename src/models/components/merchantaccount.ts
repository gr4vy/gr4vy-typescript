/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as z from "zod";

/**
 * `merchant-account`.
 */
export enum MerchantAccountType {
    MerchantAccount = "merchant-account",
}

export enum LoonAcceptedSchemes {
    Accel = "accel",
    Amex = "amex",
    Bancontact = "bancontact",
    CarteBancaire = "carte-bancaire",
    Cirrus = "cirrus",
    Culiance = "culiance",
    Dankort = "dankort",
    DinersClub = "diners-club",
    Discover = "discover",
    EftposAustralia = "eftpos-australia",
    Elo = "elo",
    Hipercard = "hipercard",
    Jcb = "jcb",
    Maestro = "maestro",
    Mastercard = "mastercard",
    Mir = "mir",
    Nyce = "nyce",
    Other = "other",
    Pulse = "pulse",
    Rupay = "rupay",
    Star = "star",
    Uatp = "uatp",
    Unionpay = "unionpay",
    Visa = "visa",
}

export type MerchantAccount = {
    /**
     * `merchant-account`.
     */
    type?: MerchantAccountType | undefined;
    /**
     * The ID for this merchant account.
     */
    id?: string | undefined;
    /**
     * The display name of this merchant account.
     */
    displayName?: string | undefined;
    /**
     * The optional URL where webhooks will be received.
     */
    outboundWebhookUrl?: string | null | undefined;
    /**
     * The optional username to use when `outbound_webhook_url` is configured and
     *
     * @remarks
     * requires basic authentication.
     */
    outboundWebhookUsername?: string | null | undefined;
    /**
     * The optional password to use when `outbound_webhook_url` is configured and
     *
     * @remarks
     * requires basic authentication.
     *
     * If the field is not `null`, the value is masked to avoid exposing sensitive information.
     */
    outboundWebhookPassword?: string | null | undefined;
    /**
     * Requestor ID provided for Visa after onboarding to use Network Tokens.
     */
    visaNetworkTokensRequestorId?: string | null | undefined;
    /**
     * Application ID provided for Visa after onboarding to use Network
     *
     * @remarks
     * Tokens.
     */
    visaNetworkTokensAppId?: string | null | undefined;
    /**
     * Requestor ID provided for Amex after onboarding to use Network Tokens.
     */
    amexNetworkTokensRequestorId?: string | null | undefined;
    /**
     * Application ID provided for Amex after onboarding to use Network Tokens.
     */
    amexNetworkTokensAppId?: string | null | undefined;
    /**
     * Requestor ID provided for Mastercard after onboarding to use Network
     *
     * @remarks
     * Tokens.
     */
    mastercardNetworkTokensRequestorId?: string | null | undefined;
    /**
     * Application ID provided for Mastercard after onboarding to use
     *
     * @remarks
     * Network Tokens.
     */
    mastercardNetworkTokensAppId?: string | null | undefined;
    /**
     * Client key provided by Pagos to authenticate to the Loon API.
     *
     * @remarks
     * Loon is the Account Updater service used by Gr4vy.
     */
    loonClientKey?: string | null | undefined;
    /**
     * Secret key provided by Pagos to authenticate to the Loon API.
     *
     * @remarks
     * Loon is the Account Updater service used by Gr4vy.
     *
     * If the field is not `null`, the value is masked to avoid exposing sensitive information.
     */
    loonSecretKey?: string | null | undefined;
    /**
     * Card schemes accepted when creating jobs using this set of Loon API keys.
     *
     * @remarks
     * Loon is the Account Updater service used by Gr4vy.
     */
    loonAcceptedSchemes?: Array<LoonAcceptedSchemes> | null | undefined;
    /**
     * The date and time when this merchant account was created.
     */
    createdAt?: Date | undefined;
    /**
     * The date and time when this merchant account was updated.
     */
    updatedAt?: Date | undefined;
};

/** @internal */
export const MerchantAccountType$: z.ZodNativeEnum<typeof MerchantAccountType> =
    z.nativeEnum(MerchantAccountType);

/** @internal */
export const LoonAcceptedSchemes$: z.ZodNativeEnum<typeof LoonAcceptedSchemes> =
    z.nativeEnum(LoonAcceptedSchemes);

/** @internal */
export namespace MerchantAccount$ {
    export type Inbound = {
        type?: MerchantAccountType | undefined;
        id?: string | undefined;
        display_name?: string | undefined;
        outbound_webhook_url?: string | null | undefined;
        outbound_webhook_username?: string | null | undefined;
        outbound_webhook_password?: string | null | undefined;
        visa_network_tokens_requestor_id?: string | null | undefined;
        visa_network_tokens_app_id?: string | null | undefined;
        amex_network_tokens_requestor_id?: string | null | undefined;
        amex_network_tokens_app_id?: string | null | undefined;
        mastercard_network_tokens_requestor_id?: string | null | undefined;
        mastercard_network_tokens_app_id?: string | null | undefined;
        loon_client_key?: string | null | undefined;
        loon_secret_key?: string | null | undefined;
        loon_accepted_schemes?: Array<LoonAcceptedSchemes> | null | undefined;
        created_at?: string | undefined;
        updated_at?: string | undefined;
    };

    export const inboundSchema: z.ZodType<MerchantAccount, z.ZodTypeDef, Inbound> = z
        .object({
            type: MerchantAccountType$.optional(),
            id: z.string().optional(),
            display_name: z.string().optional(),
            outbound_webhook_url: z.nullable(z.string()).optional(),
            outbound_webhook_username: z.nullable(z.string()).optional(),
            outbound_webhook_password: z.nullable(z.string()).optional(),
            visa_network_tokens_requestor_id: z.nullable(z.string()).optional(),
            visa_network_tokens_app_id: z.nullable(z.string()).optional(),
            amex_network_tokens_requestor_id: z.nullable(z.string()).optional(),
            amex_network_tokens_app_id: z.nullable(z.string()).optional(),
            mastercard_network_tokens_requestor_id: z.nullable(z.string()).optional(),
            mastercard_network_tokens_app_id: z.nullable(z.string()).optional(),
            loon_client_key: z.nullable(z.string()).optional(),
            loon_secret_key: z.nullable(z.string()).optional(),
            loon_accepted_schemes: z.nullable(z.array(LoonAcceptedSchemes$)).optional(),
            created_at: z
                .string()
                .datetime({ offset: true })
                .transform((v) => new Date(v))
                .optional(),
            updated_at: z
                .string()
                .datetime({ offset: true })
                .transform((v) => new Date(v))
                .optional(),
        })
        .transform((v) => {
            return {
                ...(v.type === undefined ? null : { type: v.type }),
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.display_name === undefined ? null : { displayName: v.display_name }),
                ...(v.outbound_webhook_url === undefined
                    ? null
                    : { outboundWebhookUrl: v.outbound_webhook_url }),
                ...(v.outbound_webhook_username === undefined
                    ? null
                    : { outboundWebhookUsername: v.outbound_webhook_username }),
                ...(v.outbound_webhook_password === undefined
                    ? null
                    : { outboundWebhookPassword: v.outbound_webhook_password }),
                ...(v.visa_network_tokens_requestor_id === undefined
                    ? null
                    : { visaNetworkTokensRequestorId: v.visa_network_tokens_requestor_id }),
                ...(v.visa_network_tokens_app_id === undefined
                    ? null
                    : { visaNetworkTokensAppId: v.visa_network_tokens_app_id }),
                ...(v.amex_network_tokens_requestor_id === undefined
                    ? null
                    : { amexNetworkTokensRequestorId: v.amex_network_tokens_requestor_id }),
                ...(v.amex_network_tokens_app_id === undefined
                    ? null
                    : { amexNetworkTokensAppId: v.amex_network_tokens_app_id }),
                ...(v.mastercard_network_tokens_requestor_id === undefined
                    ? null
                    : {
                          mastercardNetworkTokensRequestorId:
                              v.mastercard_network_tokens_requestor_id,
                      }),
                ...(v.mastercard_network_tokens_app_id === undefined
                    ? null
                    : { mastercardNetworkTokensAppId: v.mastercard_network_tokens_app_id }),
                ...(v.loon_client_key === undefined ? null : { loonClientKey: v.loon_client_key }),
                ...(v.loon_secret_key === undefined ? null : { loonSecretKey: v.loon_secret_key }),
                ...(v.loon_accepted_schemes === undefined
                    ? null
                    : { loonAcceptedSchemes: v.loon_accepted_schemes }),
                ...(v.created_at === undefined ? null : { createdAt: v.created_at }),
                ...(v.updated_at === undefined ? null : { updatedAt: v.updated_at }),
            };
        });

    export type Outbound = {
        type?: MerchantAccountType | undefined;
        id?: string | undefined;
        display_name?: string | undefined;
        outbound_webhook_url?: string | null | undefined;
        outbound_webhook_username?: string | null | undefined;
        outbound_webhook_password?: string | null | undefined;
        visa_network_tokens_requestor_id?: string | null | undefined;
        visa_network_tokens_app_id?: string | null | undefined;
        amex_network_tokens_requestor_id?: string | null | undefined;
        amex_network_tokens_app_id?: string | null | undefined;
        mastercard_network_tokens_requestor_id?: string | null | undefined;
        mastercard_network_tokens_app_id?: string | null | undefined;
        loon_client_key?: string | null | undefined;
        loon_secret_key?: string | null | undefined;
        loon_accepted_schemes?: Array<LoonAcceptedSchemes> | null | undefined;
        created_at?: string | undefined;
        updated_at?: string | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, MerchantAccount> = z
        .object({
            type: MerchantAccountType$.optional(),
            id: z.string().optional(),
            displayName: z.string().optional(),
            outboundWebhookUrl: z.nullable(z.string()).optional(),
            outboundWebhookUsername: z.nullable(z.string()).optional(),
            outboundWebhookPassword: z.nullable(z.string()).optional(),
            visaNetworkTokensRequestorId: z.nullable(z.string()).optional(),
            visaNetworkTokensAppId: z.nullable(z.string()).optional(),
            amexNetworkTokensRequestorId: z.nullable(z.string()).optional(),
            amexNetworkTokensAppId: z.nullable(z.string()).optional(),
            mastercardNetworkTokensRequestorId: z.nullable(z.string()).optional(),
            mastercardNetworkTokensAppId: z.nullable(z.string()).optional(),
            loonClientKey: z.nullable(z.string()).optional(),
            loonSecretKey: z.nullable(z.string()).optional(),
            loonAcceptedSchemes: z.nullable(z.array(LoonAcceptedSchemes$)).optional(),
            createdAt: z
                .date()
                .transform((v) => v.toISOString())
                .optional(),
            updatedAt: z
                .date()
                .transform((v) => v.toISOString())
                .optional(),
        })
        .transform((v) => {
            return {
                ...(v.type === undefined ? null : { type: v.type }),
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.displayName === undefined ? null : { display_name: v.displayName }),
                ...(v.outboundWebhookUrl === undefined
                    ? null
                    : { outbound_webhook_url: v.outboundWebhookUrl }),
                ...(v.outboundWebhookUsername === undefined
                    ? null
                    : { outbound_webhook_username: v.outboundWebhookUsername }),
                ...(v.outboundWebhookPassword === undefined
                    ? null
                    : { outbound_webhook_password: v.outboundWebhookPassword }),
                ...(v.visaNetworkTokensRequestorId === undefined
                    ? null
                    : { visa_network_tokens_requestor_id: v.visaNetworkTokensRequestorId }),
                ...(v.visaNetworkTokensAppId === undefined
                    ? null
                    : { visa_network_tokens_app_id: v.visaNetworkTokensAppId }),
                ...(v.amexNetworkTokensRequestorId === undefined
                    ? null
                    : { amex_network_tokens_requestor_id: v.amexNetworkTokensRequestorId }),
                ...(v.amexNetworkTokensAppId === undefined
                    ? null
                    : { amex_network_tokens_app_id: v.amexNetworkTokensAppId }),
                ...(v.mastercardNetworkTokensRequestorId === undefined
                    ? null
                    : {
                          mastercard_network_tokens_requestor_id:
                              v.mastercardNetworkTokensRequestorId,
                      }),
                ...(v.mastercardNetworkTokensAppId === undefined
                    ? null
                    : { mastercard_network_tokens_app_id: v.mastercardNetworkTokensAppId }),
                ...(v.loonClientKey === undefined ? null : { loon_client_key: v.loonClientKey }),
                ...(v.loonSecretKey === undefined ? null : { loon_secret_key: v.loonSecretKey }),
                ...(v.loonAcceptedSchemes === undefined
                    ? null
                    : { loon_accepted_schemes: v.loonAcceptedSchemes }),
                ...(v.createdAt === undefined ? null : { created_at: v.createdAt }),
                ...(v.updatedAt === undefined ? null : { updated_at: v.updatedAt }),
            };
        });
}

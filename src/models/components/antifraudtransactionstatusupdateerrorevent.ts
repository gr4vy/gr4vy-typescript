/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as z from "zod";

/**
 * The type of this resource. Is always `transaction-event`.
 */
export enum AntiFraudTransactionStatusUpdateErrorEventType {
    TransactionEvent = "transaction-event",
}

/**
 * The name of this resource. Is always `anti-fraud-transaction-status-update-error`.
 */
export enum AntiFraudTransactionStatusUpdateErrorEventName {
    AntiFraudTransactionStatusUpdateError = "anti-fraud-transaction-status-update-error",
}

/**
 * Additional context for this event.
 */
export type AntiFraudTransactionStatusUpdateErrorEventContext = {
    /**
     * The unique ID of the anti-fraud service used.
     */
    antiFraudServiceId?: string | undefined;
    /**
     * The name of the anti-fraud service used.
     */
    antiFraudServiceName?: string | undefined;
    /**
     * The anti-fraud service definition used.
     */
    antiFraudServiceDefinitionId?: string | undefined;
    /**
     * The reason we could not get the anti-fraud decision.
     */
    reason?: string | undefined;
    /**
     * The HTTP body sent to fetch a decision.
     */
    request?: string | null | undefined;
    /**
     * The HTTP body received from the anti-fraud provider.
     */
    response?: string | null | undefined;
    /**
     * The HTTP response status code from the anti-fraud provider.
     */
    responseStatusCode?: number | null | undefined;
};

/**
 * This event logs the reason why we were unable to update an anti-fraud decision.
 */
export type AntiFraudTransactionStatusUpdateErrorEvent = {
    /**
     * The type of this resource. Is always `transaction-event`.
     */
    type?: AntiFraudTransactionStatusUpdateErrorEventType | undefined;
    /**
     * The unique identifier for this event.
     */
    id?: string | undefined;
    /**
     * The name of this resource. Is always `anti-fraud-transaction-status-update-error`.
     */
    name?: AntiFraudTransactionStatusUpdateErrorEventName | undefined;
    /**
     * The date and time when this transaction event was created in our system.
     */
    createdAt?: Date | undefined;
    /**
     * Additional context for this event.
     */
    context?: AntiFraudTransactionStatusUpdateErrorEventContext | undefined;
};

/** @internal */
export const AntiFraudTransactionStatusUpdateErrorEventType$: z.ZodNativeEnum<
    typeof AntiFraudTransactionStatusUpdateErrorEventType
> = z.nativeEnum(AntiFraudTransactionStatusUpdateErrorEventType);

/** @internal */
export const AntiFraudTransactionStatusUpdateErrorEventName$: z.ZodNativeEnum<
    typeof AntiFraudTransactionStatusUpdateErrorEventName
> = z.nativeEnum(AntiFraudTransactionStatusUpdateErrorEventName);

/** @internal */
export namespace AntiFraudTransactionStatusUpdateErrorEventContext$ {
    export type Inbound = {
        anti_fraud_service_id?: string | undefined;
        anti_fraud_service_name?: string | undefined;
        anti_fraud_service_definition_id?: string | undefined;
        reason?: string | undefined;
        request?: string | null | undefined;
        response?: string | null | undefined;
        response_status_code?: number | null | undefined;
    };

    export const inboundSchema: z.ZodType<
        AntiFraudTransactionStatusUpdateErrorEventContext,
        z.ZodTypeDef,
        Inbound
    > = z
        .object({
            anti_fraud_service_id: z.string().optional(),
            anti_fraud_service_name: z.string().optional(),
            anti_fraud_service_definition_id: z.string().optional(),
            reason: z.string().optional(),
            request: z.nullable(z.string()).optional(),
            response: z.nullable(z.string()).optional(),
            response_status_code: z.nullable(z.number()).optional(),
        })
        .transform((v) => {
            return {
                ...(v.anti_fraud_service_id === undefined
                    ? null
                    : { antiFraudServiceId: v.anti_fraud_service_id }),
                ...(v.anti_fraud_service_name === undefined
                    ? null
                    : { antiFraudServiceName: v.anti_fraud_service_name }),
                ...(v.anti_fraud_service_definition_id === undefined
                    ? null
                    : { antiFraudServiceDefinitionId: v.anti_fraud_service_definition_id }),
                ...(v.reason === undefined ? null : { reason: v.reason }),
                ...(v.request === undefined ? null : { request: v.request }),
                ...(v.response === undefined ? null : { response: v.response }),
                ...(v.response_status_code === undefined
                    ? null
                    : { responseStatusCode: v.response_status_code }),
            };
        });

    export type Outbound = {
        anti_fraud_service_id?: string | undefined;
        anti_fraud_service_name?: string | undefined;
        anti_fraud_service_definition_id?: string | undefined;
        reason?: string | undefined;
        request?: string | null | undefined;
        response?: string | null | undefined;
        response_status_code?: number | null | undefined;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        AntiFraudTransactionStatusUpdateErrorEventContext
    > = z
        .object({
            antiFraudServiceId: z.string().optional(),
            antiFraudServiceName: z.string().optional(),
            antiFraudServiceDefinitionId: z.string().optional(),
            reason: z.string().optional(),
            request: z.nullable(z.string()).optional(),
            response: z.nullable(z.string()).optional(),
            responseStatusCode: z.nullable(z.number()).optional(),
        })
        .transform((v) => {
            return {
                ...(v.antiFraudServiceId === undefined
                    ? null
                    : { anti_fraud_service_id: v.antiFraudServiceId }),
                ...(v.antiFraudServiceName === undefined
                    ? null
                    : { anti_fraud_service_name: v.antiFraudServiceName }),
                ...(v.antiFraudServiceDefinitionId === undefined
                    ? null
                    : { anti_fraud_service_definition_id: v.antiFraudServiceDefinitionId }),
                ...(v.reason === undefined ? null : { reason: v.reason }),
                ...(v.request === undefined ? null : { request: v.request }),
                ...(v.response === undefined ? null : { response: v.response }),
                ...(v.responseStatusCode === undefined
                    ? null
                    : { response_status_code: v.responseStatusCode }),
            };
        });
}

/** @internal */
export namespace AntiFraudTransactionStatusUpdateErrorEvent$ {
    export type Inbound = {
        type?: AntiFraudTransactionStatusUpdateErrorEventType | undefined;
        id?: string | undefined;
        name?: AntiFraudTransactionStatusUpdateErrorEventName | undefined;
        created_at?: string | undefined;
        context?: AntiFraudTransactionStatusUpdateErrorEventContext$.Inbound | undefined;
    };

    export const inboundSchema: z.ZodType<
        AntiFraudTransactionStatusUpdateErrorEvent,
        z.ZodTypeDef,
        Inbound
    > = z
        .object({
            type: AntiFraudTransactionStatusUpdateErrorEventType$.optional(),
            id: z.string().optional(),
            name: AntiFraudTransactionStatusUpdateErrorEventName$.optional(),
            created_at: z
                .string()
                .datetime({ offset: true })
                .transform((v) => new Date(v))
                .optional(),
            context: z
                .lazy(() => AntiFraudTransactionStatusUpdateErrorEventContext$.inboundSchema)
                .optional(),
        })
        .transform((v) => {
            return {
                ...(v.type === undefined ? null : { type: v.type }),
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.name === undefined ? null : { name: v.name }),
                ...(v.created_at === undefined ? null : { createdAt: v.created_at }),
                ...(v.context === undefined ? null : { context: v.context }),
            };
        });

    export type Outbound = {
        type?: AntiFraudTransactionStatusUpdateErrorEventType | undefined;
        id?: string | undefined;
        name?: AntiFraudTransactionStatusUpdateErrorEventName | undefined;
        created_at?: string | undefined;
        context?: AntiFraudTransactionStatusUpdateErrorEventContext$.Outbound | undefined;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        AntiFraudTransactionStatusUpdateErrorEvent
    > = z
        .object({
            type: AntiFraudTransactionStatusUpdateErrorEventType$.optional(),
            id: z.string().optional(),
            name: AntiFraudTransactionStatusUpdateErrorEventName$.optional(),
            createdAt: z
                .date()
                .transform((v) => v.toISOString())
                .optional(),
            context: z
                .lazy(() => AntiFraudTransactionStatusUpdateErrorEventContext$.outboundSchema)
                .optional(),
        })
        .transform((v) => {
            return {
                ...(v.type === undefined ? null : { type: v.type }),
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.name === undefined ? null : { name: v.name }),
                ...(v.createdAt === undefined ? null : { created_at: v.createdAt }),
                ...(v.context === undefined ? null : { context: v.context }),
            };
        });
}

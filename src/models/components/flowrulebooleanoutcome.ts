/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as z from "zod";

/**
 * The type of action outcome for the given rule.
 */
export enum FlowRuleBooleanOutcomeType {
    Boolean = "boolean",
}

/**
 * Defines the outcome of a rule in a flow where the result
 *
 * @remarks
 * is a boolean.
 */
export type FlowRuleBooleanOutcome = {
    /**
     * The type of action outcome for the given rule.
     */
    type: FlowRuleBooleanOutcomeType;
    /**
     * Results for a given flow action.
     */
    result: boolean;
};

/** @internal */
export namespace FlowRuleBooleanOutcomeType$ {
    export const inboundSchema = z.nativeEnum(FlowRuleBooleanOutcomeType);
    export const outboundSchema = inboundSchema;
}

/** @internal */
export namespace FlowRuleBooleanOutcome$ {
    export const inboundSchema: z.ZodType<FlowRuleBooleanOutcome, z.ZodTypeDef, unknown> = z.object(
        {
            type: FlowRuleBooleanOutcomeType$.inboundSchema,
            result: z.boolean(),
        }
    );

    export type Outbound = {
        type: string;
        result: boolean;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, FlowRuleBooleanOutcome> =
        z.object({
            type: FlowRuleBooleanOutcomeType$.outboundSchema,
            result: z.boolean(),
        });
}

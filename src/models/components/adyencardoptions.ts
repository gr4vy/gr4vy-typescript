/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  AdyenCardAutoRescueScenariosEnum,
  AdyenCardAutoRescueScenariosEnum$inboundSchema,
  AdyenCardAutoRescueScenariosEnum$outboundSchema,
} from "./adyencardautorescuescenariosenum.js";
import {
  AdyenSplitsOptions,
  AdyenSplitsOptions$inboundSchema,
  AdyenSplitsOptions$Outbound,
  AdyenSplitsOptions$outboundSchema,
} from "./adyensplitsoptions.js";

export type AdyenCardOptions = {
  /**
   * Set to `true` to enable Auto Rescue for a transaction. Use the `maxDaysToRescue` to specify a rescue window.
   */
  autoRescue?: boolean | null | undefined;
  /**
   * The rescue window for a transaction, in days, when `autoRescue` is set to `true`. You can specify a value between 1 and 48. For cards, the default is one calendar month. For SEPA, the default is 42 days.
   */
  maxDaysToRescue?: number | null | undefined;
  /**
   * Passes additional data to the Adyen API when creating a transaction.
   */
  additionalData?: { [k: string]: string } | null | undefined;
  /**
   * The rescue scenario to simulate for a transaction, when `autoRescue` is set to `true`.
   */
  autoRescueScenario?: AdyenCardAutoRescueScenariosEnum | null | undefined;
  /**
   * The origin of the window where the payment is initiated, used for 3D Secure authentication.
   */
  windowOrigin?: string | null | undefined;
  /**
   * Passes information of splitting payment amounts to the Adyen API.
   */
  splits?: AdyenSplitsOptions | null | undefined;
};

/** @internal */
export const AdyenCardOptions$inboundSchema: z.ZodType<
  AdyenCardOptions,
  z.ZodTypeDef,
  unknown
> = z.object({
  autoRescue: z.nullable(z.boolean()).optional(),
  maxDaysToRescue: z.nullable(z.number().int()).optional(),
  additionalData: z.nullable(z.record(z.string())).optional(),
  autoRescueScenario: z.nullable(AdyenCardAutoRescueScenariosEnum$inboundSchema)
    .optional(),
  window_origin: z.nullable(z.string()).optional(),
  splits: z.nullable(AdyenSplitsOptions$inboundSchema).optional(),
}).transform((v) => {
  return remap$(v, {
    "window_origin": "windowOrigin",
  });
});

/** @internal */
export type AdyenCardOptions$Outbound = {
  autoRescue?: boolean | null | undefined;
  maxDaysToRescue?: number | null | undefined;
  additionalData?: { [k: string]: string } | null | undefined;
  autoRescueScenario?: string | null | undefined;
  window_origin?: string | null | undefined;
  splits?: AdyenSplitsOptions$Outbound | null | undefined;
};

/** @internal */
export const AdyenCardOptions$outboundSchema: z.ZodType<
  AdyenCardOptions$Outbound,
  z.ZodTypeDef,
  AdyenCardOptions
> = z.object({
  autoRescue: z.nullable(z.boolean()).optional(),
  maxDaysToRescue: z.nullable(z.number().int()).optional(),
  additionalData: z.nullable(z.record(z.string())).optional(),
  autoRescueScenario: z.nullable(
    AdyenCardAutoRescueScenariosEnum$outboundSchema,
  ).optional(),
  windowOrigin: z.nullable(z.string()).optional(),
  splits: z.nullable(AdyenSplitsOptions$outboundSchema).optional(),
}).transform((v) => {
  return remap$(v, {
    windowOrigin: "window_origin",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AdyenCardOptions$ {
  /** @deprecated use `AdyenCardOptions$inboundSchema` instead. */
  export const inboundSchema = AdyenCardOptions$inboundSchema;
  /** @deprecated use `AdyenCardOptions$outboundSchema` instead. */
  export const outboundSchema = AdyenCardOptions$outboundSchema;
  /** @deprecated use `AdyenCardOptions$Outbound` instead. */
  export type Outbound = AdyenCardOptions$Outbound;
}

export function adyenCardOptionsToJSON(
  adyenCardOptions: AdyenCardOptions,
): string {
  return JSON.stringify(
    AdyenCardOptions$outboundSchema.parse(adyenCardOptions),
  );
}

export function adyenCardOptionsFromJSON(
  jsonString: string,
): SafeParseResult<AdyenCardOptions, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => AdyenCardOptions$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'AdyenCardOptions' from JSON`,
  );
}

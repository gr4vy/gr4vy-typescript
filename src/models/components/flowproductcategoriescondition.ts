/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { ClosedEnum } from "../../types/enums.js";
import * as z from "zod";

/**
 * The type of match made for this rule.
 */
export const FlowProductCategoriesConditionName = {
    ProductCategories: "product_categories",
} as const;
/**
 * The type of match made for this rule.
 */
export type FlowProductCategoriesConditionName = ClosedEnum<
    typeof FlowProductCategoriesConditionName
>;

/**
 * The comparison to make on the `value`.
 */
export const FlowProductCategoriesConditionOperator = {
    IncludesAll: "includes_all",
    IncludesAtLeastOne: "includes_at_least_one",
    IncludesNone: "includes_none",
} as const;
/**
 * The comparison to make on the `value`.
 */
export type FlowProductCategoriesConditionOperator = ClosedEnum<
    typeof FlowProductCategoriesConditionOperator
>;

/**
 * Cart items' product categories conditions with a name, operator, and value.
 */
export type FlowProductCategoriesCondition = {
    /**
     * The type of match made for this rule.
     */
    name: FlowProductCategoriesConditionName;
    /**
     * The comparison to make on the `value`.
     */
    operator: FlowProductCategoriesConditionOperator;
    /**
     * Cart items' product categories to compare the transaction to.
     */
    value: Array<string>;
};

/** @internal */
export const FlowProductCategoriesConditionName$inboundSchema: z.ZodNativeEnum<
    typeof FlowProductCategoriesConditionName
> = z.nativeEnum(FlowProductCategoriesConditionName);

/** @internal */
export const FlowProductCategoriesConditionName$outboundSchema: z.ZodNativeEnum<
    typeof FlowProductCategoriesConditionName
> = FlowProductCategoriesConditionName$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FlowProductCategoriesConditionName$ {
    /** @deprecated use `FlowProductCategoriesConditionName$inboundSchema` instead. */
    export const inboundSchema = FlowProductCategoriesConditionName$inboundSchema;
    /** @deprecated use `FlowProductCategoriesConditionName$outboundSchema` instead. */
    export const outboundSchema = FlowProductCategoriesConditionName$outboundSchema;
}

/** @internal */
export const FlowProductCategoriesConditionOperator$inboundSchema: z.ZodNativeEnum<
    typeof FlowProductCategoriesConditionOperator
> = z.nativeEnum(FlowProductCategoriesConditionOperator);

/** @internal */
export const FlowProductCategoriesConditionOperator$outboundSchema: z.ZodNativeEnum<
    typeof FlowProductCategoriesConditionOperator
> = FlowProductCategoriesConditionOperator$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FlowProductCategoriesConditionOperator$ {
    /** @deprecated use `FlowProductCategoriesConditionOperator$inboundSchema` instead. */
    export const inboundSchema = FlowProductCategoriesConditionOperator$inboundSchema;
    /** @deprecated use `FlowProductCategoriesConditionOperator$outboundSchema` instead. */
    export const outboundSchema = FlowProductCategoriesConditionOperator$outboundSchema;
}

/** @internal */
export const FlowProductCategoriesCondition$inboundSchema: z.ZodType<
    FlowProductCategoriesCondition,
    z.ZodTypeDef,
    unknown
> = z.object({
    name: FlowProductCategoriesConditionName$inboundSchema,
    operator: FlowProductCategoriesConditionOperator$inboundSchema,
    value: z.array(z.string()),
});

/** @internal */
export type FlowProductCategoriesCondition$Outbound = {
    name: string;
    operator: string;
    value: Array<string>;
};

/** @internal */
export const FlowProductCategoriesCondition$outboundSchema: z.ZodType<
    FlowProductCategoriesCondition$Outbound,
    z.ZodTypeDef,
    FlowProductCategoriesCondition
> = z.object({
    name: FlowProductCategoriesConditionName$outboundSchema,
    operator: FlowProductCategoriesConditionOperator$outboundSchema,
    value: z.array(z.string()),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FlowProductCategoriesCondition$ {
    /** @deprecated use `FlowProductCategoriesCondition$inboundSchema` instead. */
    export const inboundSchema = FlowProductCategoriesCondition$inboundSchema;
    /** @deprecated use `FlowProductCategoriesCondition$outboundSchema` instead. */
    export const outboundSchema = FlowProductCategoriesCondition$outboundSchema;
    /** @deprecated use `FlowProductCategoriesCondition$Outbound` instead. */
    export type Outbound = FlowProductCategoriesCondition$Outbound;
}

/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { ClosedEnum } from "../../types/enums.js";
import * as z from "zod";

/**
 * The type of match made for this rule.
 */
export const FlowCurrencyConditionName = {
    Currency: "currency",
} as const;
/**
 * The type of match made for this rule.
 */
export type FlowCurrencyConditionName = ClosedEnum<typeof FlowCurrencyConditionName>;

/**
 * The comparison to make on the currency code `value`.
 */
export const FlowCurrencyConditionOperator = {
    IsOneOf: "is_one_of",
    IsNotOneOf: "is_not_one_of",
} as const;
/**
 * The comparison to make on the currency code `value`.
 */
export type FlowCurrencyConditionOperator = ClosedEnum<typeof FlowCurrencyConditionOperator>;

/**
 * Currency conditions with a name, operator, and value.
 */
export type FlowCurrencyCondition = {
    /**
     * The type of match made for this rule.
     */
    name: FlowCurrencyConditionName;
    /**
     * The comparison to make on the currency code `value`.
     */
    operator: FlowCurrencyConditionOperator;
    /**
     * Currency ISO codes to compare the transaction to.
     */
    value: Array<string>;
};

/** @internal */
export const FlowCurrencyConditionName$inboundSchema: z.ZodNativeEnum<
    typeof FlowCurrencyConditionName
> = z.nativeEnum(FlowCurrencyConditionName);

/** @internal */
export const FlowCurrencyConditionName$outboundSchema: z.ZodNativeEnum<
    typeof FlowCurrencyConditionName
> = FlowCurrencyConditionName$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FlowCurrencyConditionName$ {
    /** @deprecated use `FlowCurrencyConditionName$inboundSchema` instead. */
    export const inboundSchema = FlowCurrencyConditionName$inboundSchema;
    /** @deprecated use `FlowCurrencyConditionName$outboundSchema` instead. */
    export const outboundSchema = FlowCurrencyConditionName$outboundSchema;
}

/** @internal */
export const FlowCurrencyConditionOperator$inboundSchema: z.ZodNativeEnum<
    typeof FlowCurrencyConditionOperator
> = z.nativeEnum(FlowCurrencyConditionOperator);

/** @internal */
export const FlowCurrencyConditionOperator$outboundSchema: z.ZodNativeEnum<
    typeof FlowCurrencyConditionOperator
> = FlowCurrencyConditionOperator$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FlowCurrencyConditionOperator$ {
    /** @deprecated use `FlowCurrencyConditionOperator$inboundSchema` instead. */
    export const inboundSchema = FlowCurrencyConditionOperator$inboundSchema;
    /** @deprecated use `FlowCurrencyConditionOperator$outboundSchema` instead. */
    export const outboundSchema = FlowCurrencyConditionOperator$outboundSchema;
}

/** @internal */
export const FlowCurrencyCondition$inboundSchema: z.ZodType<
    FlowCurrencyCondition,
    z.ZodTypeDef,
    unknown
> = z.object({
    name: FlowCurrencyConditionName$inboundSchema,
    operator: FlowCurrencyConditionOperator$inboundSchema,
    value: z.array(z.string()),
});

/** @internal */
export type FlowCurrencyCondition$Outbound = {
    name: string;
    operator: string;
    value: Array<string>;
};

/** @internal */
export const FlowCurrencyCondition$outboundSchema: z.ZodType<
    FlowCurrencyCondition$Outbound,
    z.ZodTypeDef,
    FlowCurrencyCondition
> = z.object({
    name: FlowCurrencyConditionName$outboundSchema,
    operator: FlowCurrencyConditionOperator$outboundSchema,
    value: z.array(z.string()),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FlowCurrencyCondition$ {
    /** @deprecated use `FlowCurrencyCondition$inboundSchema` instead. */
    export const inboundSchema = FlowCurrencyCondition$inboundSchema;
    /** @deprecated use `FlowCurrencyCondition$outboundSchema` instead. */
    export const outboundSchema = FlowCurrencyCondition$outboundSchema;
    /** @deprecated use `FlowCurrencyCondition$Outbound` instead. */
    export type Outbound = FlowCurrencyCondition$Outbound;
}

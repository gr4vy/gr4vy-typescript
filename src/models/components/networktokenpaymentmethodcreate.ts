/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives.js";
import { ClosedEnum } from "../../types/enums.js";
import { CardScheme, CardScheme$inboundSchema, CardScheme$outboundSchema } from "./cardscheme.js";
import * as z from "zod";

export const NetworkTokenPaymentMethodCreateMethod = {
    NetworkToken: "network-token",
} as const;
export type NetworkTokenPaymentMethodCreateMethod = ClosedEnum<
    typeof NetworkTokenPaymentMethodCreateMethod
>;

export const CardSource = {
    ApplePay: "apple-pay",
    GooglePay: "google-pay",
} as const;
export type CardSource = ClosedEnum<typeof CardSource>;

/**
 * Base model with JSON encoders.
 */
export type NetworkTokenPaymentMethodCreate = {
    method: NetworkTokenPaymentMethodCreateMethod;
    token: string;
    expirationDate: string;
    cryptogram?: string | undefined;
    redirectUrl?: string | undefined;
    cardSource?: CardSource | undefined;
    /**
     * An enumeration.
     */
    cardScheme?: CardScheme | undefined;
    cardSuffix?: string | undefined;
    cardholderName?: string | undefined;
    eci?: string | undefined;
};

/** @internal */
export const NetworkTokenPaymentMethodCreateMethod$inboundSchema: z.ZodNativeEnum<
    typeof NetworkTokenPaymentMethodCreateMethod
> = z.nativeEnum(NetworkTokenPaymentMethodCreateMethod);

/** @internal */
export const NetworkTokenPaymentMethodCreateMethod$outboundSchema: z.ZodNativeEnum<
    typeof NetworkTokenPaymentMethodCreateMethod
> = NetworkTokenPaymentMethodCreateMethod$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace NetworkTokenPaymentMethodCreateMethod$ {
    /** @deprecated use `NetworkTokenPaymentMethodCreateMethod$inboundSchema` instead. */
    export const inboundSchema = NetworkTokenPaymentMethodCreateMethod$inboundSchema;
    /** @deprecated use `NetworkTokenPaymentMethodCreateMethod$outboundSchema` instead. */
    export const outboundSchema = NetworkTokenPaymentMethodCreateMethod$outboundSchema;
}

/** @internal */
export const CardSource$inboundSchema: z.ZodNativeEnum<typeof CardSource> =
    z.nativeEnum(CardSource);

/** @internal */
export const CardSource$outboundSchema: z.ZodNativeEnum<typeof CardSource> =
    CardSource$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CardSource$ {
    /** @deprecated use `CardSource$inboundSchema` instead. */
    export const inboundSchema = CardSource$inboundSchema;
    /** @deprecated use `CardSource$outboundSchema` instead. */
    export const outboundSchema = CardSource$outboundSchema;
}

/** @internal */
export const NetworkTokenPaymentMethodCreate$inboundSchema: z.ZodType<
    NetworkTokenPaymentMethodCreate,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        method: NetworkTokenPaymentMethodCreateMethod$inboundSchema,
        token: z.string(),
        expiration_date: z.string(),
        cryptogram: z.string().optional(),
        redirect_url: z.string().optional(),
        card_source: CardSource$inboundSchema.optional(),
        card_scheme: CardScheme$inboundSchema.optional(),
        card_suffix: z.string().optional(),
        cardholder_name: z.string().optional(),
        eci: z.string().optional(),
    })
    .transform((v) => {
        return remap$(v, {
            expiration_date: "expirationDate",
            redirect_url: "redirectUrl",
            card_source: "cardSource",
            card_scheme: "cardScheme",
            card_suffix: "cardSuffix",
            cardholder_name: "cardholderName",
        });
    });

/** @internal */
export type NetworkTokenPaymentMethodCreate$Outbound = {
    method: string;
    token: string;
    expiration_date: string;
    cryptogram?: string | undefined;
    redirect_url?: string | undefined;
    card_source?: string | undefined;
    card_scheme?: string | undefined;
    card_suffix?: string | undefined;
    cardholder_name?: string | undefined;
    eci?: string | undefined;
};

/** @internal */
export const NetworkTokenPaymentMethodCreate$outboundSchema: z.ZodType<
    NetworkTokenPaymentMethodCreate$Outbound,
    z.ZodTypeDef,
    NetworkTokenPaymentMethodCreate
> = z
    .object({
        method: NetworkTokenPaymentMethodCreateMethod$outboundSchema,
        token: z.string(),
        expirationDate: z.string(),
        cryptogram: z.string().optional(),
        redirectUrl: z.string().optional(),
        cardSource: CardSource$outboundSchema.optional(),
        cardScheme: CardScheme$outboundSchema.optional(),
        cardSuffix: z.string().optional(),
        cardholderName: z.string().optional(),
        eci: z.string().optional(),
    })
    .transform((v) => {
        return remap$(v, {
            expirationDate: "expiration_date",
            redirectUrl: "redirect_url",
            cardSource: "card_source",
            cardScheme: "card_scheme",
            cardSuffix: "card_suffix",
            cardholderName: "cardholder_name",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace NetworkTokenPaymentMethodCreate$ {
    /** @deprecated use `NetworkTokenPaymentMethodCreate$inboundSchema` instead. */
    export const inboundSchema = NetworkTokenPaymentMethodCreate$inboundSchema;
    /** @deprecated use `NetworkTokenPaymentMethodCreate$outboundSchema` instead. */
    export const outboundSchema = NetworkTokenPaymentMethodCreate$outboundSchema;
    /** @deprecated use `NetworkTokenPaymentMethodCreate$Outbound` instead. */
    export type Outbound = NetworkTokenPaymentMethodCreate$Outbound;
}

/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as z from "zod";

/**
 * A network token cryptogram.
 */
export type Cryptogram = {
    /**
     * The cryptogram of the network token.
     */
    cryptogram?: string | undefined;
};

/** @internal */
export namespace Cryptogram$ {
    export type Inbound = {
        cryptogram?: string | undefined;
    };

    export const inboundSchema: z.ZodType<Cryptogram, z.ZodTypeDef, Inbound> = z
        .object({
            cryptogram: z.string().optional(),
        })
        .transform((v) => {
            return {
                ...(v.cryptogram === undefined ? null : { cryptogram: v.cryptogram }),
            };
        });

    export type Outbound = {
        cryptogram?: string | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, Cryptogram> = z
        .object({
            cryptogram: z.string().optional(),
        })
        .transform((v) => {
            return {
                ...(v.cryptogram === undefined ? null : { cryptogram: v.cryptogram }),
            };
        });
}

/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as z from "zod";

/**
 * A network token cryptogram.
 */
export type Cryptogram = {
    /**
     * The cryptogram of the network token.
     */
    cryptogram?: string | undefined;
};

/** @internal */
export const Cryptogram$inboundSchema: z.ZodType<Cryptogram, z.ZodTypeDef, unknown> = z.object({
    cryptogram: z.string().optional(),
});

/** @internal */
export type Cryptogram$Outbound = {
    cryptogram?: string | undefined;
};

/** @internal */
export const Cryptogram$outboundSchema: z.ZodType<Cryptogram$Outbound, z.ZodTypeDef, Cryptogram> =
    z.object({
        cryptogram: z.string().optional(),
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Cryptogram$ {
    /** @deprecated use `Cryptogram$inboundSchema` instead. */
    export const inboundSchema = Cryptogram$inboundSchema;
    /** @deprecated use `Cryptogram$outboundSchema` instead. */
    export const outboundSchema = Cryptogram$outboundSchema;
    /** @deprecated use `Cryptogram$Outbound` instead. */
    export type Outbound = Cryptogram$Outbound;
}

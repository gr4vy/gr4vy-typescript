/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives.js";
import { ClosedEnum } from "../../types/enums.js";
import * as z from "zod";

/**
 * `gift-card-service-definition`.
 */
export const GiftCardServiceDefinitionType = {
    GiftCardServiceDefinition: "gift-card-service-definition",
} as const;
/**
 * `gift-card-service-definition`.
 */
export type GiftCardServiceDefinitionType = ClosedEnum<typeof GiftCardServiceDefinitionType>;

/**
 * Defines the type of input that needs to be rendered for this field.
 */
export const GiftCardServiceDefinitionFormat = {
    Text: "text",
    Multiline: "multiline",
    Number: "number",
} as const;
/**
 * Defines the type of input that needs to be rendered for this field.
 */
export type GiftCardServiceDefinitionFormat = ClosedEnum<typeof GiftCardServiceDefinitionFormat>;

/**
 * A single field that needs to be submitted for a payment service when it
 *
 * @remarks
 * is created.
 */
export type GiftCardServiceDefinitionFields = {
    /**
     * The key of a field that needs to be submitted.
     */
    key?: string | undefined;
    /**
     * The name to display for a field in the dashboard.
     */
    displayName?: string | undefined;
    /**
     * Defines if this field is required when the service is created.
     */
    required?: boolean | undefined;
    /**
     * Defines the type of input that needs to be rendered for this field.
     */
    format?: GiftCardServiceDefinitionFormat | undefined;
    /**
     * Defines if this field is secret. When `true` the field is not
     *
     * @remarks
     * returned when querying the payment service.
     */
    secret?: boolean | undefined;
};

/**
 * An available gift card service that can be configured.
 */
export type GiftCardServiceDefinition = {
    /**
     * The ID of the gift card service definition.
     */
    id?: string | undefined;
    /**
     * `gift-card-service-definition`.
     */
    type?: GiftCardServiceDefinitionType | undefined;
    /**
     * The display name of this service.
     */
    displayName?: string | undefined;
    /**
     * A list of fields that need to be submitted when activating the payment. service.
     */
    fields?: Array<GiftCardServiceDefinitionFields> | undefined;
    /**
     * An icon to display for the payment service.
     */
    iconUrl?: string | undefined;
};

/** @internal */
export const GiftCardServiceDefinitionType$inboundSchema: z.ZodNativeEnum<
    typeof GiftCardServiceDefinitionType
> = z.nativeEnum(GiftCardServiceDefinitionType);

/** @internal */
export const GiftCardServiceDefinitionType$outboundSchema: z.ZodNativeEnum<
    typeof GiftCardServiceDefinitionType
> = GiftCardServiceDefinitionType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GiftCardServiceDefinitionType$ {
    /** @deprecated use `GiftCardServiceDefinitionType$inboundSchema` instead. */
    export const inboundSchema = GiftCardServiceDefinitionType$inboundSchema;
    /** @deprecated use `GiftCardServiceDefinitionType$outboundSchema` instead. */
    export const outboundSchema = GiftCardServiceDefinitionType$outboundSchema;
}

/** @internal */
export const GiftCardServiceDefinitionFormat$inboundSchema: z.ZodNativeEnum<
    typeof GiftCardServiceDefinitionFormat
> = z.nativeEnum(GiftCardServiceDefinitionFormat);

/** @internal */
export const GiftCardServiceDefinitionFormat$outboundSchema: z.ZodNativeEnum<
    typeof GiftCardServiceDefinitionFormat
> = GiftCardServiceDefinitionFormat$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GiftCardServiceDefinitionFormat$ {
    /** @deprecated use `GiftCardServiceDefinitionFormat$inboundSchema` instead. */
    export const inboundSchema = GiftCardServiceDefinitionFormat$inboundSchema;
    /** @deprecated use `GiftCardServiceDefinitionFormat$outboundSchema` instead. */
    export const outboundSchema = GiftCardServiceDefinitionFormat$outboundSchema;
}

/** @internal */
export const GiftCardServiceDefinitionFields$inboundSchema: z.ZodType<
    GiftCardServiceDefinitionFields,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        key: z.string().optional(),
        display_name: z.string().optional(),
        required: z.boolean().optional(),
        format: GiftCardServiceDefinitionFormat$inboundSchema.optional(),
        secret: z.boolean().optional(),
    })
    .transform((v) => {
        return remap$(v, {
            display_name: "displayName",
        });
    });

/** @internal */
export type GiftCardServiceDefinitionFields$Outbound = {
    key?: string | undefined;
    display_name?: string | undefined;
    required?: boolean | undefined;
    format?: string | undefined;
    secret?: boolean | undefined;
};

/** @internal */
export const GiftCardServiceDefinitionFields$outboundSchema: z.ZodType<
    GiftCardServiceDefinitionFields$Outbound,
    z.ZodTypeDef,
    GiftCardServiceDefinitionFields
> = z
    .object({
        key: z.string().optional(),
        displayName: z.string().optional(),
        required: z.boolean().optional(),
        format: GiftCardServiceDefinitionFormat$outboundSchema.optional(),
        secret: z.boolean().optional(),
    })
    .transform((v) => {
        return remap$(v, {
            displayName: "display_name",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GiftCardServiceDefinitionFields$ {
    /** @deprecated use `GiftCardServiceDefinitionFields$inboundSchema` instead. */
    export const inboundSchema = GiftCardServiceDefinitionFields$inboundSchema;
    /** @deprecated use `GiftCardServiceDefinitionFields$outboundSchema` instead. */
    export const outboundSchema = GiftCardServiceDefinitionFields$outboundSchema;
    /** @deprecated use `GiftCardServiceDefinitionFields$Outbound` instead. */
    export type Outbound = GiftCardServiceDefinitionFields$Outbound;
}

/** @internal */
export const GiftCardServiceDefinition$inboundSchema: z.ZodType<
    GiftCardServiceDefinition,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        id: z.string().optional(),
        type: GiftCardServiceDefinitionType$inboundSchema.default("gift-card-service-definition"),
        display_name: z.string().optional(),
        fields: z.array(z.lazy(() => GiftCardServiceDefinitionFields$inboundSchema)).optional(),
        icon_url: z.string().optional(),
    })
    .transform((v) => {
        return remap$(v, {
            display_name: "displayName",
            icon_url: "iconUrl",
        });
    });

/** @internal */
export type GiftCardServiceDefinition$Outbound = {
    id?: string | undefined;
    type: string;
    display_name?: string | undefined;
    fields?: Array<GiftCardServiceDefinitionFields$Outbound> | undefined;
    icon_url?: string | undefined;
};

/** @internal */
export const GiftCardServiceDefinition$outboundSchema: z.ZodType<
    GiftCardServiceDefinition$Outbound,
    z.ZodTypeDef,
    GiftCardServiceDefinition
> = z
    .object({
        id: z.string().optional(),
        type: GiftCardServiceDefinitionType$outboundSchema.default("gift-card-service-definition"),
        displayName: z.string().optional(),
        fields: z.array(z.lazy(() => GiftCardServiceDefinitionFields$outboundSchema)).optional(),
        iconUrl: z.string().optional(),
    })
    .transform((v) => {
        return remap$(v, {
            displayName: "display_name",
            iconUrl: "icon_url",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GiftCardServiceDefinition$ {
    /** @deprecated use `GiftCardServiceDefinition$inboundSchema` instead. */
    export const inboundSchema = GiftCardServiceDefinition$inboundSchema;
    /** @deprecated use `GiftCardServiceDefinition$outboundSchema` instead. */
    export const outboundSchema = GiftCardServiceDefinition$outboundSchema;
    /** @deprecated use `GiftCardServiceDefinition$Outbound` instead. */
    export type Outbound = GiftCardServiceDefinition$Outbound;
}

/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives.js";
import * as z from "zod";

/**
 * Base model with JSON encoders.
 */
export type DigitalWalletDomain = {
    domainName: string;
};

/** @internal */
export const DigitalWalletDomain$inboundSchema: z.ZodType<
    DigitalWalletDomain,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        domain_name: z.string(),
    })
    .transform((v) => {
        return remap$(v, {
            domain_name: "domainName",
        });
    });

/** @internal */
export type DigitalWalletDomain$Outbound = {
    domain_name: string;
};

/** @internal */
export const DigitalWalletDomain$outboundSchema: z.ZodType<
    DigitalWalletDomain$Outbound,
    z.ZodTypeDef,
    DigitalWalletDomain
> = z
    .object({
        domainName: z.string(),
    })
    .transform((v) => {
        return remap$(v, {
            domainName: "domain_name",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DigitalWalletDomain$ {
    /** @deprecated use `DigitalWalletDomain$inboundSchema` instead. */
    export const inboundSchema = DigitalWalletDomain$inboundSchema;
    /** @deprecated use `DigitalWalletDomain$outboundSchema` instead. */
    export const outboundSchema = DigitalWalletDomain$outboundSchema;
    /** @deprecated use `DigitalWalletDomain$Outbound` instead. */
    export type Outbound = DigitalWalletDomain$Outbound;
}

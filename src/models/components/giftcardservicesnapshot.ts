/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives.js";
import { ClosedEnum } from "../../types/enums.js";
import * as z from "zod";

/**
 * The type of this resource.
 */
export const GiftCardServiceSnapshotType = {
    GiftCardService: "gift-card-service",
} as const;
/**
 * The type of this resource.
 */
export type GiftCardServiceSnapshotType = ClosedEnum<typeof GiftCardServiceSnapshotType>;

/**
 * A snapshot of a gift card service used in a transaction.
 */
export type GiftCardServiceSnapshot = {
    /**
     * The type of this resource.
     */
    type?: GiftCardServiceSnapshotType | undefined;
    /**
     * The ID of this gift card service.
     */
    id?: string | undefined;
    /**
     * The ID of the gift card service definition used to create this service.
     *
     * @remarks
     *
     */
    giftCardServiceDefinitionId?: string | undefined;
    /**
     * The custom name set for this service.
     */
    displayName?: string | undefined;
};

/** @internal */
export const GiftCardServiceSnapshotType$inboundSchema: z.ZodNativeEnum<
    typeof GiftCardServiceSnapshotType
> = z.nativeEnum(GiftCardServiceSnapshotType);

/** @internal */
export const GiftCardServiceSnapshotType$outboundSchema: z.ZodNativeEnum<
    typeof GiftCardServiceSnapshotType
> = GiftCardServiceSnapshotType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GiftCardServiceSnapshotType$ {
    /** @deprecated use `GiftCardServiceSnapshotType$inboundSchema` instead. */
    export const inboundSchema = GiftCardServiceSnapshotType$inboundSchema;
    /** @deprecated use `GiftCardServiceSnapshotType$outboundSchema` instead. */
    export const outboundSchema = GiftCardServiceSnapshotType$outboundSchema;
}

/** @internal */
export const GiftCardServiceSnapshot$inboundSchema: z.ZodType<
    GiftCardServiceSnapshot,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        type: GiftCardServiceSnapshotType$inboundSchema.optional(),
        id: z.string().optional(),
        gift_card_service_definition_id: z.string().optional(),
        display_name: z.string().optional(),
    })
    .transform((v) => {
        return remap$(v, {
            gift_card_service_definition_id: "giftCardServiceDefinitionId",
            display_name: "displayName",
        });
    });

/** @internal */
export type GiftCardServiceSnapshot$Outbound = {
    type?: string | undefined;
    id?: string | undefined;
    gift_card_service_definition_id?: string | undefined;
    display_name?: string | undefined;
};

/** @internal */
export const GiftCardServiceSnapshot$outboundSchema: z.ZodType<
    GiftCardServiceSnapshot$Outbound,
    z.ZodTypeDef,
    GiftCardServiceSnapshot
> = z
    .object({
        type: GiftCardServiceSnapshotType$outboundSchema.optional(),
        id: z.string().optional(),
        giftCardServiceDefinitionId: z.string().optional(),
        displayName: z.string().optional(),
    })
    .transform((v) => {
        return remap$(v, {
            giftCardServiceDefinitionId: "gift_card_service_definition_id",
            displayName: "display_name",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GiftCardServiceSnapshot$ {
    /** @deprecated use `GiftCardServiceSnapshot$inboundSchema` instead. */
    export const inboundSchema = GiftCardServiceSnapshot$inboundSchema;
    /** @deprecated use `GiftCardServiceSnapshot$outboundSchema` instead. */
    export const outboundSchema = GiftCardServiceSnapshot$outboundSchema;
    /** @deprecated use `GiftCardServiceSnapshot$Outbound` instead. */
    export type Outbound = GiftCardServiceSnapshot$Outbound;
}

/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { ClosedEnum } from "../../types/enums.js";
import * as z from "zod";

/**
 * The type of match made for this rule.
 */
export const FlowAmountRangeConditionName = {
    Amount: "amount",
} as const;
/**
 * The type of match made for this rule.
 */
export type FlowAmountRangeConditionName = ClosedEnum<typeof FlowAmountRangeConditionName>;

/**
 * The comparison to make on the currency code `value`.
 */
export const FlowAmountRangeConditionOperator = {
    IsBetween: "is_between",
} as const;
/**
 * The comparison to make on the currency code `value`.
 */
export type FlowAmountRangeConditionOperator = ClosedEnum<typeof FlowAmountRangeConditionOperator>;

/**
 * Amount value compare the transaction to.
 */
export type FlowAmountRangeConditionValue = {
    /**
     * Currency ISO codes to compare the transaction to.
     */
    currency?: string | undefined;
    /**
     * Minimum value to compare transaction value to.
     */
    min?: number | undefined;
    /**
     * Maximum value to compare transaction value to.
     */
    max?: number | undefined;
};

/**
 * Amount range conditions with a name, operator, and value.
 */
export type FlowAmountRangeCondition = {
    /**
     * The type of match made for this rule.
     */
    name: FlowAmountRangeConditionName;
    /**
     * The comparison to make on the currency code `value`.
     */
    operator: FlowAmountRangeConditionOperator;
    /**
     * Amount value compare the transaction to.
     */
    value: FlowAmountRangeConditionValue;
};

/** @internal */
export const FlowAmountRangeConditionName$inboundSchema: z.ZodNativeEnum<
    typeof FlowAmountRangeConditionName
> = z.nativeEnum(FlowAmountRangeConditionName);

/** @internal */
export const FlowAmountRangeConditionName$outboundSchema: z.ZodNativeEnum<
    typeof FlowAmountRangeConditionName
> = FlowAmountRangeConditionName$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FlowAmountRangeConditionName$ {
    /** @deprecated use `FlowAmountRangeConditionName$inboundSchema` instead. */
    export const inboundSchema = FlowAmountRangeConditionName$inboundSchema;
    /** @deprecated use `FlowAmountRangeConditionName$outboundSchema` instead. */
    export const outboundSchema = FlowAmountRangeConditionName$outboundSchema;
}

/** @internal */
export const FlowAmountRangeConditionOperator$inboundSchema: z.ZodNativeEnum<
    typeof FlowAmountRangeConditionOperator
> = z.nativeEnum(FlowAmountRangeConditionOperator);

/** @internal */
export const FlowAmountRangeConditionOperator$outboundSchema: z.ZodNativeEnum<
    typeof FlowAmountRangeConditionOperator
> = FlowAmountRangeConditionOperator$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FlowAmountRangeConditionOperator$ {
    /** @deprecated use `FlowAmountRangeConditionOperator$inboundSchema` instead. */
    export const inboundSchema = FlowAmountRangeConditionOperator$inboundSchema;
    /** @deprecated use `FlowAmountRangeConditionOperator$outboundSchema` instead. */
    export const outboundSchema = FlowAmountRangeConditionOperator$outboundSchema;
}

/** @internal */
export const FlowAmountRangeConditionValue$inboundSchema: z.ZodType<
    FlowAmountRangeConditionValue,
    z.ZodTypeDef,
    unknown
> = z.object({
    currency: z.string().optional(),
    min: z.number().optional(),
    max: z.number().optional(),
});

/** @internal */
export type FlowAmountRangeConditionValue$Outbound = {
    currency?: string | undefined;
    min?: number | undefined;
    max?: number | undefined;
};

/** @internal */
export const FlowAmountRangeConditionValue$outboundSchema: z.ZodType<
    FlowAmountRangeConditionValue$Outbound,
    z.ZodTypeDef,
    FlowAmountRangeConditionValue
> = z.object({
    currency: z.string().optional(),
    min: z.number().optional(),
    max: z.number().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FlowAmountRangeConditionValue$ {
    /** @deprecated use `FlowAmountRangeConditionValue$inboundSchema` instead. */
    export const inboundSchema = FlowAmountRangeConditionValue$inboundSchema;
    /** @deprecated use `FlowAmountRangeConditionValue$outboundSchema` instead. */
    export const outboundSchema = FlowAmountRangeConditionValue$outboundSchema;
    /** @deprecated use `FlowAmountRangeConditionValue$Outbound` instead. */
    export type Outbound = FlowAmountRangeConditionValue$Outbound;
}

/** @internal */
export const FlowAmountRangeCondition$inboundSchema: z.ZodType<
    FlowAmountRangeCondition,
    z.ZodTypeDef,
    unknown
> = z.object({
    name: FlowAmountRangeConditionName$inboundSchema,
    operator: FlowAmountRangeConditionOperator$inboundSchema,
    value: z.lazy(() => FlowAmountRangeConditionValue$inboundSchema),
});

/** @internal */
export type FlowAmountRangeCondition$Outbound = {
    name: string;
    operator: string;
    value: FlowAmountRangeConditionValue$Outbound;
};

/** @internal */
export const FlowAmountRangeCondition$outboundSchema: z.ZodType<
    FlowAmountRangeCondition$Outbound,
    z.ZodTypeDef,
    FlowAmountRangeCondition
> = z.object({
    name: FlowAmountRangeConditionName$outboundSchema,
    operator: FlowAmountRangeConditionOperator$outboundSchema,
    value: z.lazy(() => FlowAmountRangeConditionValue$outboundSchema),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FlowAmountRangeCondition$ {
    /** @deprecated use `FlowAmountRangeCondition$inboundSchema` instead. */
    export const inboundSchema = FlowAmountRangeCondition$inboundSchema;
    /** @deprecated use `FlowAmountRangeCondition$outboundSchema` instead. */
    export const outboundSchema = FlowAmountRangeCondition$outboundSchema;
    /** @deprecated use `FlowAmountRangeCondition$Outbound` instead. */
    export type Outbound = FlowAmountRangeCondition$Outbound;
}

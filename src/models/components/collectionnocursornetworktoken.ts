/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  NetworkToken,
  NetworkToken$inboundSchema,
  NetworkToken$Outbound,
  NetworkToken$outboundSchema,
} from "./networktoken.js";

export type CollectionNoCursorNetworkToken = {
  /**
   * A list of items returned for this request.
   */
  items: Array<NetworkToken>;
};

/** @internal */
export const CollectionNoCursorNetworkToken$inboundSchema: z.ZodType<
  CollectionNoCursorNetworkToken,
  z.ZodTypeDef,
  unknown
> = z.object({
  items: z.array(NetworkToken$inboundSchema),
});

/** @internal */
export type CollectionNoCursorNetworkToken$Outbound = {
  items: Array<NetworkToken$Outbound>;
};

/** @internal */
export const CollectionNoCursorNetworkToken$outboundSchema: z.ZodType<
  CollectionNoCursorNetworkToken$Outbound,
  z.ZodTypeDef,
  CollectionNoCursorNetworkToken
> = z.object({
  items: z.array(NetworkToken$outboundSchema),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CollectionNoCursorNetworkToken$ {
  /** @deprecated use `CollectionNoCursorNetworkToken$inboundSchema` instead. */
  export const inboundSchema = CollectionNoCursorNetworkToken$inboundSchema;
  /** @deprecated use `CollectionNoCursorNetworkToken$outboundSchema` instead. */
  export const outboundSchema = CollectionNoCursorNetworkToken$outboundSchema;
  /** @deprecated use `CollectionNoCursorNetworkToken$Outbound` instead. */
  export type Outbound = CollectionNoCursorNetworkToken$Outbound;
}

export function collectionNoCursorNetworkTokenToJSON(
  collectionNoCursorNetworkToken: CollectionNoCursorNetworkToken,
): string {
  return JSON.stringify(
    CollectionNoCursorNetworkToken$outboundSchema.parse(
      collectionNoCursorNetworkToken,
    ),
  );
}

export function collectionNoCursorNetworkTokenFromJSON(
  jsonString: string,
): SafeParseResult<CollectionNoCursorNetworkToken, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => CollectionNoCursorNetworkToken$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CollectionNoCursorNetworkToken' from JSON`,
  );
}

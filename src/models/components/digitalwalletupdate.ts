/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as z from "zod";

/**
 * Request body to update a registered digital wallet's details.
 */
export type DigitalWalletUpdate = {
    /**
     * The name of the merchant. This is used to update the value initially
     *
     * @remarks
     * used to register with a digital wallet provider and this name is not
     * displayed to the buyer.
     */
    merchantName?: string | undefined;
    /**
     * The list of domain names that a digital wallet can be used on. To use a
     *
     * @remarks
     * digital wallet on a website, the domain of the site is required to be
     * in this list.
     */
    domainNames?: Array<string> | undefined;
    /**
     * The consumer facing name of the merchant.
     */
    merchantDisplayName?: string | null | undefined;
    /**
     * The country code where the merchant is registered.
     */
    merchantCountryCode?: string | null | undefined;
    /**
     * The main URL of the merchant.
     */
    merchantUrl?: string | undefined;
};

/** @internal */
export namespace DigitalWalletUpdate$ {
    export type Inbound = {
        merchant_name?: string | undefined;
        domain_names?: Array<string> | undefined;
        merchant_display_name?: string | null | undefined;
        merchant_country_code?: string | null | undefined;
        merchant_url?: string | undefined;
    };

    export const inboundSchema: z.ZodType<DigitalWalletUpdate, z.ZodTypeDef, Inbound> = z
        .object({
            merchant_name: z.string().optional(),
            domain_names: z.array(z.string()).optional(),
            merchant_display_name: z.nullable(z.string()).optional(),
            merchant_country_code: z.nullable(z.string()).optional(),
            merchant_url: z.string().optional(),
        })
        .transform((v) => {
            return {
                ...(v.merchant_name === undefined ? null : { merchantName: v.merchant_name }),
                ...(v.domain_names === undefined ? null : { domainNames: v.domain_names }),
                ...(v.merchant_display_name === undefined
                    ? null
                    : { merchantDisplayName: v.merchant_display_name }),
                ...(v.merchant_country_code === undefined
                    ? null
                    : { merchantCountryCode: v.merchant_country_code }),
                ...(v.merchant_url === undefined ? null : { merchantUrl: v.merchant_url }),
            };
        });

    export type Outbound = {
        merchant_name?: string | undefined;
        domain_names?: Array<string> | undefined;
        merchant_display_name?: string | null | undefined;
        merchant_country_code?: string | null | undefined;
        merchant_url?: string | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, DigitalWalletUpdate> = z
        .object({
            merchantName: z.string().optional(),
            domainNames: z.array(z.string()).optional(),
            merchantDisplayName: z.nullable(z.string()).optional(),
            merchantCountryCode: z.nullable(z.string()).optional(),
            merchantUrl: z.string().optional(),
        })
        .transform((v) => {
            return {
                ...(v.merchantName === undefined ? null : { merchant_name: v.merchantName }),
                ...(v.domainNames === undefined ? null : { domain_names: v.domainNames }),
                ...(v.merchantDisplayName === undefined
                    ? null
                    : { merchant_display_name: v.merchantDisplayName }),
                ...(v.merchantCountryCode === undefined
                    ? null
                    : { merchant_country_code: v.merchantCountryCode }),
                ...(v.merchantUrl === undefined ? null : { merchant_url: v.merchantUrl }),
            };
        });
}

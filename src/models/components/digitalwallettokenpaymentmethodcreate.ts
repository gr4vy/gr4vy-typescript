/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives.js";
import { ClosedEnum } from "../../types/enums.js";
import * as z from "zod";

export const DigitalWalletTokenPaymentMethodCreateMethod = {
    ClickToPay: "click-to-pay",
} as const;
export type DigitalWalletTokenPaymentMethodCreateMethod = ClosedEnum<
    typeof DigitalWalletTokenPaymentMethodCreateMethod
>;

/**
 * Base model with JSON encoders.
 */
export type DigitalWalletTokenPaymentMethodCreate = {
    method: DigitalWalletTokenPaymentMethodCreateMethod;
    token: string;
    cryptogram: string;
    buyerExternalIdentifier?: string | undefined;
    buyerId?: string | undefined;
    externalIdentifier?: string | undefined;
    expirationDate: string;
    redirectUrl?: string | undefined;
};

/** @internal */
export const DigitalWalletTokenPaymentMethodCreateMethod$inboundSchema: z.ZodNativeEnum<
    typeof DigitalWalletTokenPaymentMethodCreateMethod
> = z.nativeEnum(DigitalWalletTokenPaymentMethodCreateMethod);

/** @internal */
export const DigitalWalletTokenPaymentMethodCreateMethod$outboundSchema: z.ZodNativeEnum<
    typeof DigitalWalletTokenPaymentMethodCreateMethod
> = DigitalWalletTokenPaymentMethodCreateMethod$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DigitalWalletTokenPaymentMethodCreateMethod$ {
    /** @deprecated use `DigitalWalletTokenPaymentMethodCreateMethod$inboundSchema` instead. */
    export const inboundSchema = DigitalWalletTokenPaymentMethodCreateMethod$inboundSchema;
    /** @deprecated use `DigitalWalletTokenPaymentMethodCreateMethod$outboundSchema` instead. */
    export const outboundSchema = DigitalWalletTokenPaymentMethodCreateMethod$outboundSchema;
}

/** @internal */
export const DigitalWalletTokenPaymentMethodCreate$inboundSchema: z.ZodType<
    DigitalWalletTokenPaymentMethodCreate,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        method: DigitalWalletTokenPaymentMethodCreateMethod$inboundSchema,
        token: z.string(),
        cryptogram: z.string(),
        buyer_external_identifier: z.string().optional(),
        buyer_id: z.string().optional(),
        external_identifier: z.string().optional(),
        expiration_date: z.string(),
        redirect_url: z.string().optional(),
    })
    .transform((v) => {
        return remap$(v, {
            buyer_external_identifier: "buyerExternalIdentifier",
            buyer_id: "buyerId",
            external_identifier: "externalIdentifier",
            expiration_date: "expirationDate",
            redirect_url: "redirectUrl",
        });
    });

/** @internal */
export type DigitalWalletTokenPaymentMethodCreate$Outbound = {
    method: string;
    token: string;
    cryptogram: string;
    buyer_external_identifier?: string | undefined;
    buyer_id?: string | undefined;
    external_identifier?: string | undefined;
    expiration_date: string;
    redirect_url?: string | undefined;
};

/** @internal */
export const DigitalWalletTokenPaymentMethodCreate$outboundSchema: z.ZodType<
    DigitalWalletTokenPaymentMethodCreate$Outbound,
    z.ZodTypeDef,
    DigitalWalletTokenPaymentMethodCreate
> = z
    .object({
        method: DigitalWalletTokenPaymentMethodCreateMethod$outboundSchema,
        token: z.string(),
        cryptogram: z.string(),
        buyerExternalIdentifier: z.string().optional(),
        buyerId: z.string().optional(),
        externalIdentifier: z.string().optional(),
        expirationDate: z.string(),
        redirectUrl: z.string().optional(),
    })
    .transform((v) => {
        return remap$(v, {
            buyerExternalIdentifier: "buyer_external_identifier",
            buyerId: "buyer_id",
            externalIdentifier: "external_identifier",
            expirationDate: "expiration_date",
            redirectUrl: "redirect_url",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DigitalWalletTokenPaymentMethodCreate$ {
    /** @deprecated use `DigitalWalletTokenPaymentMethodCreate$inboundSchema` instead. */
    export const inboundSchema = DigitalWalletTokenPaymentMethodCreate$inboundSchema;
    /** @deprecated use `DigitalWalletTokenPaymentMethodCreate$outboundSchema` instead. */
    export const outboundSchema = DigitalWalletTokenPaymentMethodCreate$outboundSchema;
    /** @deprecated use `DigitalWalletTokenPaymentMethodCreate$Outbound` instead. */
    export type Outbound = DigitalWalletTokenPaymentMethodCreate$Outbound;
}

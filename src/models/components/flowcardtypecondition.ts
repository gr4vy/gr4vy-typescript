/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { ClosedEnum } from "../../types/enums.js";
import * as z from "zod";

/**
 * The type of match made for this rule.
 */
export const FlowCardTypeConditionName = {
    CardType: "card_type",
} as const;
/**
 * The type of match made for this rule.
 */
export type FlowCardTypeConditionName = ClosedEnum<typeof FlowCardTypeConditionName>;

/**
 * The comparison to make on the `value`.
 */
export const FlowCardTypeConditionOperator = {
    IsOneOf: "is_one_of",
    IsNotOneOf: "is_not_one_of",
} as const;
/**
 * The comparison to make on the `value`.
 */
export type FlowCardTypeConditionOperator = ClosedEnum<typeof FlowCardTypeConditionOperator>;

export const FlowCardTypeConditionValue = {
    Credit: "credit",
    Debit: "debit",
    Prepaid: "prepaid",
} as const;
export type FlowCardTypeConditionValue = ClosedEnum<typeof FlowCardTypeConditionValue>;

/**
 * Card type condition with a name, operator, and value.
 */
export type FlowCardTypeCondition = {
    /**
     * The type of match made for this rule.
     */
    name: FlowCardTypeConditionName;
    /**
     * The comparison to make on the `value`.
     */
    operator: FlowCardTypeConditionOperator;
    /**
     * Card type to compare the transaction to.
     */
    value: Array<FlowCardTypeConditionValue>;
};

/** @internal */
export const FlowCardTypeConditionName$inboundSchema: z.ZodNativeEnum<
    typeof FlowCardTypeConditionName
> = z.nativeEnum(FlowCardTypeConditionName);

/** @internal */
export const FlowCardTypeConditionName$outboundSchema: z.ZodNativeEnum<
    typeof FlowCardTypeConditionName
> = FlowCardTypeConditionName$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FlowCardTypeConditionName$ {
    /** @deprecated use `FlowCardTypeConditionName$inboundSchema` instead. */
    export const inboundSchema = FlowCardTypeConditionName$inboundSchema;
    /** @deprecated use `FlowCardTypeConditionName$outboundSchema` instead. */
    export const outboundSchema = FlowCardTypeConditionName$outboundSchema;
}

/** @internal */
export const FlowCardTypeConditionOperator$inboundSchema: z.ZodNativeEnum<
    typeof FlowCardTypeConditionOperator
> = z.nativeEnum(FlowCardTypeConditionOperator);

/** @internal */
export const FlowCardTypeConditionOperator$outboundSchema: z.ZodNativeEnum<
    typeof FlowCardTypeConditionOperator
> = FlowCardTypeConditionOperator$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FlowCardTypeConditionOperator$ {
    /** @deprecated use `FlowCardTypeConditionOperator$inboundSchema` instead. */
    export const inboundSchema = FlowCardTypeConditionOperator$inboundSchema;
    /** @deprecated use `FlowCardTypeConditionOperator$outboundSchema` instead. */
    export const outboundSchema = FlowCardTypeConditionOperator$outboundSchema;
}

/** @internal */
export const FlowCardTypeConditionValue$inboundSchema: z.ZodNativeEnum<
    typeof FlowCardTypeConditionValue
> = z.nativeEnum(FlowCardTypeConditionValue);

/** @internal */
export const FlowCardTypeConditionValue$outboundSchema: z.ZodNativeEnum<
    typeof FlowCardTypeConditionValue
> = FlowCardTypeConditionValue$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FlowCardTypeConditionValue$ {
    /** @deprecated use `FlowCardTypeConditionValue$inboundSchema` instead. */
    export const inboundSchema = FlowCardTypeConditionValue$inboundSchema;
    /** @deprecated use `FlowCardTypeConditionValue$outboundSchema` instead. */
    export const outboundSchema = FlowCardTypeConditionValue$outboundSchema;
}

/** @internal */
export const FlowCardTypeCondition$inboundSchema: z.ZodType<
    FlowCardTypeCondition,
    z.ZodTypeDef,
    unknown
> = z.object({
    name: FlowCardTypeConditionName$inboundSchema,
    operator: FlowCardTypeConditionOperator$inboundSchema,
    value: z.array(FlowCardTypeConditionValue$inboundSchema),
});

/** @internal */
export type FlowCardTypeCondition$Outbound = {
    name: string;
    operator: string;
    value: Array<string>;
};

/** @internal */
export const FlowCardTypeCondition$outboundSchema: z.ZodType<
    FlowCardTypeCondition$Outbound,
    z.ZodTypeDef,
    FlowCardTypeCondition
> = z.object({
    name: FlowCardTypeConditionName$outboundSchema,
    operator: FlowCardTypeConditionOperator$outboundSchema,
    value: z.array(FlowCardTypeConditionValue$outboundSchema),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FlowCardTypeCondition$ {
    /** @deprecated use `FlowCardTypeCondition$inboundSchema` instead. */
    export const inboundSchema = FlowCardTypeCondition$inboundSchema;
    /** @deprecated use `FlowCardTypeCondition$outboundSchema` instead. */
    export const outboundSchema = FlowCardTypeCondition$outboundSchema;
    /** @deprecated use `FlowCardTypeCondition$Outbound` instead. */
    export type Outbound = FlowCardTypeCondition$Outbound;
}

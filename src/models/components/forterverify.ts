/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives.js";
import { ClosedEnum } from "../../types/enums.js";
import {
    ApiRoutersAntiFraudServicesSchemasField,
    ApiRoutersAntiFraudServicesSchemasField$inboundSchema,
    ApiRoutersAntiFraudServicesSchemasField$Outbound,
    ApiRoutersAntiFraudServicesSchemasField$outboundSchema,
} from "./apiroutersantifraudservicesschemasfield.js";
import * as z from "zod";

export const ForterVerifyAntiFraudServiceDefinitionId = {
    ForterAntiFraud: "forter-anti-fraud",
} as const;
export type ForterVerifyAntiFraudServiceDefinitionId = ClosedEnum<
    typeof ForterVerifyAntiFraudServiceDefinitionId
>;

/**
 * Base model with JSON encoders.
 */
export type ForterVerify = {
    fields?: Array<ApiRoutersAntiFraudServicesSchemasField> | undefined;
    antiFraudServiceDefinitionId?: ForterVerifyAntiFraudServiceDefinitionId | undefined;
    antiFraudServiceId?: string | undefined;
};

/** @internal */
export const ForterVerifyAntiFraudServiceDefinitionId$inboundSchema: z.ZodNativeEnum<
    typeof ForterVerifyAntiFraudServiceDefinitionId
> = z.nativeEnum(ForterVerifyAntiFraudServiceDefinitionId);

/** @internal */
export const ForterVerifyAntiFraudServiceDefinitionId$outboundSchema: z.ZodNativeEnum<
    typeof ForterVerifyAntiFraudServiceDefinitionId
> = ForterVerifyAntiFraudServiceDefinitionId$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ForterVerifyAntiFraudServiceDefinitionId$ {
    /** @deprecated use `ForterVerifyAntiFraudServiceDefinitionId$inboundSchema` instead. */
    export const inboundSchema = ForterVerifyAntiFraudServiceDefinitionId$inboundSchema;
    /** @deprecated use `ForterVerifyAntiFraudServiceDefinitionId$outboundSchema` instead. */
    export const outboundSchema = ForterVerifyAntiFraudServiceDefinitionId$outboundSchema;
}

/** @internal */
export const ForterVerify$inboundSchema: z.ZodType<ForterVerify, z.ZodTypeDef, unknown> = z
    .object({
        fields: z.array(ApiRoutersAntiFraudServicesSchemasField$inboundSchema).optional(),
        anti_fraud_service_definition_id:
            ForterVerifyAntiFraudServiceDefinitionId$inboundSchema.default("forter-anti-fraud"),
        anti_fraud_service_id: z.string().optional(),
    })
    .transform((v) => {
        return remap$(v, {
            anti_fraud_service_definition_id: "antiFraudServiceDefinitionId",
            anti_fraud_service_id: "antiFraudServiceId",
        });
    });

/** @internal */
export type ForterVerify$Outbound = {
    fields?: Array<ApiRoutersAntiFraudServicesSchemasField$Outbound> | undefined;
    anti_fraud_service_definition_id: string;
    anti_fraud_service_id?: string | undefined;
};

/** @internal */
export const ForterVerify$outboundSchema: z.ZodType<
    ForterVerify$Outbound,
    z.ZodTypeDef,
    ForterVerify
> = z
    .object({
        fields: z.array(ApiRoutersAntiFraudServicesSchemasField$outboundSchema).optional(),
        antiFraudServiceDefinitionId:
            ForterVerifyAntiFraudServiceDefinitionId$outboundSchema.default("forter-anti-fraud"),
        antiFraudServiceId: z.string().optional(),
    })
    .transform((v) => {
        return remap$(v, {
            antiFraudServiceDefinitionId: "anti_fraud_service_definition_id",
            antiFraudServiceId: "anti_fraud_service_id",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ForterVerify$ {
    /** @deprecated use `ForterVerify$inboundSchema` instead. */
    export const inboundSchema = ForterVerify$inboundSchema;
    /** @deprecated use `ForterVerify$outboundSchema` instead. */
    export const outboundSchema = ForterVerify$outboundSchema;
    /** @deprecated use `ForterVerify$Outbound` instead. */
    export type Outbound = ForterVerify$Outbound;
}

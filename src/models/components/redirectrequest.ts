/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives";
import * as z from "zod";

/**
 * The method to use, this can be any of the methods that
 *
 * @remarks
 * support redirect requests.
 *
 * When storing a new payment method, only `gocardless` and `stripedd`
 * are currently supported.
 */
export enum RedirectRequestMethod {
    Paypal = "paypal",
    Banked = "banked",
    Bitpay = "bitpay",
    Gocardless = "gocardless",
    Stripedd = "stripedd",
}

/**
 * Details to register a new redirect payment method.
 */
export type RedirectRequest = {
    /**
     * The method to use, this can be any of the methods that
     *
     * @remarks
     * support redirect requests.
     *
     * When storing a new payment method, only `gocardless` and `stripedd`
     * are currently supported.
     */
    method: RedirectRequestMethod;
    /**
     * The redirect URL to redirect a buyer to after they have authorized their
     *
     * @remarks
     * transaction.
     */
    redirectUrl: string;
    /**
     * The ISO-4217 currency code to use this payment method for. This is
     *
     * @remarks
     * used to select the payment service to use.
     */
    currency: string;
    /**
     * The 2-letter ISO code of the country to use this payment method for.
     *
     * @remarks
     * This is used to select the payment service to use.
     */
    country: string;
    /**
     * An external identifier that can be used to match the account against your own records.
     */
    externalIdentifier?: string | null | undefined;
    /**
     * The ID of the buyer to associate this payment method to. If this field is
     *
     * @remarks
     * provided then the `buyer_external_identifier` field needs to be unset.
     */
    buyerId?: string | undefined;
    /**
     * The `external_identifier` of the buyer to associate this payment method
     *
     * @remarks
     * to. If this field is provided then the `buyer_id` field
     * needs to be unset.
     */
    buyerExternalIdentifier?: string | undefined;
};

/** @internal */
export namespace RedirectRequestMethod$ {
    export const inboundSchema = z.nativeEnum(RedirectRequestMethod);
    export const outboundSchema = inboundSchema;
}

/** @internal */
export namespace RedirectRequest$ {
    export const inboundSchema: z.ZodType<RedirectRequest, z.ZodTypeDef, unknown> = z
        .object({
            method: RedirectRequestMethod$.inboundSchema,
            redirect_url: z.string(),
            currency: z.string(),
            country: z.string(),
            external_identifier: z.nullable(z.string()).optional(),
            buyer_id: z.string().optional(),
            buyer_external_identifier: z.string().optional(),
        })
        .transform((v) => {
            return remap$(v, {
                redirect_url: "redirectUrl",
                external_identifier: "externalIdentifier",
                buyer_id: "buyerId",
                buyer_external_identifier: "buyerExternalIdentifier",
            });
        });

    export type Outbound = {
        method: string;
        redirect_url: string;
        currency: string;
        country: string;
        external_identifier?: string | null | undefined;
        buyer_id?: string | undefined;
        buyer_external_identifier?: string | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, RedirectRequest> = z
        .object({
            method: RedirectRequestMethod$.outboundSchema,
            redirectUrl: z.string(),
            currency: z.string(),
            country: z.string(),
            externalIdentifier: z.nullable(z.string()).optional(),
            buyerId: z.string().optional(),
            buyerExternalIdentifier: z.string().optional(),
        })
        .transform((v) => {
            return remap$(v, {
                redirectUrl: "redirect_url",
                externalIdentifier: "external_identifier",
                buyerId: "buyer_id",
                buyerExternalIdentifier: "buyer_external_identifier",
            });
        });
}

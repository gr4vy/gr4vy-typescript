/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives.js";
import { ClosedEnum } from "../../types/enums.js";
import * as z from "zod";

/**
 * `anti-fraud-service-definition`.
 */
export const AntiFraudServiceDefinitionType = {
    AntiFraudServiceDefinition: "anti-fraud-service-definition",
} as const;
/**
 * `anti-fraud-service-definition`.
 */
export type AntiFraudServiceDefinitionType = ClosedEnum<typeof AntiFraudServiceDefinitionType>;

/**
 * Defines the type of input that needs to be rendered for this field.
 */
export const AntiFraudServiceDefinitionFormat = {
    Text: "text",
    Multiline: "multiline",
    Number: "number",
} as const;
/**
 * Defines the type of input that needs to be rendered for this field.
 */
export type AntiFraudServiceDefinitionFormat = ClosedEnum<typeof AntiFraudServiceDefinitionFormat>;

/**
 * A single field that needs to be submitted for a payment service when it
 *
 * @remarks
 * is created.
 */
export type AntiFraudServiceDefinitionFields = {
    /**
     * The key of a field that needs to be submitted.
     */
    key?: string | undefined;
    /**
     * The name to display for a field in the dashboard.
     */
    displayName?: string | undefined;
    /**
     * Defines if this field is required when the service is created.
     */
    required?: boolean | undefined;
    /**
     * Defines the type of input that needs to be rendered for this field.
     */
    format?: AntiFraudServiceDefinitionFormat | undefined;
    /**
     * Defines if this field is secret. When `true` the field is not
     *
     * @remarks
     * returned when querying the payment service.
     */
    secret?: boolean | undefined;
};

/**
 * An available anti fraud service that can be configured.
 */
export type AntiFraudServiceDefinition = {
    /**
     * The ID of the anti fraud service definition.
     */
    id?: string | undefined;
    /**
     * `anti-fraud-service-definition`.
     */
    type?: AntiFraudServiceDefinitionType | undefined;
    /**
     * The display name of this service.
     */
    displayName?: string | undefined;
    /**
     * A list of fields that need to be submitted when activating the payment. service.
     */
    fields?: Array<AntiFraudServiceDefinitionFields> | undefined;
    /**
     * An icon to display for the payment service.
     */
    iconUrl?: string | undefined;
};

/** @internal */
export const AntiFraudServiceDefinitionType$inboundSchema: z.ZodNativeEnum<
    typeof AntiFraudServiceDefinitionType
> = z.nativeEnum(AntiFraudServiceDefinitionType);

/** @internal */
export const AntiFraudServiceDefinitionType$outboundSchema: z.ZodNativeEnum<
    typeof AntiFraudServiceDefinitionType
> = AntiFraudServiceDefinitionType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AntiFraudServiceDefinitionType$ {
    /** @deprecated use `AntiFraudServiceDefinitionType$inboundSchema` instead. */
    export const inboundSchema = AntiFraudServiceDefinitionType$inboundSchema;
    /** @deprecated use `AntiFraudServiceDefinitionType$outboundSchema` instead. */
    export const outboundSchema = AntiFraudServiceDefinitionType$outboundSchema;
}

/** @internal */
export const AntiFraudServiceDefinitionFormat$inboundSchema: z.ZodNativeEnum<
    typeof AntiFraudServiceDefinitionFormat
> = z.nativeEnum(AntiFraudServiceDefinitionFormat);

/** @internal */
export const AntiFraudServiceDefinitionFormat$outboundSchema: z.ZodNativeEnum<
    typeof AntiFraudServiceDefinitionFormat
> = AntiFraudServiceDefinitionFormat$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AntiFraudServiceDefinitionFormat$ {
    /** @deprecated use `AntiFraudServiceDefinitionFormat$inboundSchema` instead. */
    export const inboundSchema = AntiFraudServiceDefinitionFormat$inboundSchema;
    /** @deprecated use `AntiFraudServiceDefinitionFormat$outboundSchema` instead. */
    export const outboundSchema = AntiFraudServiceDefinitionFormat$outboundSchema;
}

/** @internal */
export const AntiFraudServiceDefinitionFields$inboundSchema: z.ZodType<
    AntiFraudServiceDefinitionFields,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        key: z.string().optional(),
        display_name: z.string().optional(),
        required: z.boolean().optional(),
        format: AntiFraudServiceDefinitionFormat$inboundSchema.optional(),
        secret: z.boolean().optional(),
    })
    .transform((v) => {
        return remap$(v, {
            display_name: "displayName",
        });
    });

/** @internal */
export type AntiFraudServiceDefinitionFields$Outbound = {
    key?: string | undefined;
    display_name?: string | undefined;
    required?: boolean | undefined;
    format?: string | undefined;
    secret?: boolean | undefined;
};

/** @internal */
export const AntiFraudServiceDefinitionFields$outboundSchema: z.ZodType<
    AntiFraudServiceDefinitionFields$Outbound,
    z.ZodTypeDef,
    AntiFraudServiceDefinitionFields
> = z
    .object({
        key: z.string().optional(),
        displayName: z.string().optional(),
        required: z.boolean().optional(),
        format: AntiFraudServiceDefinitionFormat$outboundSchema.optional(),
        secret: z.boolean().optional(),
    })
    .transform((v) => {
        return remap$(v, {
            displayName: "display_name",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AntiFraudServiceDefinitionFields$ {
    /** @deprecated use `AntiFraudServiceDefinitionFields$inboundSchema` instead. */
    export const inboundSchema = AntiFraudServiceDefinitionFields$inboundSchema;
    /** @deprecated use `AntiFraudServiceDefinitionFields$outboundSchema` instead. */
    export const outboundSchema = AntiFraudServiceDefinitionFields$outboundSchema;
    /** @deprecated use `AntiFraudServiceDefinitionFields$Outbound` instead. */
    export type Outbound = AntiFraudServiceDefinitionFields$Outbound;
}

/** @internal */
export const AntiFraudServiceDefinition$inboundSchema: z.ZodType<
    AntiFraudServiceDefinition,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        id: z.string().optional(),
        type: AntiFraudServiceDefinitionType$inboundSchema.default("anti-fraud-service-definition"),
        display_name: z.string().optional(),
        fields: z.array(z.lazy(() => AntiFraudServiceDefinitionFields$inboundSchema)).optional(),
        icon_url: z.string().optional(),
    })
    .transform((v) => {
        return remap$(v, {
            display_name: "displayName",
            icon_url: "iconUrl",
        });
    });

/** @internal */
export type AntiFraudServiceDefinition$Outbound = {
    id?: string | undefined;
    type: string;
    display_name?: string | undefined;
    fields?: Array<AntiFraudServiceDefinitionFields$Outbound> | undefined;
    icon_url?: string | undefined;
};

/** @internal */
export const AntiFraudServiceDefinition$outboundSchema: z.ZodType<
    AntiFraudServiceDefinition$Outbound,
    z.ZodTypeDef,
    AntiFraudServiceDefinition
> = z
    .object({
        id: z.string().optional(),
        type: AntiFraudServiceDefinitionType$outboundSchema.default(
            "anti-fraud-service-definition"
        ),
        displayName: z.string().optional(),
        fields: z.array(z.lazy(() => AntiFraudServiceDefinitionFields$outboundSchema)).optional(),
        iconUrl: z.string().optional(),
    })
    .transform((v) => {
        return remap$(v, {
            displayName: "display_name",
            iconUrl: "icon_url",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AntiFraudServiceDefinition$ {
    /** @deprecated use `AntiFraudServiceDefinition$inboundSchema` instead. */
    export const inboundSchema = AntiFraudServiceDefinition$inboundSchema;
    /** @deprecated use `AntiFraudServiceDefinition$outboundSchema` instead. */
    export const outboundSchema = AntiFraudServiceDefinition$outboundSchema;
    /** @deprecated use `AntiFraudServiceDefinition$Outbound` instead. */
    export type Outbound = AntiFraudServiceDefinition$Outbound;
}

/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  Settlement,
  Settlement$inboundSchema,
  Settlement$Outbound,
  Settlement$outboundSchema,
} from "./settlement.js";

/**
 * A list of settlement records for a transaction.
 */
export type Settlements = {
  /**
   * The list of settlement objects.
   */
  items: Array<Settlement>;
};

/** @internal */
export const Settlements$inboundSchema: z.ZodType<
  Settlements,
  z.ZodTypeDef,
  unknown
> = z.object({
  items: z.array(Settlement$inboundSchema),
});

/** @internal */
export type Settlements$Outbound = {
  items: Array<Settlement$Outbound>;
};

/** @internal */
export const Settlements$outboundSchema: z.ZodType<
  Settlements$Outbound,
  z.ZodTypeDef,
  Settlements
> = z.object({
  items: z.array(Settlement$outboundSchema),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Settlements$ {
  /** @deprecated use `Settlements$inboundSchema` instead. */
  export const inboundSchema = Settlements$inboundSchema;
  /** @deprecated use `Settlements$outboundSchema` instead. */
  export const outboundSchema = Settlements$outboundSchema;
  /** @deprecated use `Settlements$Outbound` instead. */
  export type Outbound = Settlements$Outbound;
}

export function settlementsToJSON(settlements: Settlements): string {
  return JSON.stringify(Settlements$outboundSchema.parse(settlements));
}

export function settlementsFromJSON(
  jsonString: string,
): SafeParseResult<Settlements, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => Settlements$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'Settlements' from JSON`,
  );
}

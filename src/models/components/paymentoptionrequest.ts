/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives.js";
import {
    CartItem,
    CartItem$inboundSchema,
    CartItem$Outbound,
    CartItem$outboundSchema,
} from "./cartitem.js";
import * as z from "zod";

export type PaymentOptionRequestMetadata = {};

/**
 * Base model with JSON encoders.
 */
export type PaymentOptionRequest = {
    metadata?: PaymentOptionRequestMetadata | undefined;
    country?: string | undefined;
    currency?: string | undefined;
    amount?: number | undefined;
    locale?: string | undefined;
    cartItems?: Array<CartItem> | undefined;
};

/** @internal */
export const PaymentOptionRequestMetadata$inboundSchema: z.ZodType<
    PaymentOptionRequestMetadata,
    z.ZodTypeDef,
    unknown
> = z.object({});

/** @internal */
export type PaymentOptionRequestMetadata$Outbound = {};

/** @internal */
export const PaymentOptionRequestMetadata$outboundSchema: z.ZodType<
    PaymentOptionRequestMetadata$Outbound,
    z.ZodTypeDef,
    PaymentOptionRequestMetadata
> = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PaymentOptionRequestMetadata$ {
    /** @deprecated use `PaymentOptionRequestMetadata$inboundSchema` instead. */
    export const inboundSchema = PaymentOptionRequestMetadata$inboundSchema;
    /** @deprecated use `PaymentOptionRequestMetadata$outboundSchema` instead. */
    export const outboundSchema = PaymentOptionRequestMetadata$outboundSchema;
    /** @deprecated use `PaymentOptionRequestMetadata$Outbound` instead. */
    export type Outbound = PaymentOptionRequestMetadata$Outbound;
}

/** @internal */
export const PaymentOptionRequest$inboundSchema: z.ZodType<
    PaymentOptionRequest,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        metadata: z.lazy(() => PaymentOptionRequestMetadata$inboundSchema).optional(),
        country: z.string().optional(),
        currency: z.string().optional(),
        amount: z.number().int().optional(),
        locale: z.string().default("en"),
        cart_items: z.array(CartItem$inboundSchema).optional(),
    })
    .transform((v) => {
        return remap$(v, {
            cart_items: "cartItems",
        });
    });

/** @internal */
export type PaymentOptionRequest$Outbound = {
    metadata?: PaymentOptionRequestMetadata$Outbound | undefined;
    country?: string | undefined;
    currency?: string | undefined;
    amount?: number | undefined;
    locale: string;
    cart_items?: Array<CartItem$Outbound> | undefined;
};

/** @internal */
export const PaymentOptionRequest$outboundSchema: z.ZodType<
    PaymentOptionRequest$Outbound,
    z.ZodTypeDef,
    PaymentOptionRequest
> = z
    .object({
        metadata: z.lazy(() => PaymentOptionRequestMetadata$outboundSchema).optional(),
        country: z.string().optional(),
        currency: z.string().optional(),
        amount: z.number().int().optional(),
        locale: z.string().default("en"),
        cartItems: z.array(CartItem$outboundSchema).optional(),
    })
    .transform((v) => {
        return remap$(v, {
            cartItems: "cart_items",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PaymentOptionRequest$ {
    /** @deprecated use `PaymentOptionRequest$inboundSchema` instead. */
    export const inboundSchema = PaymentOptionRequest$inboundSchema;
    /** @deprecated use `PaymentOptionRequest$outboundSchema` instead. */
    export const outboundSchema = PaymentOptionRequest$outboundSchema;
    /** @deprecated use `PaymentOptionRequest$Outbound` instead. */
    export type Outbound = PaymentOptionRequest$Outbound;
}

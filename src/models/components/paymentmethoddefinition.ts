/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as z from "zod";

/**
 * Definitions of a payment method including icon, label, etc.
 */
export type PaymentMethodDefinition = {
    /**
     * The mode of this payment method.
     */
    id?: string | undefined;
    /**
     * The icon for this payment method.
     */
    iconUrl?: string | undefined;
    /**
     * The display name of this payment method.
     */
    displayName?: string | undefined;
    /**
     * The long display name of this payment method.
     */
    longDisplayName?: string | undefined;
    /**
     * The method, or type, for this payment method.
     */
    method?: string | undefined;
};

/** @internal */
export namespace PaymentMethodDefinition$ {
    export type Inbound = {
        id?: string | undefined;
        icon_url?: string | undefined;
        display_name?: string | undefined;
        long_display_name?: string | undefined;
        method?: string | undefined;
    };

    export const inboundSchema: z.ZodType<PaymentMethodDefinition, z.ZodTypeDef, Inbound> = z
        .object({
            id: z.string().optional(),
            icon_url: z.string().optional(),
            display_name: z.string().optional(),
            long_display_name: z.string().optional(),
            method: z.string().optional(),
        })
        .transform((v) => {
            return {
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.icon_url === undefined ? null : { iconUrl: v.icon_url }),
                ...(v.display_name === undefined ? null : { displayName: v.display_name }),
                ...(v.long_display_name === undefined
                    ? null
                    : { longDisplayName: v.long_display_name }),
                ...(v.method === undefined ? null : { method: v.method }),
            };
        });

    export type Outbound = {
        id?: string | undefined;
        icon_url?: string | undefined;
        display_name?: string | undefined;
        long_display_name?: string | undefined;
        method?: string | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, PaymentMethodDefinition> = z
        .object({
            id: z.string().optional(),
            iconUrl: z.string().optional(),
            displayName: z.string().optional(),
            longDisplayName: z.string().optional(),
            method: z.string().optional(),
        })
        .transform((v) => {
            return {
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.iconUrl === undefined ? null : { icon_url: v.iconUrl }),
                ...(v.displayName === undefined ? null : { display_name: v.displayName }),
                ...(v.longDisplayName === undefined
                    ? null
                    : { long_display_name: v.longDisplayName }),
                ...(v.method === undefined ? null : { method: v.method }),
            };
        });
}

/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives.js";
import { ClosedEnum } from "../../types/enums.js";
import * as z from "zod";

/**
 * The kind of authentication to be used in a Vault Forward request.
 *
 * @remarks
 *
 */
export const PCIForwardConfigAuthenticationRequestKind = {
    Mle: "mle",
    Mtls: "mtls",
    Signature: "signature",
} as const;
/**
 * The kind of authentication to be used in a Vault Forward request.
 *
 * @remarks
 *
 */
export type PCIForwardConfigAuthenticationRequestKind = ClosedEnum<
    typeof PCIForwardConfigAuthenticationRequestKind
>;

/**
 * A key-value pair that represents a field defined in the definition for
 *
 * @remarks
 * this authentication method.
 */
export type PCIForwardConfigAuthenticationRequestFields = {
    /**
     * The key of the field to set a value for.
     */
    key: string;
    /**
     * The value of a field to set.
     */
    value: string;
};

/**
 * Request body to create a Vault Forward authentication method.
 */
export type PCIForwardConfigAuthenticationRequest = {
    /**
     * The kind of authentication to be used in a Vault Forward request.
     *
     * @remarks
     *
     */
    kind: PCIForwardConfigAuthenticationRequestKind;
    /**
     * A custom name for the authentication method. This will be shown in the Admin UI.
     */
    displayName: string;
    /**
     * A list of fields, each containing a key-value pair for each field defined
     *
     * @remarks
     * by the definition for this authentication method.
     */
    fields: Array<PCIForwardConfigAuthenticationRequestFields>;
};

/** @internal */
export const PCIForwardConfigAuthenticationRequestKind$inboundSchema: z.ZodNativeEnum<
    typeof PCIForwardConfigAuthenticationRequestKind
> = z.nativeEnum(PCIForwardConfigAuthenticationRequestKind);

/** @internal */
export const PCIForwardConfigAuthenticationRequestKind$outboundSchema: z.ZodNativeEnum<
    typeof PCIForwardConfigAuthenticationRequestKind
> = PCIForwardConfigAuthenticationRequestKind$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PCIForwardConfigAuthenticationRequestKind$ {
    /** @deprecated use `PCIForwardConfigAuthenticationRequestKind$inboundSchema` instead. */
    export const inboundSchema = PCIForwardConfigAuthenticationRequestKind$inboundSchema;
    /** @deprecated use `PCIForwardConfigAuthenticationRequestKind$outboundSchema` instead. */
    export const outboundSchema = PCIForwardConfigAuthenticationRequestKind$outboundSchema;
}

/** @internal */
export const PCIForwardConfigAuthenticationRequestFields$inboundSchema: z.ZodType<
    PCIForwardConfigAuthenticationRequestFields,
    z.ZodTypeDef,
    unknown
> = z.object({
    key: z.string(),
    value: z.string(),
});

/** @internal */
export type PCIForwardConfigAuthenticationRequestFields$Outbound = {
    key: string;
    value: string;
};

/** @internal */
export const PCIForwardConfigAuthenticationRequestFields$outboundSchema: z.ZodType<
    PCIForwardConfigAuthenticationRequestFields$Outbound,
    z.ZodTypeDef,
    PCIForwardConfigAuthenticationRequestFields
> = z.object({
    key: z.string(),
    value: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PCIForwardConfigAuthenticationRequestFields$ {
    /** @deprecated use `PCIForwardConfigAuthenticationRequestFields$inboundSchema` instead. */
    export const inboundSchema = PCIForwardConfigAuthenticationRequestFields$inboundSchema;
    /** @deprecated use `PCIForwardConfigAuthenticationRequestFields$outboundSchema` instead. */
    export const outboundSchema = PCIForwardConfigAuthenticationRequestFields$outboundSchema;
    /** @deprecated use `PCIForwardConfigAuthenticationRequestFields$Outbound` instead. */
    export type Outbound = PCIForwardConfigAuthenticationRequestFields$Outbound;
}

/** @internal */
export const PCIForwardConfigAuthenticationRequest$inboundSchema: z.ZodType<
    PCIForwardConfigAuthenticationRequest,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        kind: PCIForwardConfigAuthenticationRequestKind$inboundSchema,
        display_name: z.string(),
        fields: z.array(z.lazy(() => PCIForwardConfigAuthenticationRequestFields$inboundSchema)),
    })
    .transform((v) => {
        return remap$(v, {
            display_name: "displayName",
        });
    });

/** @internal */
export type PCIForwardConfigAuthenticationRequest$Outbound = {
    kind: string;
    display_name: string;
    fields: Array<PCIForwardConfigAuthenticationRequestFields$Outbound>;
};

/** @internal */
export const PCIForwardConfigAuthenticationRequest$outboundSchema: z.ZodType<
    PCIForwardConfigAuthenticationRequest$Outbound,
    z.ZodTypeDef,
    PCIForwardConfigAuthenticationRequest
> = z
    .object({
        kind: PCIForwardConfigAuthenticationRequestKind$outboundSchema,
        displayName: z.string(),
        fields: z.array(z.lazy(() => PCIForwardConfigAuthenticationRequestFields$outboundSchema)),
    })
    .transform((v) => {
        return remap$(v, {
            displayName: "display_name",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PCIForwardConfigAuthenticationRequest$ {
    /** @deprecated use `PCIForwardConfigAuthenticationRequest$inboundSchema` instead. */
    export const inboundSchema = PCIForwardConfigAuthenticationRequest$inboundSchema;
    /** @deprecated use `PCIForwardConfigAuthenticationRequest$outboundSchema` instead. */
    export const outboundSchema = PCIForwardConfigAuthenticationRequest$outboundSchema;
    /** @deprecated use `PCIForwardConfigAuthenticationRequest$Outbound` instead. */
    export type Outbound = PCIForwardConfigAuthenticationRequest$Outbound;
}

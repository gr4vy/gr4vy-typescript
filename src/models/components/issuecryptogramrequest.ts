/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives.js";
import * as z from "zod";

/**
 * Request body for issue a cryptogram for a network token.
 */
export type IssueCryptogramRequest = {
    /**
     * Defines if the request is merchant initiated or not.
     */
    merchantInitiated?: boolean | undefined;
};

/** @internal */
export const IssueCryptogramRequest$inboundSchema: z.ZodType<
    IssueCryptogramRequest,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        merchant_initiated: z.boolean().default(false),
    })
    .transform((v) => {
        return remap$(v, {
            merchant_initiated: "merchantInitiated",
        });
    });

/** @internal */
export type IssueCryptogramRequest$Outbound = {
    merchant_initiated: boolean;
};

/** @internal */
export const IssueCryptogramRequest$outboundSchema: z.ZodType<
    IssueCryptogramRequest$Outbound,
    z.ZodTypeDef,
    IssueCryptogramRequest
> = z
    .object({
        merchantInitiated: z.boolean().default(false),
    })
    .transform((v) => {
        return remap$(v, {
            merchantInitiated: "merchant_initiated",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace IssueCryptogramRequest$ {
    /** @deprecated use `IssueCryptogramRequest$inboundSchema` instead. */
    export const inboundSchema = IssueCryptogramRequest$inboundSchema;
    /** @deprecated use `IssueCryptogramRequest$outboundSchema` instead. */
    export const outboundSchema = IssueCryptogramRequest$outboundSchema;
    /** @deprecated use `IssueCryptogramRequest$Outbound` instead. */
    export type Outbound = IssueCryptogramRequest$Outbound;
}

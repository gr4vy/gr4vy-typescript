/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives";
import * as z from "zod";

/**
 * `card`.
 */
export enum CardRequestMethod {
    Card = "card",
}

/**
 * Details to register a new card payment method.
 */
export type CardRequest = {
    /**
     * `card`.
     */
    method: CardRequestMethod;
    /**
     * The 13-19 digit number for this card as it can be found on the
     *
     * @remarks
     * front of the card.
     */
    number: string;
    /**
     * The expiration date of the card, formatted `MM/YY`.
     */
    expirationDate: string;
    /**
     * An external identifier that can be used to match the card against your own records.
     */
    externalIdentifier?: string | null | undefined;
    /**
     * The ID of the buyer to associate this payment method to. If this field is
     *
     * @remarks
     * provided then the `buyer_external_identifier` field needs to be unset.
     */
    buyerId?: string | undefined;
    /**
     * The `external_identifier` of the buyer to associate this payment method
     *
     * @remarks
     * to. If this field is provided then the `buyer_id` field
     * needs to be unset.
     */
    buyerExternalIdentifier?: string | undefined;
    /**
     * The redirect URL to redirect a buyer to after they have authorized their
     *
     * @remarks
     * transaction or payment method. This only applies to payment methods that
     * require buyer approval.
     */
    redirectUrl?: string | null | undefined;
};

/** @internal */
export namespace CardRequestMethod$ {
    export const inboundSchema = z.nativeEnum(CardRequestMethod);
    export const outboundSchema = inboundSchema;
}

/** @internal */
export namespace CardRequest$ {
    export const inboundSchema: z.ZodType<CardRequest, z.ZodTypeDef, unknown> = z
        .object({
            method: CardRequestMethod$.inboundSchema,
            number: z.string(),
            expiration_date: z.string(),
            external_identifier: z.nullable(z.string()).optional(),
            buyer_id: z.string().optional(),
            buyer_external_identifier: z.string().optional(),
            redirect_url: z.nullable(z.string()).optional(),
        })
        .transform((v) => {
            return remap$(v, {
                expiration_date: "expirationDate",
                external_identifier: "externalIdentifier",
                buyer_id: "buyerId",
                buyer_external_identifier: "buyerExternalIdentifier",
                redirect_url: "redirectUrl",
            });
        });

    export type Outbound = {
        method: string;
        number: string;
        expiration_date: string;
        external_identifier?: string | null | undefined;
        buyer_id?: string | undefined;
        buyer_external_identifier?: string | undefined;
        redirect_url?: string | null | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, CardRequest> = z
        .object({
            method: CardRequestMethod$.outboundSchema,
            number: z.string(),
            expirationDate: z.string(),
            externalIdentifier: z.nullable(z.string()).optional(),
            buyerId: z.string().optional(),
            buyerExternalIdentifier: z.string().optional(),
            redirectUrl: z.nullable(z.string()).optional(),
        })
        .transform((v) => {
            return remap$(v, {
                expirationDate: "expiration_date",
                externalIdentifier: "external_identifier",
                buyerId: "buyer_id",
                buyerExternalIdentifier: "buyer_external_identifier",
                redirectUrl: "redirect_url",
            });
        });
}

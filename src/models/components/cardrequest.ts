/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as z from "zod";

/**
 * `card`.
 */
export enum CardRequestMethod {
    Card = "card",
}

/**
 * Details to register a new card payment method.
 */
export type CardRequest = {
    /**
     * `card`.
     */
    method: CardRequestMethod;
    /**
     * The 13-19 digit number for this card as it can be found on the
     *
     * @remarks
     * front of the card.
     */
    number: string;
    /**
     * The expiration date of the card, formatted `MM/YY`.
     */
    expirationDate: string;
    /**
     * An external identifier that can be used to match the card against your own records.
     */
    externalIdentifier?: string | null | undefined;
    /**
     * The ID of the buyer to associate this payment method to. If this field is
     *
     * @remarks
     * provided then the `buyer_external_identifier` field needs to be unset.
     */
    buyerId?: string | undefined;
    /**
     * The `external_identifier` of the buyer to associate this payment method
     *
     * @remarks
     * to. If this field is provided then the `buyer_id` field
     * needs to be unset.
     */
    buyerExternalIdentifier?: string | undefined;
    /**
     * The redirect URL to redirect a buyer to after they have authorized their
     *
     * @remarks
     * transaction or payment method. This only applies to payment methods that
     * require buyer approval.
     */
    redirectUrl?: string | null | undefined;
};

/** @internal */
export const CardRequestMethod$: z.ZodNativeEnum<typeof CardRequestMethod> =
    z.nativeEnum(CardRequestMethod);

/** @internal */
export namespace CardRequest$ {
    export type Inbound = {
        method: CardRequestMethod;
        number: string;
        expiration_date: string;
        external_identifier?: string | null | undefined;
        buyer_id?: string | undefined;
        buyer_external_identifier?: string | undefined;
        redirect_url?: string | null | undefined;
    };

    export const inboundSchema: z.ZodType<CardRequest, z.ZodTypeDef, Inbound> = z
        .object({
            method: CardRequestMethod$,
            number: z.string(),
            expiration_date: z.string(),
            external_identifier: z.nullable(z.string()).optional(),
            buyer_id: z.string().optional(),
            buyer_external_identifier: z.string().optional(),
            redirect_url: z.nullable(z.string()).optional(),
        })
        .transform((v) => {
            return {
                method: v.method,
                number: v.number,
                expirationDate: v.expiration_date,
                ...(v.external_identifier === undefined
                    ? null
                    : { externalIdentifier: v.external_identifier }),
                ...(v.buyer_id === undefined ? null : { buyerId: v.buyer_id }),
                ...(v.buyer_external_identifier === undefined
                    ? null
                    : { buyerExternalIdentifier: v.buyer_external_identifier }),
                ...(v.redirect_url === undefined ? null : { redirectUrl: v.redirect_url }),
            };
        });

    export type Outbound = {
        method: CardRequestMethod;
        number: string;
        expiration_date: string;
        external_identifier?: string | null | undefined;
        buyer_id?: string | undefined;
        buyer_external_identifier?: string | undefined;
        redirect_url?: string | null | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, CardRequest> = z
        .object({
            method: CardRequestMethod$,
            number: z.string(),
            expirationDate: z.string(),
            externalIdentifier: z.nullable(z.string()).optional(),
            buyerId: z.string().optional(),
            buyerExternalIdentifier: z.string().optional(),
            redirectUrl: z.nullable(z.string()).optional(),
        })
        .transform((v) => {
            return {
                method: v.method,
                number: v.number,
                expiration_date: v.expirationDate,
                ...(v.externalIdentifier === undefined
                    ? null
                    : { external_identifier: v.externalIdentifier }),
                ...(v.buyerId === undefined ? null : { buyer_id: v.buyerId }),
                ...(v.buyerExternalIdentifier === undefined
                    ? null
                    : { buyer_external_identifier: v.buyerExternalIdentifier }),
                ...(v.redirectUrl === undefined ? null : { redirect_url: v.redirectUrl }),
            };
        });
}

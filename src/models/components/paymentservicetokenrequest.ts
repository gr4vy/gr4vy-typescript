/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives.js";
import * as z from "zod";

/**
 * Request body for provision a payment service token.
 */
export type PaymentServiceTokenRequest = {
    /**
     * The 3 or 4 digit security code often found on the card. This often
     *
     * @remarks
     * referred to as the CVV or CVD.
     *
     * The security code can only be set if the stored payment method
     * represents a card.
     */
    securityCode?: string | null | undefined;
    /**
     * The ID of the payment service.
     */
    paymentServiceId: string;
    /**
     * The redirect URL to redirect a buyer to after they have authorized their
     *
     * @remarks
     * payment method. This only applies to payment methods that require buyer approval.
     */
    redirectUrl: string;
};

/** @internal */
export const PaymentServiceTokenRequest$inboundSchema: z.ZodType<
    PaymentServiceTokenRequest,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        security_code: z.nullable(z.string()).optional(),
        payment_service_id: z.string(),
        redirect_url: z.string(),
    })
    .transform((v) => {
        return remap$(v, {
            security_code: "securityCode",
            payment_service_id: "paymentServiceId",
            redirect_url: "redirectUrl",
        });
    });

/** @internal */
export type PaymentServiceTokenRequest$Outbound = {
    security_code?: string | null | undefined;
    payment_service_id: string;
    redirect_url: string;
};

/** @internal */
export const PaymentServiceTokenRequest$outboundSchema: z.ZodType<
    PaymentServiceTokenRequest$Outbound,
    z.ZodTypeDef,
    PaymentServiceTokenRequest
> = z
    .object({
        securityCode: z.nullable(z.string()).optional(),
        paymentServiceId: z.string(),
        redirectUrl: z.string(),
    })
    .transform((v) => {
        return remap$(v, {
            securityCode: "security_code",
            paymentServiceId: "payment_service_id",
            redirectUrl: "redirect_url",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PaymentServiceTokenRequest$ {
    /** @deprecated use `PaymentServiceTokenRequest$inboundSchema` instead. */
    export const inboundSchema = PaymentServiceTokenRequest$inboundSchema;
    /** @deprecated use `PaymentServiceTokenRequest$outboundSchema` instead. */
    export const outboundSchema = PaymentServiceTokenRequest$outboundSchema;
    /** @deprecated use `PaymentServiceTokenRequest$Outbound` instead. */
    export type Outbound = PaymentServiceTokenRequest$Outbound;
}

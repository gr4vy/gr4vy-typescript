/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as z from "zod";

/**
 * Request body for provision a payment service token.
 */
export type PaymentServiceTokenRequest = {
    /**
     * The 3 or 4 digit security code often found on the card. This often
     *
     * @remarks
     * referred to as the CVV or CVD.
     *
     * The security code can only be set if the stored payment method
     * represents a card.
     */
    securityCode: string;
    /**
     * The ID of the payment service.
     */
    paymentServiceId: string;
    /**
     * The redirect URL to redirect a buyer to after they have authorized their
     *
     * @remarks
     * payment method. This only applies to payment methods that require buyer approval.
     */
    redirectUrl: string;
};

/** @internal */
export namespace PaymentServiceTokenRequest$ {
    export type Inbound = {
        security_code: string;
        payment_service_id: string;
        redirect_url: string;
    };

    export const inboundSchema: z.ZodType<PaymentServiceTokenRequest, z.ZodTypeDef, Inbound> = z
        .object({
            security_code: z.string(),
            payment_service_id: z.string(),
            redirect_url: z.string(),
        })
        .transform((v) => {
            return {
                securityCode: v.security_code,
                paymentServiceId: v.payment_service_id,
                redirectUrl: v.redirect_url,
            };
        });

    export type Outbound = {
        security_code: string;
        payment_service_id: string;
        redirect_url: string;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, PaymentServiceTokenRequest> = z
        .object({
            securityCode: z.string(),
            paymentServiceId: z.string(),
            redirectUrl: z.string(),
        })
        .transform((v) => {
            return {
                security_code: v.securityCode,
                payment_service_id: v.paymentServiceId,
                redirect_url: v.redirectUrl,
            };
        });
}

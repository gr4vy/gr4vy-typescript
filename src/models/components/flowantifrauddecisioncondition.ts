/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { ClosedEnum } from "../../types/enums.js";
import * as z from "zod";

/**
 * The type of match made for this rule.
 */
export const FlowAntiFraudDecisionConditionName = {
    AntiFraudDecision: "anti_fraud_decision",
} as const;
/**
 * The type of match made for this rule.
 */
export type FlowAntiFraudDecisionConditionName = ClosedEnum<
    typeof FlowAntiFraudDecisionConditionName
>;

/**
 * The comparison to make on the `value`.
 */
export const FlowAntiFraudDecisionConditionOperator = {
    IsOneOf: "is_one_of",
    IsNotOneOf: "is_not_one_of",
} as const;
/**
 * The comparison to make on the `value`.
 */
export type FlowAntiFraudDecisionConditionOperator = ClosedEnum<
    typeof FlowAntiFraudDecisionConditionOperator
>;

export const FlowAntiFraudDecisionConditionValue = {
    Accept: "accept",
    Error: "error",
    Reject: "reject",
    Review: "review",
    Exception: "exception",
    Skipped: "skipped",
} as const;
export type FlowAntiFraudDecisionConditionValue = ClosedEnum<
    typeof FlowAntiFraudDecisionConditionValue
>;

/**
 * Anti-fraud decision condition with a name, operator, and value.
 */
export type FlowAntiFraudDecisionCondition = {
    /**
     * The type of match made for this rule.
     */
    name: FlowAntiFraudDecisionConditionName;
    /**
     * The comparison to make on the `value`.
     */
    operator: FlowAntiFraudDecisionConditionOperator;
    /**
     * A list of anti-fraud decisions to match.
     */
    value: Array<FlowAntiFraudDecisionConditionValue>;
};

/** @internal */
export const FlowAntiFraudDecisionConditionName$inboundSchema: z.ZodNativeEnum<
    typeof FlowAntiFraudDecisionConditionName
> = z.nativeEnum(FlowAntiFraudDecisionConditionName);

/** @internal */
export const FlowAntiFraudDecisionConditionName$outboundSchema: z.ZodNativeEnum<
    typeof FlowAntiFraudDecisionConditionName
> = FlowAntiFraudDecisionConditionName$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FlowAntiFraudDecisionConditionName$ {
    /** @deprecated use `FlowAntiFraudDecisionConditionName$inboundSchema` instead. */
    export const inboundSchema = FlowAntiFraudDecisionConditionName$inboundSchema;
    /** @deprecated use `FlowAntiFraudDecisionConditionName$outboundSchema` instead. */
    export const outboundSchema = FlowAntiFraudDecisionConditionName$outboundSchema;
}

/** @internal */
export const FlowAntiFraudDecisionConditionOperator$inboundSchema: z.ZodNativeEnum<
    typeof FlowAntiFraudDecisionConditionOperator
> = z.nativeEnum(FlowAntiFraudDecisionConditionOperator);

/** @internal */
export const FlowAntiFraudDecisionConditionOperator$outboundSchema: z.ZodNativeEnum<
    typeof FlowAntiFraudDecisionConditionOperator
> = FlowAntiFraudDecisionConditionOperator$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FlowAntiFraudDecisionConditionOperator$ {
    /** @deprecated use `FlowAntiFraudDecisionConditionOperator$inboundSchema` instead. */
    export const inboundSchema = FlowAntiFraudDecisionConditionOperator$inboundSchema;
    /** @deprecated use `FlowAntiFraudDecisionConditionOperator$outboundSchema` instead. */
    export const outboundSchema = FlowAntiFraudDecisionConditionOperator$outboundSchema;
}

/** @internal */
export const FlowAntiFraudDecisionConditionValue$inboundSchema: z.ZodNativeEnum<
    typeof FlowAntiFraudDecisionConditionValue
> = z.nativeEnum(FlowAntiFraudDecisionConditionValue);

/** @internal */
export const FlowAntiFraudDecisionConditionValue$outboundSchema: z.ZodNativeEnum<
    typeof FlowAntiFraudDecisionConditionValue
> = FlowAntiFraudDecisionConditionValue$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FlowAntiFraudDecisionConditionValue$ {
    /** @deprecated use `FlowAntiFraudDecisionConditionValue$inboundSchema` instead. */
    export const inboundSchema = FlowAntiFraudDecisionConditionValue$inboundSchema;
    /** @deprecated use `FlowAntiFraudDecisionConditionValue$outboundSchema` instead. */
    export const outboundSchema = FlowAntiFraudDecisionConditionValue$outboundSchema;
}

/** @internal */
export const FlowAntiFraudDecisionCondition$inboundSchema: z.ZodType<
    FlowAntiFraudDecisionCondition,
    z.ZodTypeDef,
    unknown
> = z.object({
    name: FlowAntiFraudDecisionConditionName$inboundSchema,
    operator: FlowAntiFraudDecisionConditionOperator$inboundSchema,
    value: z.array(FlowAntiFraudDecisionConditionValue$inboundSchema),
});

/** @internal */
export type FlowAntiFraudDecisionCondition$Outbound = {
    name: string;
    operator: string;
    value: Array<string>;
};

/** @internal */
export const FlowAntiFraudDecisionCondition$outboundSchema: z.ZodType<
    FlowAntiFraudDecisionCondition$Outbound,
    z.ZodTypeDef,
    FlowAntiFraudDecisionCondition
> = z.object({
    name: FlowAntiFraudDecisionConditionName$outboundSchema,
    operator: FlowAntiFraudDecisionConditionOperator$outboundSchema,
    value: z.array(FlowAntiFraudDecisionConditionValue$outboundSchema),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FlowAntiFraudDecisionCondition$ {
    /** @deprecated use `FlowAntiFraudDecisionCondition$inboundSchema` instead. */
    export const inboundSchema = FlowAntiFraudDecisionCondition$inboundSchema;
    /** @deprecated use `FlowAntiFraudDecisionCondition$outboundSchema` instead. */
    export const outboundSchema = FlowAntiFraudDecisionCondition$outboundSchema;
    /** @deprecated use `FlowAntiFraudDecisionCondition$Outbound` instead. */
    export type Outbound = FlowAntiFraudDecisionCondition$Outbound;
}

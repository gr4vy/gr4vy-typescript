/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { ClosedEnum } from "../../types/enums.js";
import * as z from "zod";

/**
 * The type of match made for this rule.
 */
export const FlowCardCountryConditionName = {
    CardCountry: "card_country",
} as const;
/**
 * The type of match made for this rule.
 */
export type FlowCardCountryConditionName = ClosedEnum<typeof FlowCardCountryConditionName>;

/**
 * The comparison to make on the `value`.
 */
export const FlowCardCountryConditionOperator = {
    IsOneOf: "is_one_of",
    IsNotOneOf: "is_not_one_of",
} as const;
/**
 * The comparison to make on the `value`.
 */
export type FlowCardCountryConditionOperator = ClosedEnum<typeof FlowCardCountryConditionOperator>;

/**
 * Card country condition with a name, operator, and value.
 */
export type FlowCardCountryCondition = {
    /**
     * The type of match made for this rule.
     */
    name: FlowCardCountryConditionName;
    /**
     * The comparison to make on the `value`.
     */
    operator: FlowCardCountryConditionOperator;
    /**
     * Countries to compare the card originating country to
     *
     * @remarks
     * in `ISO-3166` 2 character format.
     */
    value: Array<string>;
};

/** @internal */
export const FlowCardCountryConditionName$inboundSchema: z.ZodNativeEnum<
    typeof FlowCardCountryConditionName
> = z.nativeEnum(FlowCardCountryConditionName);

/** @internal */
export const FlowCardCountryConditionName$outboundSchema: z.ZodNativeEnum<
    typeof FlowCardCountryConditionName
> = FlowCardCountryConditionName$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FlowCardCountryConditionName$ {
    /** @deprecated use `FlowCardCountryConditionName$inboundSchema` instead. */
    export const inboundSchema = FlowCardCountryConditionName$inboundSchema;
    /** @deprecated use `FlowCardCountryConditionName$outboundSchema` instead. */
    export const outboundSchema = FlowCardCountryConditionName$outboundSchema;
}

/** @internal */
export const FlowCardCountryConditionOperator$inboundSchema: z.ZodNativeEnum<
    typeof FlowCardCountryConditionOperator
> = z.nativeEnum(FlowCardCountryConditionOperator);

/** @internal */
export const FlowCardCountryConditionOperator$outboundSchema: z.ZodNativeEnum<
    typeof FlowCardCountryConditionOperator
> = FlowCardCountryConditionOperator$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FlowCardCountryConditionOperator$ {
    /** @deprecated use `FlowCardCountryConditionOperator$inboundSchema` instead. */
    export const inboundSchema = FlowCardCountryConditionOperator$inboundSchema;
    /** @deprecated use `FlowCardCountryConditionOperator$outboundSchema` instead. */
    export const outboundSchema = FlowCardCountryConditionOperator$outboundSchema;
}

/** @internal */
export const FlowCardCountryCondition$inboundSchema: z.ZodType<
    FlowCardCountryCondition,
    z.ZodTypeDef,
    unknown
> = z.object({
    name: FlowCardCountryConditionName$inboundSchema,
    operator: FlowCardCountryConditionOperator$inboundSchema,
    value: z.array(z.string()),
});

/** @internal */
export type FlowCardCountryCondition$Outbound = {
    name: string;
    operator: string;
    value: Array<string>;
};

/** @internal */
export const FlowCardCountryCondition$outboundSchema: z.ZodType<
    FlowCardCountryCondition$Outbound,
    z.ZodTypeDef,
    FlowCardCountryCondition
> = z.object({
    name: FlowCardCountryConditionName$outboundSchema,
    operator: FlowCardCountryConditionOperator$outboundSchema,
    value: z.array(z.string()),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FlowCardCountryCondition$ {
    /** @deprecated use `FlowCardCountryCondition$inboundSchema` instead. */
    export const inboundSchema = FlowCardCountryCondition$inboundSchema;
    /** @deprecated use `FlowCardCountryCondition$outboundSchema` instead. */
    export const outboundSchema = FlowCardCountryCondition$outboundSchema;
    /** @deprecated use `FlowCardCountryCondition$Outbound` instead. */
    export type Outbound = FlowCardCountryCondition$Outbound;
}

/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";

/**
 * A request to capture a transaction.
 */
export type TransactionCaptureRequest = {
    /**
     * The monetary amount to capture an authorization for, in the smallest
     *
     * @remarks
     * currency unit for the given currency, for example `1299` cents to create
     * an authorization for `$12.99`.
     *
     * When omitted blank, this will capture the entire amount.
     */
    amount?: number | undefined;
};

/** @internal */
export const TransactionCaptureRequest$inboundSchema: z.ZodType<
    TransactionCaptureRequest,
    z.ZodTypeDef,
    unknown
> = z.object({
    amount: z.number().int().optional(),
});

/** @internal */
export type TransactionCaptureRequest$Outbound = {
    amount?: number | undefined;
};

/** @internal */
export const TransactionCaptureRequest$outboundSchema: z.ZodType<
    TransactionCaptureRequest$Outbound,
    z.ZodTypeDef,
    TransactionCaptureRequest
> = z.object({
    amount: z.number().int().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace TransactionCaptureRequest$ {
    /** @deprecated use `TransactionCaptureRequest$inboundSchema` instead. */
    export const inboundSchema = TransactionCaptureRequest$inboundSchema;
    /** @deprecated use `TransactionCaptureRequest$outboundSchema` instead. */
    export const outboundSchema = TransactionCaptureRequest$outboundSchema;
    /** @deprecated use `TransactionCaptureRequest$Outbound` instead. */
    export type Outbound = TransactionCaptureRequest$Outbound;
}

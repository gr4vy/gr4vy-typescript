/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import {
    RoleAssigneeType,
    RoleAssigneeType$inboundSchema,
    RoleAssigneeType$outboundSchema,
} from "./roleassigneetype.js";
import * as z from "zod";

/**
 * Base model with JSON encoders.
 */
export type RoleAssignee = {
    /**
     * An enumeration.
     */
    type: RoleAssigneeType;
    id: string;
};

/** @internal */
export const RoleAssignee$inboundSchema: z.ZodType<RoleAssignee, z.ZodTypeDef, unknown> = z.object({
    type: RoleAssigneeType$inboundSchema,
    id: z.string(),
});

/** @internal */
export type RoleAssignee$Outbound = {
    type: string;
    id: string;
};

/** @internal */
export const RoleAssignee$outboundSchema: z.ZodType<
    RoleAssignee$Outbound,
    z.ZodTypeDef,
    RoleAssignee
> = z.object({
    type: RoleAssigneeType$outboundSchema,
    id: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RoleAssignee$ {
    /** @deprecated use `RoleAssignee$inboundSchema` instead. */
    export const inboundSchema = RoleAssignee$inboundSchema;
    /** @deprecated use `RoleAssignee$outboundSchema` instead. */
    export const outboundSchema = RoleAssignee$outboundSchema;
    /** @deprecated use `RoleAssignee$Outbound` instead. */
    export type Outbound = RoleAssignee$Outbound;
}

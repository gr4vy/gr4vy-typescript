/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { TaxIdKind, TaxIdKind$inboundSchema, TaxIdKind$outboundSchema } from "./taxidkind.js";
import * as z from "zod";

/**
 * Base model with JSON encoders.
 */
export type TaxId = {
    value: string;
    /**
     * An enumeration.
     */
    kind: TaxIdKind;
};

/** @internal */
export const TaxId$inboundSchema: z.ZodType<TaxId, z.ZodTypeDef, unknown> = z.object({
    value: z.string(),
    kind: TaxIdKind$inboundSchema,
});

/** @internal */
export type TaxId$Outbound = {
    value: string;
    kind: string;
};

/** @internal */
export const TaxId$outboundSchema: z.ZodType<TaxId$Outbound, z.ZodTypeDef, TaxId> = z.object({
    value: z.string(),
    kind: TaxIdKind$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace TaxId$ {
    /** @deprecated use `TaxId$inboundSchema` instead. */
    export const inboundSchema = TaxId$inboundSchema;
    /** @deprecated use `TaxId$outboundSchema` instead. */
    export const outboundSchema = TaxId$outboundSchema;
    /** @deprecated use `TaxId$Outbound` instead. */
    export type Outbound = TaxId$Outbound;
}

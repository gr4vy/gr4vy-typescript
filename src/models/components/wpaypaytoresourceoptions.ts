/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod/v3";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  WpayPaytoSimulationOptions,
  WpayPaytoSimulationOptions$inboundSchema,
  WpayPaytoSimulationOptions$Outbound,
  WpayPaytoSimulationOptions$outboundSchema,
} from "./wpaypaytosimulationoptions.js";

export type WpayPaytoResourceOptions = {
  /**
   * Simulate responses for this resource.
   */
  simulation?: WpayPaytoSimulationOptions | null | undefined;
};

/** @internal */
export const WpayPaytoResourceOptions$inboundSchema: z.ZodType<
  WpayPaytoResourceOptions,
  z.ZodTypeDef,
  unknown
> = z.object({
  simulation: z.nullable(WpayPaytoSimulationOptions$inboundSchema).optional(),
});

/** @internal */
export type WpayPaytoResourceOptions$Outbound = {
  simulation?: WpayPaytoSimulationOptions$Outbound | null | undefined;
};

/** @internal */
export const WpayPaytoResourceOptions$outboundSchema: z.ZodType<
  WpayPaytoResourceOptions$Outbound,
  z.ZodTypeDef,
  WpayPaytoResourceOptions
> = z.object({
  simulation: z.nullable(WpayPaytoSimulationOptions$outboundSchema).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace WpayPaytoResourceOptions$ {
  /** @deprecated use `WpayPaytoResourceOptions$inboundSchema` instead. */
  export const inboundSchema = WpayPaytoResourceOptions$inboundSchema;
  /** @deprecated use `WpayPaytoResourceOptions$outboundSchema` instead. */
  export const outboundSchema = WpayPaytoResourceOptions$outboundSchema;
  /** @deprecated use `WpayPaytoResourceOptions$Outbound` instead. */
  export type Outbound = WpayPaytoResourceOptions$Outbound;
}

export function wpayPaytoResourceOptionsToJSON(
  wpayPaytoResourceOptions: WpayPaytoResourceOptions,
): string {
  return JSON.stringify(
    WpayPaytoResourceOptions$outboundSchema.parse(wpayPaytoResourceOptions),
  );
}

export function wpayPaytoResourceOptionsFromJSON(
  jsonString: string,
): SafeParseResult<WpayPaytoResourceOptions, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => WpayPaytoResourceOptions$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'WpayPaytoResourceOptions' from JSON`,
  );
}

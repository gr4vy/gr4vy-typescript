/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives.js";
import * as z from "zod";

/**
 * Base model with JSON encoders.
 */
export type ClickToPaySession = {
    checkoutSessionId: string;
};

/** @internal */
export const ClickToPaySession$inboundSchema: z.ZodType<ClickToPaySession, z.ZodTypeDef, unknown> =
    z
        .object({
            checkout_session_id: z.string(),
        })
        .transform((v) => {
            return remap$(v, {
                checkout_session_id: "checkoutSessionId",
            });
        });

/** @internal */
export type ClickToPaySession$Outbound = {
    checkout_session_id: string;
};

/** @internal */
export const ClickToPaySession$outboundSchema: z.ZodType<
    ClickToPaySession$Outbound,
    z.ZodTypeDef,
    ClickToPaySession
> = z
    .object({
        checkoutSessionId: z.string(),
    })
    .transform((v) => {
        return remap$(v, {
            checkoutSessionId: "checkout_session_id",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ClickToPaySession$ {
    /** @deprecated use `ClickToPaySession$inboundSchema` instead. */
    export const inboundSchema = ClickToPaySession$inboundSchema;
    /** @deprecated use `ClickToPaySession$outboundSchema` instead. */
    export const outboundSchema = ClickToPaySession$outboundSchema;
    /** @deprecated use `ClickToPaySession$Outbound` instead. */
    export type Outbound = ClickToPaySession$Outbound;
}

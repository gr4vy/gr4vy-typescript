/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives.js";
import { ClosedEnum } from "../../types/enums.js";
import * as z from "zod";

/**
 * The type of this resource. Is always `transaction-event`.
 */
export const PaymentConnectorResponseTransactionVoidDeclinedEventType = {
    TransactionEvent: "transaction-event",
} as const;
/**
 * The type of this resource. Is always `transaction-event`.
 */
export type PaymentConnectorResponseTransactionVoidDeclinedEventType = ClosedEnum<
    typeof PaymentConnectorResponseTransactionVoidDeclinedEventType
>;

/**
 * The name of this resource. Is always `payment-connector-response-transaction-void-declined`.
 */
export const PaymentConnectorResponseTransactionVoidDeclinedEventName = {
    PaymentConnectorResponseTransactionVoidDeclined:
        "payment-connector-response-transaction-void-declined",
} as const;
/**
 * The name of this resource. Is always `payment-connector-response-transaction-void-declined`.
 */
export type PaymentConnectorResponseTransactionVoidDeclinedEventName = ClosedEnum<
    typeof PaymentConnectorResponseTransactionVoidDeclinedEventName
>;

/**
 * Additional context for this event.
 */
export type PaymentConnectorResponseTransactionVoidDeclinedEventContext = {
    /**
     * The unique ID of the payment service used.
     */
    paymentServiceId?: string | undefined;
    /**
     * The display name of the payment service used.
     */
    paymentServiceDisplayName?: string | undefined;
    /**
     * The payment service definition used.
     */
    paymentServiceDefinitionId?: string | undefined;
    /**
     * The external ID of the transaction as set by the payment service.
     */
    paymentServiceTransactionId?: string | null | undefined;
    /**
     * A raw response code returned for the failure.
     */
    code?: string | null | undefined;
};

/**
 * This event logs the exact details parsed details for a declined void
 *
 * @remarks
 * as reported by our connector.
 */
export type PaymentConnectorResponseTransactionVoidDeclinedEvent = {
    /**
     * The type of this resource. Is always `transaction-event`.
     */
    type?: PaymentConnectorResponseTransactionVoidDeclinedEventType | undefined;
    /**
     * The unique identifier for this event.
     */
    id?: string | undefined;
    /**
     * The name of this resource. Is always `payment-connector-response-transaction-void-declined`.
     */
    name?: PaymentConnectorResponseTransactionVoidDeclinedEventName | undefined;
    /**
     * The date and time when this transaction was created in our system.
     */
    createdAt?: Date | undefined;
    /**
     * Additional context for this event.
     */
    context?: PaymentConnectorResponseTransactionVoidDeclinedEventContext | undefined;
};

/** @internal */
export const PaymentConnectorResponseTransactionVoidDeclinedEventType$inboundSchema: z.ZodNativeEnum<
    typeof PaymentConnectorResponseTransactionVoidDeclinedEventType
> = z.nativeEnum(PaymentConnectorResponseTransactionVoidDeclinedEventType);

/** @internal */
export const PaymentConnectorResponseTransactionVoidDeclinedEventType$outboundSchema: z.ZodNativeEnum<
    typeof PaymentConnectorResponseTransactionVoidDeclinedEventType
> = PaymentConnectorResponseTransactionVoidDeclinedEventType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PaymentConnectorResponseTransactionVoidDeclinedEventType$ {
    /** @deprecated use `PaymentConnectorResponseTransactionVoidDeclinedEventType$inboundSchema` instead. */
    export const inboundSchema =
        PaymentConnectorResponseTransactionVoidDeclinedEventType$inboundSchema;
    /** @deprecated use `PaymentConnectorResponseTransactionVoidDeclinedEventType$outboundSchema` instead. */
    export const outboundSchema =
        PaymentConnectorResponseTransactionVoidDeclinedEventType$outboundSchema;
}

/** @internal */
export const PaymentConnectorResponseTransactionVoidDeclinedEventName$inboundSchema: z.ZodNativeEnum<
    typeof PaymentConnectorResponseTransactionVoidDeclinedEventName
> = z.nativeEnum(PaymentConnectorResponseTransactionVoidDeclinedEventName);

/** @internal */
export const PaymentConnectorResponseTransactionVoidDeclinedEventName$outboundSchema: z.ZodNativeEnum<
    typeof PaymentConnectorResponseTransactionVoidDeclinedEventName
> = PaymentConnectorResponseTransactionVoidDeclinedEventName$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PaymentConnectorResponseTransactionVoidDeclinedEventName$ {
    /** @deprecated use `PaymentConnectorResponseTransactionVoidDeclinedEventName$inboundSchema` instead. */
    export const inboundSchema =
        PaymentConnectorResponseTransactionVoidDeclinedEventName$inboundSchema;
    /** @deprecated use `PaymentConnectorResponseTransactionVoidDeclinedEventName$outboundSchema` instead. */
    export const outboundSchema =
        PaymentConnectorResponseTransactionVoidDeclinedEventName$outboundSchema;
}

/** @internal */
export const PaymentConnectorResponseTransactionVoidDeclinedEventContext$inboundSchema: z.ZodType<
    PaymentConnectorResponseTransactionVoidDeclinedEventContext,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        payment_service_id: z.string().optional(),
        payment_service_display_name: z.string().optional(),
        payment_service_definition_id: z.string().optional(),
        payment_service_transaction_id: z.nullable(z.string()).optional(),
        code: z.nullable(z.string()).optional(),
    })
    .transform((v) => {
        return remap$(v, {
            payment_service_id: "paymentServiceId",
            payment_service_display_name: "paymentServiceDisplayName",
            payment_service_definition_id: "paymentServiceDefinitionId",
            payment_service_transaction_id: "paymentServiceTransactionId",
        });
    });

/** @internal */
export type PaymentConnectorResponseTransactionVoidDeclinedEventContext$Outbound = {
    payment_service_id?: string | undefined;
    payment_service_display_name?: string | undefined;
    payment_service_definition_id?: string | undefined;
    payment_service_transaction_id?: string | null | undefined;
    code?: string | null | undefined;
};

/** @internal */
export const PaymentConnectorResponseTransactionVoidDeclinedEventContext$outboundSchema: z.ZodType<
    PaymentConnectorResponseTransactionVoidDeclinedEventContext$Outbound,
    z.ZodTypeDef,
    PaymentConnectorResponseTransactionVoidDeclinedEventContext
> = z
    .object({
        paymentServiceId: z.string().optional(),
        paymentServiceDisplayName: z.string().optional(),
        paymentServiceDefinitionId: z.string().optional(),
        paymentServiceTransactionId: z.nullable(z.string()).optional(),
        code: z.nullable(z.string()).optional(),
    })
    .transform((v) => {
        return remap$(v, {
            paymentServiceId: "payment_service_id",
            paymentServiceDisplayName: "payment_service_display_name",
            paymentServiceDefinitionId: "payment_service_definition_id",
            paymentServiceTransactionId: "payment_service_transaction_id",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PaymentConnectorResponseTransactionVoidDeclinedEventContext$ {
    /** @deprecated use `PaymentConnectorResponseTransactionVoidDeclinedEventContext$inboundSchema` instead. */
    export const inboundSchema =
        PaymentConnectorResponseTransactionVoidDeclinedEventContext$inboundSchema;
    /** @deprecated use `PaymentConnectorResponseTransactionVoidDeclinedEventContext$outboundSchema` instead. */
    export const outboundSchema =
        PaymentConnectorResponseTransactionVoidDeclinedEventContext$outboundSchema;
    /** @deprecated use `PaymentConnectorResponseTransactionVoidDeclinedEventContext$Outbound` instead. */
    export type Outbound = PaymentConnectorResponseTransactionVoidDeclinedEventContext$Outbound;
}

/** @internal */
export const PaymentConnectorResponseTransactionVoidDeclinedEvent$inboundSchema: z.ZodType<
    PaymentConnectorResponseTransactionVoidDeclinedEvent,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        type: PaymentConnectorResponseTransactionVoidDeclinedEventType$inboundSchema.optional(),
        id: z.string().optional(),
        name: PaymentConnectorResponseTransactionVoidDeclinedEventName$inboundSchema.optional(),
        created_at: z
            .string()
            .datetime({ offset: true })
            .transform((v) => new Date(v))
            .optional(),
        context: z
            .lazy(() => PaymentConnectorResponseTransactionVoidDeclinedEventContext$inboundSchema)
            .optional(),
    })
    .transform((v) => {
        return remap$(v, {
            created_at: "createdAt",
        });
    });

/** @internal */
export type PaymentConnectorResponseTransactionVoidDeclinedEvent$Outbound = {
    type?: string | undefined;
    id?: string | undefined;
    name?: string | undefined;
    created_at?: string | undefined;
    context?: PaymentConnectorResponseTransactionVoidDeclinedEventContext$Outbound | undefined;
};

/** @internal */
export const PaymentConnectorResponseTransactionVoidDeclinedEvent$outboundSchema: z.ZodType<
    PaymentConnectorResponseTransactionVoidDeclinedEvent$Outbound,
    z.ZodTypeDef,
    PaymentConnectorResponseTransactionVoidDeclinedEvent
> = z
    .object({
        type: PaymentConnectorResponseTransactionVoidDeclinedEventType$outboundSchema.optional(),
        id: z.string().optional(),
        name: PaymentConnectorResponseTransactionVoidDeclinedEventName$outboundSchema.optional(),
        createdAt: z
            .date()
            .transform((v) => v.toISOString())
            .optional(),
        context: z
            .lazy(() => PaymentConnectorResponseTransactionVoidDeclinedEventContext$outboundSchema)
            .optional(),
    })
    .transform((v) => {
        return remap$(v, {
            createdAt: "created_at",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PaymentConnectorResponseTransactionVoidDeclinedEvent$ {
    /** @deprecated use `PaymentConnectorResponseTransactionVoidDeclinedEvent$inboundSchema` instead. */
    export const inboundSchema = PaymentConnectorResponseTransactionVoidDeclinedEvent$inboundSchema;
    /** @deprecated use `PaymentConnectorResponseTransactionVoidDeclinedEvent$outboundSchema` instead. */
    export const outboundSchema =
        PaymentConnectorResponseTransactionVoidDeclinedEvent$outboundSchema;
    /** @deprecated use `PaymentConnectorResponseTransactionVoidDeclinedEvent$Outbound` instead. */
    export type Outbound = PaymentConnectorResponseTransactionVoidDeclinedEvent$Outbound;
}

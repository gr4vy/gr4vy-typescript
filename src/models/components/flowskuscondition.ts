/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { ClosedEnum } from "../../types/enums.js";
import * as z from "zod";

/**
 * The type of match made for this rule.
 */
export const FlowSKUsConditionName = {
    Skus: "skus",
} as const;
/**
 * The type of match made for this rule.
 */
export type FlowSKUsConditionName = ClosedEnum<typeof FlowSKUsConditionName>;

/**
 * The comparison to make on the `value`.
 */
export const FlowSKUsConditionOperator = {
    IncludesAll: "includes_all",
    IncludesAtLeastOne: "includes_at_least_one",
    IncludesNone: "includes_none",
} as const;
/**
 * The comparison to make on the `value`.
 */
export type FlowSKUsConditionOperator = ClosedEnum<typeof FlowSKUsConditionOperator>;

/**
 * Cart items' SKUs conditions with a name, operator, and value.
 */
export type FlowSKUsCondition = {
    /**
     * The type of match made for this rule.
     */
    name: FlowSKUsConditionName;
    /**
     * The comparison to make on the `value`.
     */
    operator: FlowSKUsConditionOperator;
    /**
     * Cart items' SKU values to compare the transaction to.
     */
    value: Array<string>;
};

/** @internal */
export const FlowSKUsConditionName$inboundSchema: z.ZodNativeEnum<typeof FlowSKUsConditionName> =
    z.nativeEnum(FlowSKUsConditionName);

/** @internal */
export const FlowSKUsConditionName$outboundSchema: z.ZodNativeEnum<typeof FlowSKUsConditionName> =
    FlowSKUsConditionName$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FlowSKUsConditionName$ {
    /** @deprecated use `FlowSKUsConditionName$inboundSchema` instead. */
    export const inboundSchema = FlowSKUsConditionName$inboundSchema;
    /** @deprecated use `FlowSKUsConditionName$outboundSchema` instead. */
    export const outboundSchema = FlowSKUsConditionName$outboundSchema;
}

/** @internal */
export const FlowSKUsConditionOperator$inboundSchema: z.ZodNativeEnum<
    typeof FlowSKUsConditionOperator
> = z.nativeEnum(FlowSKUsConditionOperator);

/** @internal */
export const FlowSKUsConditionOperator$outboundSchema: z.ZodNativeEnum<
    typeof FlowSKUsConditionOperator
> = FlowSKUsConditionOperator$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FlowSKUsConditionOperator$ {
    /** @deprecated use `FlowSKUsConditionOperator$inboundSchema` instead. */
    export const inboundSchema = FlowSKUsConditionOperator$inboundSchema;
    /** @deprecated use `FlowSKUsConditionOperator$outboundSchema` instead. */
    export const outboundSchema = FlowSKUsConditionOperator$outboundSchema;
}

/** @internal */
export const FlowSKUsCondition$inboundSchema: z.ZodType<FlowSKUsCondition, z.ZodTypeDef, unknown> =
    z.object({
        name: FlowSKUsConditionName$inboundSchema,
        operator: FlowSKUsConditionOperator$inboundSchema,
        value: z.array(z.string()),
    });

/** @internal */
export type FlowSKUsCondition$Outbound = {
    name: string;
    operator: string;
    value: Array<string>;
};

/** @internal */
export const FlowSKUsCondition$outboundSchema: z.ZodType<
    FlowSKUsCondition$Outbound,
    z.ZodTypeDef,
    FlowSKUsCondition
> = z.object({
    name: FlowSKUsConditionName$outboundSchema,
    operator: FlowSKUsConditionOperator$outboundSchema,
    value: z.array(z.string()),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FlowSKUsCondition$ {
    /** @deprecated use `FlowSKUsCondition$inboundSchema` instead. */
    export const inboundSchema = FlowSKUsCondition$inboundSchema;
    /** @deprecated use `FlowSKUsCondition$outboundSchema` instead. */
    export const outboundSchema = FlowSKUsCondition$outboundSchema;
    /** @deprecated use `FlowSKUsCondition$Outbound` instead. */
    export type Outbound = FlowSKUsCondition$Outbound;
}

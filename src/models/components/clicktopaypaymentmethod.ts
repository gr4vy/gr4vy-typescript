/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives.js";
import { ClosedEnum } from "../../types/enums.js";
import * as z from "zod";

export const ClickToPayPaymentMethodMethod = {
    ClickToPay: "click-to-pay",
} as const;
export type ClickToPayPaymentMethodMethod = ClosedEnum<typeof ClickToPayPaymentMethodMethod>;

/**
 * Base model with JSON encoders.
 */
export type ClickToPayPaymentMethod = {
    method?: ClickToPayPaymentMethodMethod | undefined;
    merchantTransactionId: string;
    srcCorrelationId: string;
    srcDpaId: string;
    srcCxFlowId?: string | undefined;
};

/** @internal */
export const ClickToPayPaymentMethodMethod$inboundSchema: z.ZodNativeEnum<
    typeof ClickToPayPaymentMethodMethod
> = z.nativeEnum(ClickToPayPaymentMethodMethod);

/** @internal */
export const ClickToPayPaymentMethodMethod$outboundSchema: z.ZodNativeEnum<
    typeof ClickToPayPaymentMethodMethod
> = ClickToPayPaymentMethodMethod$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ClickToPayPaymentMethodMethod$ {
    /** @deprecated use `ClickToPayPaymentMethodMethod$inboundSchema` instead. */
    export const inboundSchema = ClickToPayPaymentMethodMethod$inboundSchema;
    /** @deprecated use `ClickToPayPaymentMethodMethod$outboundSchema` instead. */
    export const outboundSchema = ClickToPayPaymentMethodMethod$outboundSchema;
}

/** @internal */
export const ClickToPayPaymentMethod$inboundSchema: z.ZodType<
    ClickToPayPaymentMethod,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        method: ClickToPayPaymentMethodMethod$inboundSchema.default("click-to-pay"),
        merchant_transaction_id: z.string(),
        src_correlation_id: z.string(),
        src_dpa_id: z.string(),
        src_cx_flow_id: z.string().optional(),
    })
    .transform((v) => {
        return remap$(v, {
            merchant_transaction_id: "merchantTransactionId",
            src_correlation_id: "srcCorrelationId",
            src_dpa_id: "srcDpaId",
            src_cx_flow_id: "srcCxFlowId",
        });
    });

/** @internal */
export type ClickToPayPaymentMethod$Outbound = {
    method: string;
    merchant_transaction_id: string;
    src_correlation_id: string;
    src_dpa_id: string;
    src_cx_flow_id?: string | undefined;
};

/** @internal */
export const ClickToPayPaymentMethod$outboundSchema: z.ZodType<
    ClickToPayPaymentMethod$Outbound,
    z.ZodTypeDef,
    ClickToPayPaymentMethod
> = z
    .object({
        method: ClickToPayPaymentMethodMethod$outboundSchema.default("click-to-pay"),
        merchantTransactionId: z.string(),
        srcCorrelationId: z.string(),
        srcDpaId: z.string(),
        srcCxFlowId: z.string().optional(),
    })
    .transform((v) => {
        return remap$(v, {
            merchantTransactionId: "merchant_transaction_id",
            srcCorrelationId: "src_correlation_id",
            srcDpaId: "src_dpa_id",
            srcCxFlowId: "src_cx_flow_id",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ClickToPayPaymentMethod$ {
    /** @deprecated use `ClickToPayPaymentMethod$inboundSchema` instead. */
    export const inboundSchema = ClickToPayPaymentMethod$inboundSchema;
    /** @deprecated use `ClickToPayPaymentMethod$outboundSchema` instead. */
    export const outboundSchema = ClickToPayPaymentMethod$outboundSchema;
    /** @deprecated use `ClickToPayPaymentMethod$Outbound` instead. */
    export type Outbound = ClickToPayPaymentMethod$Outbound;
}

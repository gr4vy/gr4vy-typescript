/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod/v3";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  CardScheme,
  CardScheme$inboundSchema,
  CardScheme$outboundSchema,
} from "./cardscheme.js";
import {
  CheckoutSessionPaymentMethodDetails,
  CheckoutSessionPaymentMethodDetails$inboundSchema,
  CheckoutSessionPaymentMethodDetails$Outbound,
  CheckoutSessionPaymentMethodDetails$outboundSchema,
} from "./checkoutsessionpaymentmethoddetails.js";

export type CheckoutSessionPaymentMethod = {
  /**
   * Always `payment-method`
   */
  type?: "payment-method" | undefined;
  /**
   * The ID of the payment method.
   */
  id?: string | null | undefined;
  /**
   * Details for credit or debit card payment method.
   */
  details?: CheckoutSessionPaymentMethodDetails | null | undefined;
  /**
   * The last 4 digits of the the card.
   */
  label?: string | null | undefined;
  /**
   * Always `card`
   */
  method?: "card" | undefined;
  /**
   * The scheme of the card.
   */
  scheme?: CardScheme | null | undefined;
  /**
   * The unique hash derived from the card number.
   */
  fingerprint?: string | null | undefined;
};

/** @internal */
export const CheckoutSessionPaymentMethod$inboundSchema: z.ZodType<
  CheckoutSessionPaymentMethod,
  z.ZodTypeDef,
  unknown
> = z.object({
  type: z.literal("payment-method").default("payment-method"),
  id: z.nullable(z.string()).optional(),
  details: z.nullable(CheckoutSessionPaymentMethodDetails$inboundSchema)
    .optional(),
  label: z.nullable(z.string()).optional(),
  method: z.literal("card").default("card"),
  scheme: z.nullable(CardScheme$inboundSchema).optional(),
  fingerprint: z.nullable(z.string()).optional(),
});

/** @internal */
export type CheckoutSessionPaymentMethod$Outbound = {
  type: "payment-method";
  id?: string | null | undefined;
  details?: CheckoutSessionPaymentMethodDetails$Outbound | null | undefined;
  label?: string | null | undefined;
  method: "card";
  scheme?: string | null | undefined;
  fingerprint?: string | null | undefined;
};

/** @internal */
export const CheckoutSessionPaymentMethod$outboundSchema: z.ZodType<
  CheckoutSessionPaymentMethod$Outbound,
  z.ZodTypeDef,
  CheckoutSessionPaymentMethod
> = z.object({
  type: z.literal("payment-method").default("payment-method" as const),
  id: z.nullable(z.string()).optional(),
  details: z.nullable(CheckoutSessionPaymentMethodDetails$outboundSchema)
    .optional(),
  label: z.nullable(z.string()).optional(),
  method: z.literal("card").default("card" as const),
  scheme: z.nullable(CardScheme$outboundSchema).optional(),
  fingerprint: z.nullable(z.string()).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CheckoutSessionPaymentMethod$ {
  /** @deprecated use `CheckoutSessionPaymentMethod$inboundSchema` instead. */
  export const inboundSchema = CheckoutSessionPaymentMethod$inboundSchema;
  /** @deprecated use `CheckoutSessionPaymentMethod$outboundSchema` instead. */
  export const outboundSchema = CheckoutSessionPaymentMethod$outboundSchema;
  /** @deprecated use `CheckoutSessionPaymentMethod$Outbound` instead. */
  export type Outbound = CheckoutSessionPaymentMethod$Outbound;
}

export function checkoutSessionPaymentMethodToJSON(
  checkoutSessionPaymentMethod: CheckoutSessionPaymentMethod,
): string {
  return JSON.stringify(
    CheckoutSessionPaymentMethod$outboundSchema.parse(
      checkoutSessionPaymentMethod,
    ),
  );
}

export function checkoutSessionPaymentMethodFromJSON(
  jsonString: string,
): SafeParseResult<CheckoutSessionPaymentMethod, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => CheckoutSessionPaymentMethod$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CheckoutSessionPaymentMethod' from JSON`,
  );
}

/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives";
import * as z from "zod";

/**
 * A key-value pair that represents a field defined in the definition for this gift card service.
 */
export type GiftCardServiceCreateRequestFields = {
    /**
     * The key of the field to set a value for.
     */
    key: string;
    /**
     * The value of a field to set.
     */
    value: string;
};

/**
 * Request body for activating a gift card service.
 */
export type GiftCardServiceCreateRequest = {
    /**
     * The ID of the gift card service to use.
     */
    giftCardServiceDefinitionId: string;
    /**
     * A custom name for the service. This will be shown in the Admin UI.
     */
    displayName: string;
    /**
     * A list of fields, each containing a key-value pair for each field defined
     *
     * @remarks
     * by the definition for this gift card service.
     */
    fields: Array<GiftCardServiceCreateRequestFields>;
    /**
     * Defines if this service is currently active or not.
     */
    active?: boolean | undefined;
};

/** @internal */
export namespace GiftCardServiceCreateRequestFields$ {
    export const inboundSchema: z.ZodType<
        GiftCardServiceCreateRequestFields,
        z.ZodTypeDef,
        unknown
    > = z.object({
        key: z.string(),
        value: z.string(),
    });

    export type Outbound = {
        key: string;
        value: string;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        GiftCardServiceCreateRequestFields
    > = z.object({
        key: z.string(),
        value: z.string(),
    });
}

/** @internal */
export namespace GiftCardServiceCreateRequest$ {
    export const inboundSchema: z.ZodType<GiftCardServiceCreateRequest, z.ZodTypeDef, unknown> = z
        .object({
            gift_card_service_definition_id: z.string(),
            display_name: z.string(),
            fields: z.array(z.lazy(() => GiftCardServiceCreateRequestFields$.inboundSchema)),
            active: z.boolean().default(true),
        })
        .transform((v) => {
            return remap$(v, {
                gift_card_service_definition_id: "giftCardServiceDefinitionId",
                display_name: "displayName",
            });
        });

    export type Outbound = {
        gift_card_service_definition_id: string;
        display_name: string;
        fields: Array<GiftCardServiceCreateRequestFields$.Outbound>;
        active: boolean;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, GiftCardServiceCreateRequest> = z
        .object({
            giftCardServiceDefinitionId: z.string(),
            displayName: z.string(),
            fields: z.array(z.lazy(() => GiftCardServiceCreateRequestFields$.outboundSchema)),
            active: z.boolean().default(true),
        })
        .transform((v) => {
            return remap$(v, {
                giftCardServiceDefinitionId: "gift_card_service_definition_id",
                displayName: "display_name",
            });
        });
}

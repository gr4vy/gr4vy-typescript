/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives";
import * as z from "zod";

/**
 * The browser target that an approval URL must be opened in. If `any` or `null`, then there is no specific requirement.
 */
export enum ApprovalUiTarget {
    Any = "any",
    NewWindow = "new_window",
}

/**
 * Configuration items for the payment service.
 */
export type PaymentServiceDefinitionConfiguration = {
    /**
     * Height of the approval interface in either pixels or view height (vh).
     */
    approvalUiHeight?: string | undefined;
    /**
     * Width of the approval interface in either pixels or view width (vw).
     */
    approvalUiWidth?: string | undefined;
    /**
     * The browser target that an approval URL must be opened in. If `any` or `null`, then there is no specific requirement.
     */
    approvalUiTarget?: ApprovalUiTarget | null | undefined;
};

/** @internal */
export namespace ApprovalUiTarget$ {
    export const inboundSchema = z.nativeEnum(ApprovalUiTarget);
    export const outboundSchema = inboundSchema;
}

/** @internal */
export namespace PaymentServiceDefinitionConfiguration$ {
    export const inboundSchema: z.ZodType<
        PaymentServiceDefinitionConfiguration,
        z.ZodTypeDef,
        unknown
    > = z
        .object({
            approval_ui_height: z.string().optional(),
            approval_ui_width: z.string().optional(),
            approval_ui_target: z.nullable(ApprovalUiTarget$.inboundSchema).optional(),
        })
        .transform((v) => {
            return remap$(v, {
                approval_ui_height: "approvalUiHeight",
                approval_ui_width: "approvalUiWidth",
                approval_ui_target: "approvalUiTarget",
            });
        });

    export type Outbound = {
        approval_ui_height?: string | undefined;
        approval_ui_width?: string | undefined;
        approval_ui_target?: string | null | undefined;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        PaymentServiceDefinitionConfiguration
    > = z
        .object({
            approvalUiHeight: z.string().optional(),
            approvalUiWidth: z.string().optional(),
            approvalUiTarget: z.nullable(ApprovalUiTarget$.outboundSchema).optional(),
        })
        .transform((v) => {
            return remap$(v, {
                approvalUiHeight: "approval_ui_height",
                approvalUiWidth: "approval_ui_width",
                approvalUiTarget: "approval_ui_target",
            });
        });
}

/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives.js";
import { ClosedEnum } from "../../types/enums.js";
import * as z from "zod";

/**
 * The type of this resource. Is always `transaction-event`.
 */
export const PaymentConnectorResponseTransactionCaptureDeclinedEventType = {
    TransactionEvent: "transaction-event",
} as const;
/**
 * The type of this resource. Is always `transaction-event`.
 */
export type PaymentConnectorResponseTransactionCaptureDeclinedEventType = ClosedEnum<
    typeof PaymentConnectorResponseTransactionCaptureDeclinedEventType
>;

/**
 * The name of this resource. Is always `payment-connector-response-transaction-capture-declined`.
 */
export const PaymentConnectorResponseTransactionCaptureDeclinedEventName = {
    PaymentConnectorResponseTransactionCaptureDeclined:
        "payment-connector-response-transaction-capture-declined",
} as const;
/**
 * The name of this resource. Is always `payment-connector-response-transaction-capture-declined`.
 */
export type PaymentConnectorResponseTransactionCaptureDeclinedEventName = ClosedEnum<
    typeof PaymentConnectorResponseTransactionCaptureDeclinedEventName
>;

/**
 * The response code received from the payment service for the Address
 *
 * @remarks
 * Verification Check (AVS). This code is mapped to a standardized Gr4vy
 * AVS response code.
 *
 * - `no_match` - neither address or postal code match
 * - `match` - both address and postal code match
 * - `partial_match_address` - address matches but postal code does not
 * - `partial_match_postcode` - postal code matches but address does not
 * - `unavailable ` - AVS is unavailable for card/country
 *
 * The value of this field can be `null` if the payment service did not
 * provide a response.
 */
export const PaymentConnectorResponseTransactionCaptureDeclinedEventAvsResponseCode = {
    NoMatch: "no_match",
    Match: "match",
    PartialMatchAddress: "partial_match_address",
    PartialMatchPostcode: "partial_match_postcode",
    Unavailable: "unavailable",
} as const;
/**
 * The response code received from the payment service for the Address
 *
 * @remarks
 * Verification Check (AVS). This code is mapped to a standardized Gr4vy
 * AVS response code.
 *
 * - `no_match` - neither address or postal code match
 * - `match` - both address and postal code match
 * - `partial_match_address` - address matches but postal code does not
 * - `partial_match_postcode` - postal code matches but address does not
 * - `unavailable ` - AVS is unavailable for card/country
 *
 * The value of this field can be `null` if the payment service did not
 * provide a response.
 */
export type PaymentConnectorResponseTransactionCaptureDeclinedEventAvsResponseCode = ClosedEnum<
    typeof PaymentConnectorResponseTransactionCaptureDeclinedEventAvsResponseCode
>;

/**
 * The response code received from the payment service for the Card
 *
 * @remarks
 * Verification Value (CVV). This code is mapped to a standardized Gr4vy
 * CVV response code.
 *
 * - `no_match` - the CVV does not match the expected value
 * - `match` - the CVV matches the expected value
 * - `unavailable ` - CVV check unavailable for card our country
 * - `not_provided ` - CVV not provided
 *
 * The value of this field can be `null` if the payment service did not
 * provide a response.
 */
export const PaymentConnectorResponseTransactionCaptureDeclinedEventCvvResponseCode = {
    NoMatch: "no_match",
    Match: "match",
    Unavailable: "unavailable",
} as const;
/**
 * The response code received from the payment service for the Card
 *
 * @remarks
 * Verification Value (CVV). This code is mapped to a standardized Gr4vy
 * CVV response code.
 *
 * - `no_match` - the CVV does not match the expected value
 * - `match` - the CVV matches the expected value
 * - `unavailable ` - CVV check unavailable for card our country
 * - `not_provided ` - CVV not provided
 *
 * The value of this field can be `null` if the payment service did not
 * provide a response.
 */
export type PaymentConnectorResponseTransactionCaptureDeclinedEventCvvResponseCode = ClosedEnum<
    typeof PaymentConnectorResponseTransactionCaptureDeclinedEventCvvResponseCode
>;

/**
 * The card scheme sent to the connector.
 */
export const PaymentConnectorResponseTransactionCaptureDeclinedEventPaymentMethodScheme = {
    Accel: "accel",
    Amex: "amex",
    Bancontact: "bancontact",
    CarteBancaire: "carte-bancaire",
    Cirrus: "cirrus",
    Culiance: "culiance",
    Dankort: "dankort",
    DinersClub: "diners-club",
    Discover: "discover",
    EftposAustralia: "eftpos-australia",
    Elo: "elo",
    Hipercard: "hipercard",
    Jcb: "jcb",
    Maestro: "maestro",
    Mastercard: "mastercard",
    Mir: "mir",
    Nyce: "nyce",
    Other: "other",
    Pulse: "pulse",
    Rupay: "rupay",
    Star: "star",
    Uatp: "uatp",
    Unionpay: "unionpay",
    Visa: "visa",
} as const;
/**
 * The card scheme sent to the connector.
 */
export type PaymentConnectorResponseTransactionCaptureDeclinedEventPaymentMethodScheme = ClosedEnum<
    typeof PaymentConnectorResponseTransactionCaptureDeclinedEventPaymentMethodScheme
>;

/**
 * Additional context for this event.
 */
export type PaymentConnectorResponseTransactionCaptureDeclinedEventContext = {
    /**
     * The unique ID of the payment service used.
     */
    paymentServiceId?: string | undefined;
    /**
     * The display name of the payment service used.
     */
    paymentServiceDisplayName?: string | undefined;
    /**
     * The payment service definition used.
     */
    paymentServiceDefinitionId?: string | undefined;
    /**
     * The external ID of the transaction as set by the payment service.
     */
    paymentServiceTransactionId?: string | null | undefined;
    /**
     * A raw response code returned for the failure.
     */
    code?: string | null | undefined;
    /**
     * This is the response code received from the payment service. This
     *
     * @remarks
     * can be set to any value and is not standardized across different
     * payment services.
     */
    rawResponseCode?: string | null | undefined;
    /**
     * This is the response description received from the payment service. This
     *
     * @remarks
     * can be set to any value and is not standardized across different
     * payment services.
     */
    rawResponseDescription?: string | null | undefined;
    /**
     * The response code received from the payment service for the Address
     *
     * @remarks
     * Verification Check (AVS). This code is mapped to a standardized Gr4vy
     * AVS response code.
     *
     * - `no_match` - neither address or postal code match
     * - `match` - both address and postal code match
     * - `partial_match_address` - address matches but postal code does not
     * - `partial_match_postcode` - postal code matches but address does not
     * - `unavailable ` - AVS is unavailable for card/country
     *
     * The value of this field can be `null` if the payment service did not
     * provide a response.
     */
    avsResponseCode?:
        | PaymentConnectorResponseTransactionCaptureDeclinedEventAvsResponseCode
        | null
        | undefined;
    /**
     * The response code received from the payment service for the Card
     *
     * @remarks
     * Verification Value (CVV). This code is mapped to a standardized Gr4vy
     * CVV response code.
     *
     * - `no_match` - the CVV does not match the expected value
     * - `match` - the CVV matches the expected value
     * - `unavailable ` - CVV check unavailable for card our country
     * - `not_provided ` - CVV not provided
     *
     * The value of this field can be `null` if the payment service did not
     * provide a response.
     */
    cvvResponseCode?:
        | PaymentConnectorResponseTransactionCaptureDeclinedEventCvvResponseCode
        | null
        | undefined;
    /**
     * The card scheme sent to the connector.
     */
    paymentMethodScheme?:
        | PaymentConnectorResponseTransactionCaptureDeclinedEventPaymentMethodScheme
        | null
        | undefined;
};

/**
 * This event logs the exact details parsed details for a declined capture
 *
 * @remarks
 * as reported by our connector.
 */
export type PaymentConnectorResponseTransactionCaptureDeclinedEvent = {
    /**
     * The type of this resource. Is always `transaction-event`.
     */
    type?: PaymentConnectorResponseTransactionCaptureDeclinedEventType | undefined;
    /**
     * The unique identifier for this event.
     */
    id?: string | undefined;
    /**
     * The name of this resource. Is always `payment-connector-response-transaction-capture-declined`.
     */
    name?: PaymentConnectorResponseTransactionCaptureDeclinedEventName | undefined;
    /**
     * The date and time when this transaction was created in our system.
     */
    createdAt?: Date | undefined;
    /**
     * Additional context for this event.
     */
    context?: PaymentConnectorResponseTransactionCaptureDeclinedEventContext | undefined;
};

/** @internal */
export const PaymentConnectorResponseTransactionCaptureDeclinedEventType$inboundSchema: z.ZodNativeEnum<
    typeof PaymentConnectorResponseTransactionCaptureDeclinedEventType
> = z.nativeEnum(PaymentConnectorResponseTransactionCaptureDeclinedEventType);

/** @internal */
export const PaymentConnectorResponseTransactionCaptureDeclinedEventType$outboundSchema: z.ZodNativeEnum<
    typeof PaymentConnectorResponseTransactionCaptureDeclinedEventType
> = PaymentConnectorResponseTransactionCaptureDeclinedEventType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PaymentConnectorResponseTransactionCaptureDeclinedEventType$ {
    /** @deprecated use `PaymentConnectorResponseTransactionCaptureDeclinedEventType$inboundSchema` instead. */
    export const inboundSchema =
        PaymentConnectorResponseTransactionCaptureDeclinedEventType$inboundSchema;
    /** @deprecated use `PaymentConnectorResponseTransactionCaptureDeclinedEventType$outboundSchema` instead. */
    export const outboundSchema =
        PaymentConnectorResponseTransactionCaptureDeclinedEventType$outboundSchema;
}

/** @internal */
export const PaymentConnectorResponseTransactionCaptureDeclinedEventName$inboundSchema: z.ZodNativeEnum<
    typeof PaymentConnectorResponseTransactionCaptureDeclinedEventName
> = z.nativeEnum(PaymentConnectorResponseTransactionCaptureDeclinedEventName);

/** @internal */
export const PaymentConnectorResponseTransactionCaptureDeclinedEventName$outboundSchema: z.ZodNativeEnum<
    typeof PaymentConnectorResponseTransactionCaptureDeclinedEventName
> = PaymentConnectorResponseTransactionCaptureDeclinedEventName$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PaymentConnectorResponseTransactionCaptureDeclinedEventName$ {
    /** @deprecated use `PaymentConnectorResponseTransactionCaptureDeclinedEventName$inboundSchema` instead. */
    export const inboundSchema =
        PaymentConnectorResponseTransactionCaptureDeclinedEventName$inboundSchema;
    /** @deprecated use `PaymentConnectorResponseTransactionCaptureDeclinedEventName$outboundSchema` instead. */
    export const outboundSchema =
        PaymentConnectorResponseTransactionCaptureDeclinedEventName$outboundSchema;
}

/** @internal */
export const PaymentConnectorResponseTransactionCaptureDeclinedEventAvsResponseCode$inboundSchema: z.ZodNativeEnum<
    typeof PaymentConnectorResponseTransactionCaptureDeclinedEventAvsResponseCode
> = z.nativeEnum(PaymentConnectorResponseTransactionCaptureDeclinedEventAvsResponseCode);

/** @internal */
export const PaymentConnectorResponseTransactionCaptureDeclinedEventAvsResponseCode$outboundSchema: z.ZodNativeEnum<
    typeof PaymentConnectorResponseTransactionCaptureDeclinedEventAvsResponseCode
> = PaymentConnectorResponseTransactionCaptureDeclinedEventAvsResponseCode$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PaymentConnectorResponseTransactionCaptureDeclinedEventAvsResponseCode$ {
    /** @deprecated use `PaymentConnectorResponseTransactionCaptureDeclinedEventAvsResponseCode$inboundSchema` instead. */
    export const inboundSchema =
        PaymentConnectorResponseTransactionCaptureDeclinedEventAvsResponseCode$inboundSchema;
    /** @deprecated use `PaymentConnectorResponseTransactionCaptureDeclinedEventAvsResponseCode$outboundSchema` instead. */
    export const outboundSchema =
        PaymentConnectorResponseTransactionCaptureDeclinedEventAvsResponseCode$outboundSchema;
}

/** @internal */
export const PaymentConnectorResponseTransactionCaptureDeclinedEventCvvResponseCode$inboundSchema: z.ZodNativeEnum<
    typeof PaymentConnectorResponseTransactionCaptureDeclinedEventCvvResponseCode
> = z.nativeEnum(PaymentConnectorResponseTransactionCaptureDeclinedEventCvvResponseCode);

/** @internal */
export const PaymentConnectorResponseTransactionCaptureDeclinedEventCvvResponseCode$outboundSchema: z.ZodNativeEnum<
    typeof PaymentConnectorResponseTransactionCaptureDeclinedEventCvvResponseCode
> = PaymentConnectorResponseTransactionCaptureDeclinedEventCvvResponseCode$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PaymentConnectorResponseTransactionCaptureDeclinedEventCvvResponseCode$ {
    /** @deprecated use `PaymentConnectorResponseTransactionCaptureDeclinedEventCvvResponseCode$inboundSchema` instead. */
    export const inboundSchema =
        PaymentConnectorResponseTransactionCaptureDeclinedEventCvvResponseCode$inboundSchema;
    /** @deprecated use `PaymentConnectorResponseTransactionCaptureDeclinedEventCvvResponseCode$outboundSchema` instead. */
    export const outboundSchema =
        PaymentConnectorResponseTransactionCaptureDeclinedEventCvvResponseCode$outboundSchema;
}

/** @internal */
export const PaymentConnectorResponseTransactionCaptureDeclinedEventPaymentMethodScheme$inboundSchema: z.ZodNativeEnum<
    typeof PaymentConnectorResponseTransactionCaptureDeclinedEventPaymentMethodScheme
> = z.nativeEnum(PaymentConnectorResponseTransactionCaptureDeclinedEventPaymentMethodScheme);

/** @internal */
export const PaymentConnectorResponseTransactionCaptureDeclinedEventPaymentMethodScheme$outboundSchema: z.ZodNativeEnum<
    typeof PaymentConnectorResponseTransactionCaptureDeclinedEventPaymentMethodScheme
> = PaymentConnectorResponseTransactionCaptureDeclinedEventPaymentMethodScheme$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PaymentConnectorResponseTransactionCaptureDeclinedEventPaymentMethodScheme$ {
    /** @deprecated use `PaymentConnectorResponseTransactionCaptureDeclinedEventPaymentMethodScheme$inboundSchema` instead. */
    export const inboundSchema =
        PaymentConnectorResponseTransactionCaptureDeclinedEventPaymentMethodScheme$inboundSchema;
    /** @deprecated use `PaymentConnectorResponseTransactionCaptureDeclinedEventPaymentMethodScheme$outboundSchema` instead. */
    export const outboundSchema =
        PaymentConnectorResponseTransactionCaptureDeclinedEventPaymentMethodScheme$outboundSchema;
}

/** @internal */
export const PaymentConnectorResponseTransactionCaptureDeclinedEventContext$inboundSchema: z.ZodType<
    PaymentConnectorResponseTransactionCaptureDeclinedEventContext,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        payment_service_id: z.string().optional(),
        payment_service_display_name: z.string().optional(),
        payment_service_definition_id: z.string().optional(),
        payment_service_transaction_id: z.nullable(z.string()).optional(),
        code: z.nullable(z.string()).optional(),
        raw_response_code: z.nullable(z.string()).optional(),
        raw_response_description: z.nullable(z.string()).optional(),
        avs_response_code: z
            .nullable(
                PaymentConnectorResponseTransactionCaptureDeclinedEventAvsResponseCode$inboundSchema
            )
            .optional(),
        cvv_response_code: z
            .nullable(
                PaymentConnectorResponseTransactionCaptureDeclinedEventCvvResponseCode$inboundSchema
            )
            .optional(),
        payment_method_scheme: z
            .nullable(
                PaymentConnectorResponseTransactionCaptureDeclinedEventPaymentMethodScheme$inboundSchema
            )
            .optional(),
    })
    .transform((v) => {
        return remap$(v, {
            payment_service_id: "paymentServiceId",
            payment_service_display_name: "paymentServiceDisplayName",
            payment_service_definition_id: "paymentServiceDefinitionId",
            payment_service_transaction_id: "paymentServiceTransactionId",
            raw_response_code: "rawResponseCode",
            raw_response_description: "rawResponseDescription",
            avs_response_code: "avsResponseCode",
            cvv_response_code: "cvvResponseCode",
            payment_method_scheme: "paymentMethodScheme",
        });
    });

/** @internal */
export type PaymentConnectorResponseTransactionCaptureDeclinedEventContext$Outbound = {
    payment_service_id?: string | undefined;
    payment_service_display_name?: string | undefined;
    payment_service_definition_id?: string | undefined;
    payment_service_transaction_id?: string | null | undefined;
    code?: string | null | undefined;
    raw_response_code?: string | null | undefined;
    raw_response_description?: string | null | undefined;
    avs_response_code?: string | null | undefined;
    cvv_response_code?: string | null | undefined;
    payment_method_scheme?: string | null | undefined;
};

/** @internal */
export const PaymentConnectorResponseTransactionCaptureDeclinedEventContext$outboundSchema: z.ZodType<
    PaymentConnectorResponseTransactionCaptureDeclinedEventContext$Outbound,
    z.ZodTypeDef,
    PaymentConnectorResponseTransactionCaptureDeclinedEventContext
> = z
    .object({
        paymentServiceId: z.string().optional(),
        paymentServiceDisplayName: z.string().optional(),
        paymentServiceDefinitionId: z.string().optional(),
        paymentServiceTransactionId: z.nullable(z.string()).optional(),
        code: z.nullable(z.string()).optional(),
        rawResponseCode: z.nullable(z.string()).optional(),
        rawResponseDescription: z.nullable(z.string()).optional(),
        avsResponseCode: z
            .nullable(
                PaymentConnectorResponseTransactionCaptureDeclinedEventAvsResponseCode$outboundSchema
            )
            .optional(),
        cvvResponseCode: z
            .nullable(
                PaymentConnectorResponseTransactionCaptureDeclinedEventCvvResponseCode$outboundSchema
            )
            .optional(),
        paymentMethodScheme: z
            .nullable(
                PaymentConnectorResponseTransactionCaptureDeclinedEventPaymentMethodScheme$outboundSchema
            )
            .optional(),
    })
    .transform((v) => {
        return remap$(v, {
            paymentServiceId: "payment_service_id",
            paymentServiceDisplayName: "payment_service_display_name",
            paymentServiceDefinitionId: "payment_service_definition_id",
            paymentServiceTransactionId: "payment_service_transaction_id",
            rawResponseCode: "raw_response_code",
            rawResponseDescription: "raw_response_description",
            avsResponseCode: "avs_response_code",
            cvvResponseCode: "cvv_response_code",
            paymentMethodScheme: "payment_method_scheme",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PaymentConnectorResponseTransactionCaptureDeclinedEventContext$ {
    /** @deprecated use `PaymentConnectorResponseTransactionCaptureDeclinedEventContext$inboundSchema` instead. */
    export const inboundSchema =
        PaymentConnectorResponseTransactionCaptureDeclinedEventContext$inboundSchema;
    /** @deprecated use `PaymentConnectorResponseTransactionCaptureDeclinedEventContext$outboundSchema` instead. */
    export const outboundSchema =
        PaymentConnectorResponseTransactionCaptureDeclinedEventContext$outboundSchema;
    /** @deprecated use `PaymentConnectorResponseTransactionCaptureDeclinedEventContext$Outbound` instead. */
    export type Outbound = PaymentConnectorResponseTransactionCaptureDeclinedEventContext$Outbound;
}

/** @internal */
export const PaymentConnectorResponseTransactionCaptureDeclinedEvent$inboundSchema: z.ZodType<
    PaymentConnectorResponseTransactionCaptureDeclinedEvent,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        type: PaymentConnectorResponseTransactionCaptureDeclinedEventType$inboundSchema.optional(),
        id: z.string().optional(),
        name: PaymentConnectorResponseTransactionCaptureDeclinedEventName$inboundSchema.optional(),
        created_at: z
            .string()
            .datetime({ offset: true })
            .transform((v) => new Date(v))
            .optional(),
        context: z
            .lazy(
                () => PaymentConnectorResponseTransactionCaptureDeclinedEventContext$inboundSchema
            )
            .optional(),
    })
    .transform((v) => {
        return remap$(v, {
            created_at: "createdAt",
        });
    });

/** @internal */
export type PaymentConnectorResponseTransactionCaptureDeclinedEvent$Outbound = {
    type?: string | undefined;
    id?: string | undefined;
    name?: string | undefined;
    created_at?: string | undefined;
    context?: PaymentConnectorResponseTransactionCaptureDeclinedEventContext$Outbound | undefined;
};

/** @internal */
export const PaymentConnectorResponseTransactionCaptureDeclinedEvent$outboundSchema: z.ZodType<
    PaymentConnectorResponseTransactionCaptureDeclinedEvent$Outbound,
    z.ZodTypeDef,
    PaymentConnectorResponseTransactionCaptureDeclinedEvent
> = z
    .object({
        type: PaymentConnectorResponseTransactionCaptureDeclinedEventType$outboundSchema.optional(),
        id: z.string().optional(),
        name: PaymentConnectorResponseTransactionCaptureDeclinedEventName$outboundSchema.optional(),
        createdAt: z
            .date()
            .transform((v) => v.toISOString())
            .optional(),
        context: z
            .lazy(
                () => PaymentConnectorResponseTransactionCaptureDeclinedEventContext$outboundSchema
            )
            .optional(),
    })
    .transform((v) => {
        return remap$(v, {
            createdAt: "created_at",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PaymentConnectorResponseTransactionCaptureDeclinedEvent$ {
    /** @deprecated use `PaymentConnectorResponseTransactionCaptureDeclinedEvent$inboundSchema` instead. */
    export const inboundSchema =
        PaymentConnectorResponseTransactionCaptureDeclinedEvent$inboundSchema;
    /** @deprecated use `PaymentConnectorResponseTransactionCaptureDeclinedEvent$outboundSchema` instead. */
    export const outboundSchema =
        PaymentConnectorResponseTransactionCaptureDeclinedEvent$outboundSchema;
    /** @deprecated use `PaymentConnectorResponseTransactionCaptureDeclinedEvent$Outbound` instead. */
    export type Outbound = PaymentConnectorResponseTransactionCaptureDeclinedEvent$Outbound;
}

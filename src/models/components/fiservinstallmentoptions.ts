/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod/v3";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type FiservInstallmentOptions = {
  /**
   * Passes the `order.installmentOptions.numberOfInstallments` field to the Fiserv API.
   */
  numberOfInstallments?: number | null | undefined;
  /**
   * Passes the `order.installmentOptions.installmentsInterest` field to the Fiserv API.
   */
  installmentsInterest?: boolean | null | undefined;
  /**
   * Passes the `order.installmentOptions.installmentDelayMonths` field to the Fiserv API.
   */
  installmentDelayMonths?: number | null | undefined;
  /**
   * Passes the `order.installmentOptions.merchantAdviceCodeSupported` field to the Fiserv API.
   */
  merchantAdviceCodeSupported?: boolean | null | undefined;
};

/** @internal */
export const FiservInstallmentOptions$inboundSchema: z.ZodType<
  FiservInstallmentOptions,
  z.ZodTypeDef,
  unknown
> = z.object({
  numberOfInstallments: z.nullable(z.number().int()).optional(),
  installmentsInterest: z.nullable(z.boolean()).optional(),
  installmentDelayMonths: z.nullable(z.number().int()).optional(),
  merchantAdviceCodeSupported: z.nullable(z.boolean()).optional(),
});

/** @internal */
export type FiservInstallmentOptions$Outbound = {
  numberOfInstallments?: number | null | undefined;
  installmentsInterest?: boolean | null | undefined;
  installmentDelayMonths?: number | null | undefined;
  merchantAdviceCodeSupported?: boolean | null | undefined;
};

/** @internal */
export const FiservInstallmentOptions$outboundSchema: z.ZodType<
  FiservInstallmentOptions$Outbound,
  z.ZodTypeDef,
  FiservInstallmentOptions
> = z.object({
  numberOfInstallments: z.nullable(z.number().int()).optional(),
  installmentsInterest: z.nullable(z.boolean()).optional(),
  installmentDelayMonths: z.nullable(z.number().int()).optional(),
  merchantAdviceCodeSupported: z.nullable(z.boolean()).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FiservInstallmentOptions$ {
  /** @deprecated use `FiservInstallmentOptions$inboundSchema` instead. */
  export const inboundSchema = FiservInstallmentOptions$inboundSchema;
  /** @deprecated use `FiservInstallmentOptions$outboundSchema` instead. */
  export const outboundSchema = FiservInstallmentOptions$outboundSchema;
  /** @deprecated use `FiservInstallmentOptions$Outbound` instead. */
  export type Outbound = FiservInstallmentOptions$Outbound;
}

export function fiservInstallmentOptionsToJSON(
  fiservInstallmentOptions: FiservInstallmentOptions,
): string {
  return JSON.stringify(
    FiservInstallmentOptions$outboundSchema.parse(fiservInstallmentOptions),
  );
}

export function fiservInstallmentOptionsFromJSON(
  jsonString: string,
): SafeParseResult<FiservInstallmentOptions, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => FiservInstallmentOptions$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'FiservInstallmentOptions' from JSON`,
  );
}

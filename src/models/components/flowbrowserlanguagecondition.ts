/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { ClosedEnum } from "../../types/enums.js";
import * as z from "zod";

/**
 * The type of match made for this rule.
 */
export const FlowBrowserLanguageConditionName = {
    BrowserLanguage: "browser_language",
} as const;
/**
 * The type of match made for this rule.
 */
export type FlowBrowserLanguageConditionName = ClosedEnum<typeof FlowBrowserLanguageConditionName>;

/**
 * The comparison to make on the browser language `value`.
 */
export const FlowBrowserLanguageConditionOperator = {
    IsOneOf: "is_one_of",
    IsNotOneOf: "is_not_one_of",
} as const;
/**
 * The comparison to make on the browser language `value`.
 */
export type FlowBrowserLanguageConditionOperator = ClosedEnum<
    typeof FlowBrowserLanguageConditionOperator
>;

/**
 * Browser language conditions with a name, operator, and value.
 */
export type FlowBrowserLanguageCondition = {
    /**
     * The type of match made for this rule.
     */
    name: FlowBrowserLanguageConditionName;
    /**
     * The comparison to make on the browser language `value`.
     */
    operator: FlowBrowserLanguageConditionOperator;
    /**
     * Browser language two-letter ISO 639-1 codes to compare the transaction to.
     */
    value: Array<string>;
};

/** @internal */
export const FlowBrowserLanguageConditionName$inboundSchema: z.ZodNativeEnum<
    typeof FlowBrowserLanguageConditionName
> = z.nativeEnum(FlowBrowserLanguageConditionName);

/** @internal */
export const FlowBrowserLanguageConditionName$outboundSchema: z.ZodNativeEnum<
    typeof FlowBrowserLanguageConditionName
> = FlowBrowserLanguageConditionName$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FlowBrowserLanguageConditionName$ {
    /** @deprecated use `FlowBrowserLanguageConditionName$inboundSchema` instead. */
    export const inboundSchema = FlowBrowserLanguageConditionName$inboundSchema;
    /** @deprecated use `FlowBrowserLanguageConditionName$outboundSchema` instead. */
    export const outboundSchema = FlowBrowserLanguageConditionName$outboundSchema;
}

/** @internal */
export const FlowBrowserLanguageConditionOperator$inboundSchema: z.ZodNativeEnum<
    typeof FlowBrowserLanguageConditionOperator
> = z.nativeEnum(FlowBrowserLanguageConditionOperator);

/** @internal */
export const FlowBrowserLanguageConditionOperator$outboundSchema: z.ZodNativeEnum<
    typeof FlowBrowserLanguageConditionOperator
> = FlowBrowserLanguageConditionOperator$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FlowBrowserLanguageConditionOperator$ {
    /** @deprecated use `FlowBrowserLanguageConditionOperator$inboundSchema` instead. */
    export const inboundSchema = FlowBrowserLanguageConditionOperator$inboundSchema;
    /** @deprecated use `FlowBrowserLanguageConditionOperator$outboundSchema` instead. */
    export const outboundSchema = FlowBrowserLanguageConditionOperator$outboundSchema;
}

/** @internal */
export const FlowBrowserLanguageCondition$inboundSchema: z.ZodType<
    FlowBrowserLanguageCondition,
    z.ZodTypeDef,
    unknown
> = z.object({
    name: FlowBrowserLanguageConditionName$inboundSchema,
    operator: FlowBrowserLanguageConditionOperator$inboundSchema,
    value: z.array(z.string()),
});

/** @internal */
export type FlowBrowserLanguageCondition$Outbound = {
    name: string;
    operator: string;
    value: Array<string>;
};

/** @internal */
export const FlowBrowserLanguageCondition$outboundSchema: z.ZodType<
    FlowBrowserLanguageCondition$Outbound,
    z.ZodTypeDef,
    FlowBrowserLanguageCondition
> = z.object({
    name: FlowBrowserLanguageConditionName$outboundSchema,
    operator: FlowBrowserLanguageConditionOperator$outboundSchema,
    value: z.array(z.string()),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FlowBrowserLanguageCondition$ {
    /** @deprecated use `FlowBrowserLanguageCondition$inboundSchema` instead. */
    export const inboundSchema = FlowBrowserLanguageCondition$inboundSchema;
    /** @deprecated use `FlowBrowserLanguageCondition$outboundSchema` instead. */
    export const outboundSchema = FlowBrowserLanguageCondition$outboundSchema;
    /** @deprecated use `FlowBrowserLanguageCondition$Outbound` instead. */
    export type Outbound = FlowBrowserLanguageCondition$Outbound;
}

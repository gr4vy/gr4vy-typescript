/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives";
import * as z from "zod";

/**
 * Initiates a new session with Apple Pay.
 */
export type ApplePaySessionRequest = {
    /**
     * Validation URL obtained from the event passed to a
     *
     * @remarks
     * `onvalidatemerchant` callback.
     */
    validationUrl: string;
    /**
     * Fully qualified domain name of the merchant.
     */
    domainName: string;
};

/** @internal */
export namespace ApplePaySessionRequest$ {
    export const inboundSchema: z.ZodType<ApplePaySessionRequest, z.ZodTypeDef, unknown> = z
        .object({
            validation_url: z.string(),
            domain_name: z.string(),
        })
        .transform((v) => {
            return remap$(v, {
                validation_url: "validationUrl",
                domain_name: "domainName",
            });
        });

    export type Outbound = {
        validation_url: string;
        domain_name: string;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, ApplePaySessionRequest> = z
        .object({
            validationUrl: z.string(),
            domainName: z.string(),
        })
        .transform((v) => {
            return remap$(v, {
                validationUrl: "validation_url",
                domainName: "domain_name",
            });
        });
}

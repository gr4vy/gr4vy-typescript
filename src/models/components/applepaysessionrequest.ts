/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives.js";
import * as z from "zod";

/**
 * Initiates a new session with Apple Pay.
 */
export type ApplePaySessionRequest = {
    /**
     * Validation URL obtained from the event passed to a
     *
     * @remarks
     * `onvalidatemerchant` callback.
     */
    validationUrl: string;
    /**
     * Fully qualified domain name of the merchant.
     */
    domainName: string;
};

/** @internal */
export const ApplePaySessionRequest$inboundSchema: z.ZodType<
    ApplePaySessionRequest,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        validation_url: z.string(),
        domain_name: z.string(),
    })
    .transform((v) => {
        return remap$(v, {
            validation_url: "validationUrl",
            domain_name: "domainName",
        });
    });

/** @internal */
export type ApplePaySessionRequest$Outbound = {
    validation_url: string;
    domain_name: string;
};

/** @internal */
export const ApplePaySessionRequest$outboundSchema: z.ZodType<
    ApplePaySessionRequest$Outbound,
    z.ZodTypeDef,
    ApplePaySessionRequest
> = z
    .object({
        validationUrl: z.string(),
        domainName: z.string(),
    })
    .transform((v) => {
        return remap$(v, {
            validationUrl: "validation_url",
            domainName: "domain_name",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ApplePaySessionRequest$ {
    /** @deprecated use `ApplePaySessionRequest$inboundSchema` instead. */
    export const inboundSchema = ApplePaySessionRequest$inboundSchema;
    /** @deprecated use `ApplePaySessionRequest$outboundSchema` instead. */
    export const outboundSchema = ApplePaySessionRequest$outboundSchema;
    /** @deprecated use `ApplePaySessionRequest$Outbound` instead. */
    export type Outbound = ApplePaySessionRequest$Outbound;
}

/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives.js";
import {
    CartItem,
    CartItem$inboundSchema,
    CartItem$Outbound,
    CartItem$outboundSchema,
} from "./cartitem.js";
import * as z from "zod";

/**
 * A request to get list of payment options.
 */
export type PaymentOptionsRequest = {
    /**
     * The monetary amount to create an authorization for, in the smallest
     *
     * @remarks
     * currency unit for the given currency, for example `1299` cents to create
     * an authorization for `$12.99`.
     *
     * If the `intent` is set to `capture`, an amount greater than zero must
     * be supplied.
     */
    amount?: number | null | undefined;
    /**
     * An ISO 639-1 Language Code and optional ISO 3166 Country Code. This locale
     *
     * @remarks
     * determines the language for the labels returned for every payment option.
     */
    locale?: string | null | undefined;
    /**
     * A supported ISO-4217 currency code.
     *
     * @remarks
     *
     * For redirect requests, this value must match the one specified for
     * `currency` in `payment_method`.
     *
     */
    currency?: string | null | undefined;
    /**
     * Filters the results to only the items which support this country code. A
     *
     * @remarks
     * country is formatted as 2-letter ISO country code.
     *
     */
    country?: string | null | undefined;
    /**
     * Used by the Flow engine to filter available options based on various
     *
     * @remarks
     * client-defined parameters. If present, this must be a string representing
     * a valid JSON dictionary.
     */
    metadata?: { [k: string]: string } | null | undefined;
    /**
     * An array of cart items that represents the line items of a transaction.
     */
    cartItems?: Array<CartItem> | null | undefined;
};

/** @internal */
export const PaymentOptionsRequest$inboundSchema: z.ZodType<
    PaymentOptionsRequest,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        amount: z.nullable(z.number().int()).optional(),
        locale: z.nullable(z.string().default("en")),
        currency: z.nullable(z.string()).optional(),
        country: z.nullable(z.string()).optional(),
        metadata: z.nullable(z.record(z.string())).optional(),
        cart_items: z.nullable(z.array(CartItem$inboundSchema)).optional(),
    })
    .transform((v) => {
        return remap$(v, {
            cart_items: "cartItems",
        });
    });

/** @internal */
export type PaymentOptionsRequest$Outbound = {
    amount?: number | null | undefined;
    locale: string | null;
    currency?: string | null | undefined;
    country?: string | null | undefined;
    metadata?: { [k: string]: string } | null | undefined;
    cart_items?: Array<CartItem$Outbound> | null | undefined;
};

/** @internal */
export const PaymentOptionsRequest$outboundSchema: z.ZodType<
    PaymentOptionsRequest$Outbound,
    z.ZodTypeDef,
    PaymentOptionsRequest
> = z
    .object({
        amount: z.nullable(z.number().int()).optional(),
        locale: z.nullable(z.string().default("en")),
        currency: z.nullable(z.string()).optional(),
        country: z.nullable(z.string()).optional(),
        metadata: z.nullable(z.record(z.string())).optional(),
        cartItems: z.nullable(z.array(CartItem$outboundSchema)).optional(),
    })
    .transform((v) => {
        return remap$(v, {
            cartItems: "cart_items",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PaymentOptionsRequest$ {
    /** @deprecated use `PaymentOptionsRequest$inboundSchema` instead. */
    export const inboundSchema = PaymentOptionsRequest$inboundSchema;
    /** @deprecated use `PaymentOptionsRequest$outboundSchema` instead. */
    export const outboundSchema = PaymentOptionsRequest$outboundSchema;
    /** @deprecated use `PaymentOptionsRequest$Outbound` instead. */
    export type Outbound = PaymentOptionsRequest$Outbound;
}

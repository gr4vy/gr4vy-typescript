/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as components from "../components";
import * as z from "zod";

export type IssueCryptogramRequest = {
    /**
     * The ID of the payment method.
     */
    paymentMethodId: string;
    /**
     * The ID of the network token.
     */
    networkTokenId: string;
    issueCryptogramRequest?: components.IssueCryptogramRequest | undefined;
};

/** @internal */
export namespace IssueCryptogramRequest$ {
    export type Inbound = {
        payment_method_id: string;
        network_token_id: string;
        IssueCryptogramRequest?: components.IssueCryptogramRequest$.Inbound | undefined;
    };

    export const inboundSchema: z.ZodType<IssueCryptogramRequest, z.ZodTypeDef, Inbound> = z
        .object({
            payment_method_id: z.string(),
            network_token_id: z.string(),
            IssueCryptogramRequest: components.IssueCryptogramRequest$.inboundSchema.optional(),
        })
        .transform((v) => {
            return {
                paymentMethodId: v.payment_method_id,
                networkTokenId: v.network_token_id,
                ...(v.IssueCryptogramRequest === undefined
                    ? null
                    : { issueCryptogramRequest: v.IssueCryptogramRequest }),
            };
        });

    export type Outbound = {
        payment_method_id: string;
        network_token_id: string;
        IssueCryptogramRequest?: components.IssueCryptogramRequest$.Outbound | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, IssueCryptogramRequest> = z
        .object({
            paymentMethodId: z.string(),
            networkTokenId: z.string(),
            issueCryptogramRequest: components.IssueCryptogramRequest$.outboundSchema.optional(),
        })
        .transform((v) => {
            return {
                payment_method_id: v.paymentMethodId,
                network_token_id: v.networkTokenId,
                ...(v.issueCryptogramRequest === undefined
                    ? null
                    : { IssueCryptogramRequest: v.issueCryptogramRequest }),
            };
        });
}

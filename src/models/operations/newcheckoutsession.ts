/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as components from "../components";
import * as z from "zod";

export type NewCheckoutSessionResponse = {
    httpMeta: components.HTTPMetadata;
    /**
     * Returns the new Checkout Session.
     */
    checkoutSession?: components.CheckoutSession | undefined;
    /**
     * Returns a generic error.
     */
    errorGeneric?: components.ErrorGeneric | undefined;
};

/** @internal */
export namespace NewCheckoutSessionResponse$ {
    export type Inbound = {
        HttpMeta: components.HTTPMetadata$.Inbound;
        CheckoutSession?: components.CheckoutSession$.Inbound | undefined;
        ErrorGeneric?: components.ErrorGeneric$.Inbound | undefined;
    };

    export const inboundSchema: z.ZodType<NewCheckoutSessionResponse, z.ZodTypeDef, Inbound> = z
        .object({
            HttpMeta: components.HTTPMetadata$.inboundSchema,
            CheckoutSession: components.CheckoutSession$.inboundSchema.optional(),
            ErrorGeneric: components.ErrorGeneric$.inboundSchema.optional(),
        })
        .transform((v) => {
            return {
                httpMeta: v.HttpMeta,
                ...(v.CheckoutSession === undefined
                    ? null
                    : { checkoutSession: v.CheckoutSession }),
                ...(v.ErrorGeneric === undefined ? null : { errorGeneric: v.ErrorGeneric }),
            };
        });

    export type Outbound = {
        HttpMeta: components.HTTPMetadata$.Outbound;
        CheckoutSession?: components.CheckoutSession$.Outbound | undefined;
        ErrorGeneric?: components.ErrorGeneric$.Outbound | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, NewCheckoutSessionResponse> = z
        .object({
            httpMeta: components.HTTPMetadata$.outboundSchema,
            checkoutSession: components.CheckoutSession$.outboundSchema.optional(),
            errorGeneric: components.ErrorGeneric$.outboundSchema.optional(),
        })
        .transform((v) => {
            return {
                HttpMeta: v.httpMeta,
                ...(v.checkoutSession === undefined
                    ? null
                    : { CheckoutSession: v.checkoutSession }),
                ...(v.errorGeneric === undefined ? null : { ErrorGeneric: v.errorGeneric }),
            };
        });
}

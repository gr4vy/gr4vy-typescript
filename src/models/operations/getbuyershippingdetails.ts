/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type GetBuyerShippingDetailsRequest = {
  /**
   * The ID of the buyer to retrieve shipping details for.
   */
  buyerId: string;
  /**
   * The ID of the shipping details to retrieve.
   */
  shippingDetailsId: string;
};

/** @internal */
export const GetBuyerShippingDetailsRequest$inboundSchema: z.ZodType<
  GetBuyerShippingDetailsRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  buyer_id: z.string(),
  shipping_details_id: z.string(),
}).transform((v) => {
  return remap$(v, {
    "buyer_id": "buyerId",
    "shipping_details_id": "shippingDetailsId",
  });
});

/** @internal */
export type GetBuyerShippingDetailsRequest$Outbound = {
  buyer_id: string;
  shipping_details_id: string;
};

/** @internal */
export const GetBuyerShippingDetailsRequest$outboundSchema: z.ZodType<
  GetBuyerShippingDetailsRequest$Outbound,
  z.ZodTypeDef,
  GetBuyerShippingDetailsRequest
> = z.object({
  buyerId: z.string(),
  shippingDetailsId: z.string(),
}).transform((v) => {
  return remap$(v, {
    buyerId: "buyer_id",
    shippingDetailsId: "shipping_details_id",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetBuyerShippingDetailsRequest$ {
  /** @deprecated use `GetBuyerShippingDetailsRequest$inboundSchema` instead. */
  export const inboundSchema = GetBuyerShippingDetailsRequest$inboundSchema;
  /** @deprecated use `GetBuyerShippingDetailsRequest$outboundSchema` instead. */
  export const outboundSchema = GetBuyerShippingDetailsRequest$outboundSchema;
  /** @deprecated use `GetBuyerShippingDetailsRequest$Outbound` instead. */
  export type Outbound = GetBuyerShippingDetailsRequest$Outbound;
}

export function getBuyerShippingDetailsRequestToJSON(
  getBuyerShippingDetailsRequest: GetBuyerShippingDetailsRequest,
): string {
  return JSON.stringify(
    GetBuyerShippingDetailsRequest$outboundSchema.parse(
      getBuyerShippingDetailsRequest,
    ),
  );
}

export function getBuyerShippingDetailsRequestFromJSON(
  jsonString: string,
): SafeParseResult<GetBuyerShippingDetailsRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetBuyerShippingDetailsRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetBuyerShippingDetailsRequest' from JSON`,
  );
}

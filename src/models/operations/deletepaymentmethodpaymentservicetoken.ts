/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type DeletePaymentMethodPaymentServiceTokenRequest = {
  /**
   * The ID of the payment method
   */
  paymentMethodId: string;
  /**
   * The ID of the payment service token
   */
  paymentServiceTokenId: string;
};

/** @internal */
export const DeletePaymentMethodPaymentServiceTokenRequest$inboundSchema:
  z.ZodType<
    DeletePaymentMethodPaymentServiceTokenRequest,
    z.ZodTypeDef,
    unknown
  > = z.object({
    payment_method_id: z.string(),
    payment_service_token_id: z.string(),
  }).transform((v) => {
    return remap$(v, {
      "payment_method_id": "paymentMethodId",
      "payment_service_token_id": "paymentServiceTokenId",
    });
  });

/** @internal */
export type DeletePaymentMethodPaymentServiceTokenRequest$Outbound = {
  payment_method_id: string;
  payment_service_token_id: string;
};

/** @internal */
export const DeletePaymentMethodPaymentServiceTokenRequest$outboundSchema:
  z.ZodType<
    DeletePaymentMethodPaymentServiceTokenRequest$Outbound,
    z.ZodTypeDef,
    DeletePaymentMethodPaymentServiceTokenRequest
  > = z.object({
    paymentMethodId: z.string(),
    paymentServiceTokenId: z.string(),
  }).transform((v) => {
    return remap$(v, {
      paymentMethodId: "payment_method_id",
      paymentServiceTokenId: "payment_service_token_id",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DeletePaymentMethodPaymentServiceTokenRequest$ {
  /** @deprecated use `DeletePaymentMethodPaymentServiceTokenRequest$inboundSchema` instead. */
  export const inboundSchema =
    DeletePaymentMethodPaymentServiceTokenRequest$inboundSchema;
  /** @deprecated use `DeletePaymentMethodPaymentServiceTokenRequest$outboundSchema` instead. */
  export const outboundSchema =
    DeletePaymentMethodPaymentServiceTokenRequest$outboundSchema;
  /** @deprecated use `DeletePaymentMethodPaymentServiceTokenRequest$Outbound` instead. */
  export type Outbound = DeletePaymentMethodPaymentServiceTokenRequest$Outbound;
}

export function deletePaymentMethodPaymentServiceTokenRequestToJSON(
  deletePaymentMethodPaymentServiceTokenRequest:
    DeletePaymentMethodPaymentServiceTokenRequest,
): string {
  return JSON.stringify(
    DeletePaymentMethodPaymentServiceTokenRequest$outboundSchema.parse(
      deletePaymentMethodPaymentServiceTokenRequest,
    ),
  );
}

export function deletePaymentMethodPaymentServiceTokenRequestFromJSON(
  jsonString: string,
): SafeParseResult<
  DeletePaymentMethodPaymentServiceTokenRequest,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      DeletePaymentMethodPaymentServiceTokenRequest$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'DeletePaymentMethodPaymentServiceTokenRequest' from JSON`,
  );
}

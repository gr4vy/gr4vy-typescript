/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives";
import * as z from "zod";

export type SuspendNetworkTokenRequest = {
    /**
     * The ID of the payment method.
     */
    paymentMethodId: string;
    /**
     * The ID of the network token.
     */
    networkTokenId: string;
};

/** @internal */
export namespace SuspendNetworkTokenRequest$ {
    export const inboundSchema: z.ZodType<SuspendNetworkTokenRequest, z.ZodTypeDef, unknown> = z
        .object({
            payment_method_id: z.string(),
            network_token_id: z.string(),
        })
        .transform((v) => {
            return remap$(v, {
                payment_method_id: "paymentMethodId",
                network_token_id: "networkTokenId",
            });
        });

    export type Outbound = {
        payment_method_id: string;
        network_token_id: string;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, SuspendNetworkTokenRequest> = z
        .object({
            paymentMethodId: z.string(),
            networkTokenId: z.string(),
        })
        .transform((v) => {
            return remap$(v, {
                paymentMethodId: "payment_method_id",
                networkTokenId: "network_token_id",
            });
        });
}

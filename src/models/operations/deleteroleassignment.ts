/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as components from "../components";
import * as z from "zod";

export type DeleteRoleAssignmentRequest = {
    /**
     * The unique ID for the role assignment.
     */
    roleAssignmentId: string;
};

export type DeleteRoleAssignmentResponse = {
    httpMeta: components.HTTPMetadata;
};

/** @internal */
export namespace DeleteRoleAssignmentRequest$ {
    export type Inbound = {
        role_assignment_id: string;
    };

    export const inboundSchema: z.ZodType<DeleteRoleAssignmentRequest, z.ZodTypeDef, Inbound> = z
        .object({
            role_assignment_id: z.string(),
        })
        .transform((v) => {
            return {
                roleAssignmentId: v.role_assignment_id,
            };
        });

    export type Outbound = {
        role_assignment_id: string;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, DeleteRoleAssignmentRequest> = z
        .object({
            roleAssignmentId: z.string(),
        })
        .transform((v) => {
            return {
                role_assignment_id: v.roleAssignmentId,
            };
        });
}

/** @internal */
export namespace DeleteRoleAssignmentResponse$ {
    export type Inbound = {
        HttpMeta: components.HTTPMetadata$.Inbound;
    };

    export const inboundSchema: z.ZodType<DeleteRoleAssignmentResponse, z.ZodTypeDef, Inbound> = z
        .object({
            HttpMeta: components.HTTPMetadata$.inboundSchema,
        })
        .transform((v) => {
            return {
                httpMeta: v.HttpMeta,
            };
        });

    export type Outbound = {
        HttpMeta: components.HTTPMetadata$.Outbound;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, DeleteRoleAssignmentResponse> = z
        .object({
            httpMeta: components.HTTPMetadata$.outboundSchema,
        })
        .transform((v) => {
            return {
                HttpMeta: v.httpMeta,
            };
        });
}

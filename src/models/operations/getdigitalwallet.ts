/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as z from "zod";

export type GetDigitalWalletRequest = {
    /**
     * The ID of the registered digital wallet.
     */
    digitalWalletId: string;
};

/** @internal */
export namespace GetDigitalWalletRequest$ {
    export type Inbound = {
        digital_wallet_id: string;
    };

    export const inboundSchema: z.ZodType<GetDigitalWalletRequest, z.ZodTypeDef, Inbound> = z
        .object({
            digital_wallet_id: z.string(),
        })
        .transform((v) => {
            return {
                digitalWalletId: v.digital_wallet_id,
            };
        });

    export type Outbound = {
        digital_wallet_id: string;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, GetDigitalWalletRequest> = z
        .object({
            digitalWalletId: z.string(),
        })
        .transform((v) => {
            return {
                digital_wallet_id: v.digitalWalletId,
            };
        });
}

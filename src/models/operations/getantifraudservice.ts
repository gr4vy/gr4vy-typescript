/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as components from "../components";
import * as z from "zod";

export type GetAntiFraudServiceRequest = {
    /**
     * The unique ID for an anti-fraud service.
     */
    antiFraudServiceId: string;
};

export type GetAntiFraudServiceResponse = components.ErrorGeneric | components.AntiFraudService;

/** @internal */
export namespace GetAntiFraudServiceRequest$ {
    export type Inbound = {
        anti_fraud_service_id: string;
    };

    export const inboundSchema: z.ZodType<GetAntiFraudServiceRequest, z.ZodTypeDef, Inbound> = z
        .object({
            anti_fraud_service_id: z.string(),
        })
        .transform((v) => {
            return {
                antiFraudServiceId: v.anti_fraud_service_id,
            };
        });

    export type Outbound = {
        anti_fraud_service_id: string;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, GetAntiFraudServiceRequest> = z
        .object({
            antiFraudServiceId: z.string(),
        })
        .transform((v) => {
            return {
                anti_fraud_service_id: v.antiFraudServiceId,
            };
        });
}

/** @internal */
export namespace GetAntiFraudServiceResponse$ {
    export type Inbound = components.ErrorGeneric$.Inbound | components.AntiFraudService$.Inbound;

    export type Outbound =
        | components.ErrorGeneric$.Outbound
        | components.AntiFraudService$.Outbound;
    export const inboundSchema: z.ZodType<GetAntiFraudServiceResponse, z.ZodTypeDef, Inbound> =
        z.union([
            components.ErrorGeneric$.inboundSchema,
            components.AntiFraudService$.inboundSchema,
        ]);
    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, GetAntiFraudServiceResponse> =
        z.union([
            components.ErrorGeneric$.outboundSchema,
            components.AntiFraudService$.outboundSchema,
        ]);
}

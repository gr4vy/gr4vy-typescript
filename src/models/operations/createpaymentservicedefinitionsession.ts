/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type CreatePaymentServiceDefinitionSessionRequest = {
  paymentServiceDefinitionId: string;
  requestBody: { [k: string]: any };
};

/** @internal */
export const CreatePaymentServiceDefinitionSessionRequest$inboundSchema:
  z.ZodType<
    CreatePaymentServiceDefinitionSessionRequest,
    z.ZodTypeDef,
    unknown
  > = z.object({
    payment_service_definition_id: z.string(),
    RequestBody: z.record(z.any()),
  }).transform((v) => {
    return remap$(v, {
      "payment_service_definition_id": "paymentServiceDefinitionId",
      "RequestBody": "requestBody",
    });
  });

/** @internal */
export type CreatePaymentServiceDefinitionSessionRequest$Outbound = {
  payment_service_definition_id: string;
  RequestBody: { [k: string]: any };
};

/** @internal */
export const CreatePaymentServiceDefinitionSessionRequest$outboundSchema:
  z.ZodType<
    CreatePaymentServiceDefinitionSessionRequest$Outbound,
    z.ZodTypeDef,
    CreatePaymentServiceDefinitionSessionRequest
  > = z.object({
    paymentServiceDefinitionId: z.string(),
    requestBody: z.record(z.any()),
  }).transform((v) => {
    return remap$(v, {
      paymentServiceDefinitionId: "payment_service_definition_id",
      requestBody: "RequestBody",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreatePaymentServiceDefinitionSessionRequest$ {
  /** @deprecated use `CreatePaymentServiceDefinitionSessionRequest$inboundSchema` instead. */
  export const inboundSchema =
    CreatePaymentServiceDefinitionSessionRequest$inboundSchema;
  /** @deprecated use `CreatePaymentServiceDefinitionSessionRequest$outboundSchema` instead. */
  export const outboundSchema =
    CreatePaymentServiceDefinitionSessionRequest$outboundSchema;
  /** @deprecated use `CreatePaymentServiceDefinitionSessionRequest$Outbound` instead. */
  export type Outbound = CreatePaymentServiceDefinitionSessionRequest$Outbound;
}

export function createPaymentServiceDefinitionSessionRequestToJSON(
  createPaymentServiceDefinitionSessionRequest:
    CreatePaymentServiceDefinitionSessionRequest,
): string {
  return JSON.stringify(
    CreatePaymentServiceDefinitionSessionRequest$outboundSchema.parse(
      createPaymentServiceDefinitionSessionRequest,
    ),
  );
}

export function createPaymentServiceDefinitionSessionRequestFromJSON(
  jsonString: string,
): SafeParseResult<
  CreatePaymentServiceDefinitionSessionRequest,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      CreatePaymentServiceDefinitionSessionRequest$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'CreatePaymentServiceDefinitionSessionRequest' from JSON`,
  );
}

/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type ListPaymentServiceDefinitionsRequest = {
  /**
   * A pointer to the page of results to return.
   */
  cursor?: string | null | undefined;
  /**
   * The maximum number of items that are at returned.
   */
  limit?: number | undefined;
};

export type ListPaymentServiceDefinitionsResponse = {
  result: components.CollectionPaymentServiceDefinition;
};

/** @internal */
export const ListPaymentServiceDefinitionsRequest$inboundSchema: z.ZodType<
  ListPaymentServiceDefinitionsRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  cursor: z.nullable(z.string()).optional(),
  limit: z.number().int().default(20),
});

/** @internal */
export type ListPaymentServiceDefinitionsRequest$Outbound = {
  cursor?: string | null | undefined;
  limit: number;
};

/** @internal */
export const ListPaymentServiceDefinitionsRequest$outboundSchema: z.ZodType<
  ListPaymentServiceDefinitionsRequest$Outbound,
  z.ZodTypeDef,
  ListPaymentServiceDefinitionsRequest
> = z.object({
  cursor: z.nullable(z.string()).optional(),
  limit: z.number().int().default(20),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ListPaymentServiceDefinitionsRequest$ {
  /** @deprecated use `ListPaymentServiceDefinitionsRequest$inboundSchema` instead. */
  export const inboundSchema =
    ListPaymentServiceDefinitionsRequest$inboundSchema;
  /** @deprecated use `ListPaymentServiceDefinitionsRequest$outboundSchema` instead. */
  export const outboundSchema =
    ListPaymentServiceDefinitionsRequest$outboundSchema;
  /** @deprecated use `ListPaymentServiceDefinitionsRequest$Outbound` instead. */
  export type Outbound = ListPaymentServiceDefinitionsRequest$Outbound;
}

export function listPaymentServiceDefinitionsRequestToJSON(
  listPaymentServiceDefinitionsRequest: ListPaymentServiceDefinitionsRequest,
): string {
  return JSON.stringify(
    ListPaymentServiceDefinitionsRequest$outboundSchema.parse(
      listPaymentServiceDefinitionsRequest,
    ),
  );
}

export function listPaymentServiceDefinitionsRequestFromJSON(
  jsonString: string,
): SafeParseResult<ListPaymentServiceDefinitionsRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      ListPaymentServiceDefinitionsRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ListPaymentServiceDefinitionsRequest' from JSON`,
  );
}

/** @internal */
export const ListPaymentServiceDefinitionsResponse$inboundSchema: z.ZodType<
  ListPaymentServiceDefinitionsResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  Result: components.CollectionPaymentServiceDefinition$inboundSchema,
}).transform((v) => {
  return remap$(v, {
    "Result": "result",
  });
});

/** @internal */
export type ListPaymentServiceDefinitionsResponse$Outbound = {
  Result: components.CollectionPaymentServiceDefinition$Outbound;
};

/** @internal */
export const ListPaymentServiceDefinitionsResponse$outboundSchema: z.ZodType<
  ListPaymentServiceDefinitionsResponse$Outbound,
  z.ZodTypeDef,
  ListPaymentServiceDefinitionsResponse
> = z.object({
  result: components.CollectionPaymentServiceDefinition$outboundSchema,
}).transform((v) => {
  return remap$(v, {
    result: "Result",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ListPaymentServiceDefinitionsResponse$ {
  /** @deprecated use `ListPaymentServiceDefinitionsResponse$inboundSchema` instead. */
  export const inboundSchema =
    ListPaymentServiceDefinitionsResponse$inboundSchema;
  /** @deprecated use `ListPaymentServiceDefinitionsResponse$outboundSchema` instead. */
  export const outboundSchema =
    ListPaymentServiceDefinitionsResponse$outboundSchema;
  /** @deprecated use `ListPaymentServiceDefinitionsResponse$Outbound` instead. */
  export type Outbound = ListPaymentServiceDefinitionsResponse$Outbound;
}

export function listPaymentServiceDefinitionsResponseToJSON(
  listPaymentServiceDefinitionsResponse: ListPaymentServiceDefinitionsResponse,
): string {
  return JSON.stringify(
    ListPaymentServiceDefinitionsResponse$outboundSchema.parse(
      listPaymentServiceDefinitionsResponse,
    ),
  );
}

export function listPaymentServiceDefinitionsResponseFromJSON(
  jsonString: string,
): SafeParseResult<ListPaymentServiceDefinitionsResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      ListPaymentServiceDefinitionsResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ListPaymentServiceDefinitionsResponse' from JSON`,
  );
}

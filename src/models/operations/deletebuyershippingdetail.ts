/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as z from "zod";

export type DeleteBuyerShippingDetailRequest = {
    /**
     * The unique ID for a buyer.
     */
    buyerId: string;
    /**
     * The unique ID for a buyer's shipping detail.
     */
    shippingDetailId: string;
};

export type DeleteBuyerShippingDetailResponse = {};

/** @internal */
export namespace DeleteBuyerShippingDetailRequest$ {
    export type Inbound = {
        buyer_id: string;
        shipping_detail_id: string;
    };

    export const inboundSchema: z.ZodType<DeleteBuyerShippingDetailRequest, z.ZodTypeDef, Inbound> =
        z
            .object({
                buyer_id: z.string(),
                shipping_detail_id: z.string(),
            })
            .transform((v) => {
                return {
                    buyerId: v.buyer_id,
                    shippingDetailId: v.shipping_detail_id,
                };
            });

    export type Outbound = {
        buyer_id: string;
        shipping_detail_id: string;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        DeleteBuyerShippingDetailRequest
    > = z
        .object({
            buyerId: z.string(),
            shippingDetailId: z.string(),
        })
        .transform((v) => {
            return {
                buyer_id: v.buyerId,
                shipping_detail_id: v.shippingDetailId,
            };
        });
}

/** @internal */
export namespace DeleteBuyerShippingDetailResponse$ {
    export type Inbound = {};

    export const inboundSchema: z.ZodType<
        DeleteBuyerShippingDetailResponse,
        z.ZodTypeDef,
        Inbound
    > = z.object({});

    export type Outbound = {};

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        DeleteBuyerShippingDetailResponse
    > = z.object({});
}

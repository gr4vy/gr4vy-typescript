/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type DeleteBuyerShippingDetailsGlobals = {
  merchantAccountId?: string | undefined;
};

export type DeleteBuyerShippingDetailsRequest = {
  /**
   * The ID of the buyer to delete shipping details for.
   */
  buyerId: string;
  /**
   * The ID of the shipping details to delete.
   */
  shippingDetailsId: string;
  applicationName?: string | undefined;
  /**
   * The ID of the merchant account to use for this request.
   */
  merchantAccountId?: string | null | undefined;
};

/** @internal */
export const DeleteBuyerShippingDetailsGlobals$inboundSchema: z.ZodType<
  DeleteBuyerShippingDetailsGlobals,
  z.ZodTypeDef,
  unknown
> = z.object({
  merchantAccountId: z.string().optional(),
});

/** @internal */
export type DeleteBuyerShippingDetailsGlobals$Outbound = {
  merchantAccountId?: string | undefined;
};

/** @internal */
export const DeleteBuyerShippingDetailsGlobals$outboundSchema: z.ZodType<
  DeleteBuyerShippingDetailsGlobals$Outbound,
  z.ZodTypeDef,
  DeleteBuyerShippingDetailsGlobals
> = z.object({
  merchantAccountId: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DeleteBuyerShippingDetailsGlobals$ {
  /** @deprecated use `DeleteBuyerShippingDetailsGlobals$inboundSchema` instead. */
  export const inboundSchema = DeleteBuyerShippingDetailsGlobals$inboundSchema;
  /** @deprecated use `DeleteBuyerShippingDetailsGlobals$outboundSchema` instead. */
  export const outboundSchema =
    DeleteBuyerShippingDetailsGlobals$outboundSchema;
  /** @deprecated use `DeleteBuyerShippingDetailsGlobals$Outbound` instead. */
  export type Outbound = DeleteBuyerShippingDetailsGlobals$Outbound;
}

export function deleteBuyerShippingDetailsGlobalsToJSON(
  deleteBuyerShippingDetailsGlobals: DeleteBuyerShippingDetailsGlobals,
): string {
  return JSON.stringify(
    DeleteBuyerShippingDetailsGlobals$outboundSchema.parse(
      deleteBuyerShippingDetailsGlobals,
    ),
  );
}

export function deleteBuyerShippingDetailsGlobalsFromJSON(
  jsonString: string,
): SafeParseResult<DeleteBuyerShippingDetailsGlobals, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => DeleteBuyerShippingDetailsGlobals$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'DeleteBuyerShippingDetailsGlobals' from JSON`,
  );
}

/** @internal */
export const DeleteBuyerShippingDetailsRequest$inboundSchema: z.ZodType<
  DeleteBuyerShippingDetailsRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  buyer_id: z.string(),
  shipping_details_id: z.string(),
  application_name: z.string().default("core-api"),
  merchantAccountId: z.nullable(z.string()).optional(),
}).transform((v) => {
  return remap$(v, {
    "buyer_id": "buyerId",
    "shipping_details_id": "shippingDetailsId",
    "application_name": "applicationName",
  });
});

/** @internal */
export type DeleteBuyerShippingDetailsRequest$Outbound = {
  buyer_id: string;
  shipping_details_id: string;
  application_name: string;
  merchantAccountId?: string | null | undefined;
};

/** @internal */
export const DeleteBuyerShippingDetailsRequest$outboundSchema: z.ZodType<
  DeleteBuyerShippingDetailsRequest$Outbound,
  z.ZodTypeDef,
  DeleteBuyerShippingDetailsRequest
> = z.object({
  buyerId: z.string(),
  shippingDetailsId: z.string(),
  applicationName: z.string().default("core-api"),
  merchantAccountId: z.nullable(z.string()).optional(),
}).transform((v) => {
  return remap$(v, {
    buyerId: "buyer_id",
    shippingDetailsId: "shipping_details_id",
    applicationName: "application_name",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DeleteBuyerShippingDetailsRequest$ {
  /** @deprecated use `DeleteBuyerShippingDetailsRequest$inboundSchema` instead. */
  export const inboundSchema = DeleteBuyerShippingDetailsRequest$inboundSchema;
  /** @deprecated use `DeleteBuyerShippingDetailsRequest$outboundSchema` instead. */
  export const outboundSchema =
    DeleteBuyerShippingDetailsRequest$outboundSchema;
  /** @deprecated use `DeleteBuyerShippingDetailsRequest$Outbound` instead. */
  export type Outbound = DeleteBuyerShippingDetailsRequest$Outbound;
}

export function deleteBuyerShippingDetailsRequestToJSON(
  deleteBuyerShippingDetailsRequest: DeleteBuyerShippingDetailsRequest,
): string {
  return JSON.stringify(
    DeleteBuyerShippingDetailsRequest$outboundSchema.parse(
      deleteBuyerShippingDetailsRequest,
    ),
  );
}

export function deleteBuyerShippingDetailsRequestFromJSON(
  jsonString: string,
): SafeParseResult<DeleteBuyerShippingDetailsRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => DeleteBuyerShippingDetailsRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'DeleteBuyerShippingDetailsRequest' from JSON`,
  );
}

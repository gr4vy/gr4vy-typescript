/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives.js";
import * as z from "zod";

export type DeleteBuyerShippingDetailsRequest = {
    /**
     * The `id` of the buyer to list shipping details for
     */
    buyerId: string;
    shippingDetailsId: string;
};

/** @internal */
export const DeleteBuyerShippingDetailsRequest$inboundSchema: z.ZodType<
    DeleteBuyerShippingDetailsRequest,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        buyer_id: z.string(),
        shipping_details_id: z.string(),
    })
    .transform((v) => {
        return remap$(v, {
            buyer_id: "buyerId",
            shipping_details_id: "shippingDetailsId",
        });
    });

/** @internal */
export type DeleteBuyerShippingDetailsRequest$Outbound = {
    buyer_id: string;
    shipping_details_id: string;
};

/** @internal */
export const DeleteBuyerShippingDetailsRequest$outboundSchema: z.ZodType<
    DeleteBuyerShippingDetailsRequest$Outbound,
    z.ZodTypeDef,
    DeleteBuyerShippingDetailsRequest
> = z
    .object({
        buyerId: z.string(),
        shippingDetailsId: z.string(),
    })
    .transform((v) => {
        return remap$(v, {
            buyerId: "buyer_id",
            shippingDetailsId: "shipping_details_id",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DeleteBuyerShippingDetailsRequest$ {
    /** @deprecated use `DeleteBuyerShippingDetailsRequest$inboundSchema` instead. */
    export const inboundSchema = DeleteBuyerShippingDetailsRequest$inboundSchema;
    /** @deprecated use `DeleteBuyerShippingDetailsRequest$outboundSchema` instead. */
    export const outboundSchema = DeleteBuyerShippingDetailsRequest$outboundSchema;
    /** @deprecated use `DeleteBuyerShippingDetailsRequest$Outbound` instead. */
    export type Outbound = DeleteBuyerShippingDetailsRequest$Outbound;
}

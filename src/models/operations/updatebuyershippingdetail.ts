/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives";
import * as components from "../components";
import * as z from "zod";

export type UpdateBuyerShippingDetailRequest = {
    /**
     * The unique ID for a buyer.
     */
    buyerId: string;
    /**
     * The unique ID for a buyer's shipping detail.
     */
    shippingDetailId: string;
    shippingDetailUpdateRequest?: components.ShippingDetailUpdateRequest | undefined;
};

/** @internal */
export namespace UpdateBuyerShippingDetailRequest$ {
    export const inboundSchema: z.ZodType<UpdateBuyerShippingDetailRequest, z.ZodTypeDef, unknown> =
        z
            .object({
                buyer_id: z.string(),
                shipping_detail_id: z.string(),
                ShippingDetailUpdateRequest:
                    components.ShippingDetailUpdateRequest$.inboundSchema.optional(),
            })
            .transform((v) => {
                return remap$(v, {
                    buyer_id: "buyerId",
                    shipping_detail_id: "shippingDetailId",
                    ShippingDetailUpdateRequest: "shippingDetailUpdateRequest",
                });
            });

    export type Outbound = {
        buyer_id: string;
        shipping_detail_id: string;
        ShippingDetailUpdateRequest?: components.ShippingDetailUpdateRequest$.Outbound | undefined;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        UpdateBuyerShippingDetailRequest
    > = z
        .object({
            buyerId: z.string(),
            shippingDetailId: z.string(),
            shippingDetailUpdateRequest:
                components.ShippingDetailUpdateRequest$.outboundSchema.optional(),
        })
        .transform((v) => {
            return remap$(v, {
                buyerId: "buyer_id",
                shippingDetailId: "shipping_detail_id",
                shippingDetailUpdateRequest: "ShippingDetailUpdateRequest",
            });
        });
}

/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives.js";
import * as z from "zod";

export type ApprovePaymentMethodRequest = {
    paymentMethodId: string;
    paymentServiceId: string;
};

/** @internal */
export const ApprovePaymentMethodRequest$inboundSchema: z.ZodType<
    ApprovePaymentMethodRequest,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        payment_method_id: z.string(),
        payment_service_id: z.string(),
    })
    .transform((v) => {
        return remap$(v, {
            payment_method_id: "paymentMethodId",
            payment_service_id: "paymentServiceId",
        });
    });

/** @internal */
export type ApprovePaymentMethodRequest$Outbound = {
    payment_method_id: string;
    payment_service_id: string;
};

/** @internal */
export const ApprovePaymentMethodRequest$outboundSchema: z.ZodType<
    ApprovePaymentMethodRequest$Outbound,
    z.ZodTypeDef,
    ApprovePaymentMethodRequest
> = z
    .object({
        paymentMethodId: z.string(),
        paymentServiceId: z.string(),
    })
    .transform((v) => {
        return remap$(v, {
            paymentMethodId: "payment_method_id",
            paymentServiceId: "payment_service_id",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ApprovePaymentMethodRequest$ {
    /** @deprecated use `ApprovePaymentMethodRequest$inboundSchema` instead. */
    export const inboundSchema = ApprovePaymentMethodRequest$inboundSchema;
    /** @deprecated use `ApprovePaymentMethodRequest$outboundSchema` instead. */
    export const outboundSchema = ApprovePaymentMethodRequest$outboundSchema;
    /** @deprecated use `ApprovePaymentMethodRequest$Outbound` instead. */
    export type Outbound = ApprovePaymentMethodRequest$Outbound;
}

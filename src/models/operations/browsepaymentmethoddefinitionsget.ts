/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type BrowsePaymentMethodDefinitionsGetGlobals = {
  merchantAccountId?: string | undefined;
};

export type BrowsePaymentMethodDefinitionsGetRequest = {
  /**
   * The ID of the merchant account to use for this request.
   */
  merchantAccountId?: string | null | undefined;
};

/** @internal */
export const BrowsePaymentMethodDefinitionsGetGlobals$inboundSchema: z.ZodType<
  BrowsePaymentMethodDefinitionsGetGlobals,
  z.ZodTypeDef,
  unknown
> = z.object({
  merchantAccountId: z.string().optional(),
});

/** @internal */
export type BrowsePaymentMethodDefinitionsGetGlobals$Outbound = {
  merchantAccountId?: string | undefined;
};

/** @internal */
export const BrowsePaymentMethodDefinitionsGetGlobals$outboundSchema: z.ZodType<
  BrowsePaymentMethodDefinitionsGetGlobals$Outbound,
  z.ZodTypeDef,
  BrowsePaymentMethodDefinitionsGetGlobals
> = z.object({
  merchantAccountId: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace BrowsePaymentMethodDefinitionsGetGlobals$ {
  /** @deprecated use `BrowsePaymentMethodDefinitionsGetGlobals$inboundSchema` instead. */
  export const inboundSchema =
    BrowsePaymentMethodDefinitionsGetGlobals$inboundSchema;
  /** @deprecated use `BrowsePaymentMethodDefinitionsGetGlobals$outboundSchema` instead. */
  export const outboundSchema =
    BrowsePaymentMethodDefinitionsGetGlobals$outboundSchema;
  /** @deprecated use `BrowsePaymentMethodDefinitionsGetGlobals$Outbound` instead. */
  export type Outbound = BrowsePaymentMethodDefinitionsGetGlobals$Outbound;
}

export function browsePaymentMethodDefinitionsGetGlobalsToJSON(
  browsePaymentMethodDefinitionsGetGlobals:
    BrowsePaymentMethodDefinitionsGetGlobals,
): string {
  return JSON.stringify(
    BrowsePaymentMethodDefinitionsGetGlobals$outboundSchema.parse(
      browsePaymentMethodDefinitionsGetGlobals,
    ),
  );
}

export function browsePaymentMethodDefinitionsGetGlobalsFromJSON(
  jsonString: string,
): SafeParseResult<
  BrowsePaymentMethodDefinitionsGetGlobals,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      BrowsePaymentMethodDefinitionsGetGlobals$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'BrowsePaymentMethodDefinitionsGetGlobals' from JSON`,
  );
}

/** @internal */
export const BrowsePaymentMethodDefinitionsGetRequest$inboundSchema: z.ZodType<
  BrowsePaymentMethodDefinitionsGetRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  merchantAccountId: z.nullable(z.string()).optional(),
});

/** @internal */
export type BrowsePaymentMethodDefinitionsGetRequest$Outbound = {
  merchantAccountId?: string | null | undefined;
};

/** @internal */
export const BrowsePaymentMethodDefinitionsGetRequest$outboundSchema: z.ZodType<
  BrowsePaymentMethodDefinitionsGetRequest$Outbound,
  z.ZodTypeDef,
  BrowsePaymentMethodDefinitionsGetRequest
> = z.object({
  merchantAccountId: z.nullable(z.string()).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace BrowsePaymentMethodDefinitionsGetRequest$ {
  /** @deprecated use `BrowsePaymentMethodDefinitionsGetRequest$inboundSchema` instead. */
  export const inboundSchema =
    BrowsePaymentMethodDefinitionsGetRequest$inboundSchema;
  /** @deprecated use `BrowsePaymentMethodDefinitionsGetRequest$outboundSchema` instead. */
  export const outboundSchema =
    BrowsePaymentMethodDefinitionsGetRequest$outboundSchema;
  /** @deprecated use `BrowsePaymentMethodDefinitionsGetRequest$Outbound` instead. */
  export type Outbound = BrowsePaymentMethodDefinitionsGetRequest$Outbound;
}

export function browsePaymentMethodDefinitionsGetRequestToJSON(
  browsePaymentMethodDefinitionsGetRequest:
    BrowsePaymentMethodDefinitionsGetRequest,
): string {
  return JSON.stringify(
    BrowsePaymentMethodDefinitionsGetRequest$outboundSchema.parse(
      browsePaymentMethodDefinitionsGetRequest,
    ),
  );
}

export function browsePaymentMethodDefinitionsGetRequestFromJSON(
  jsonString: string,
): SafeParseResult<
  BrowsePaymentMethodDefinitionsGetRequest,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      BrowsePaymentMethodDefinitionsGetRequest$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'BrowsePaymentMethodDefinitionsGetRequest' from JSON`,
  );
}

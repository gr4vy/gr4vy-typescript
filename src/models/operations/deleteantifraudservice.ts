/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives";
import * as z from "zod";

export type DeleteAntiFraudServiceRequest = {
    /**
     * The unique ID for an anti-fraud service.
     */
    antiFraudServiceId: string;
};

/** @internal */
export namespace DeleteAntiFraudServiceRequest$ {
    export const inboundSchema: z.ZodType<DeleteAntiFraudServiceRequest, z.ZodTypeDef, unknown> = z
        .object({
            anti_fraud_service_id: z.string(),
        })
        .transform((v) => {
            return remap$(v, {
                anti_fraud_service_id: "antiFraudServiceId",
            });
        });

    export type Outbound = {
        anti_fraud_service_id: string;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, DeleteAntiFraudServiceRequest> =
        z
            .object({
                antiFraudServiceId: z.string(),
            })
            .transform((v) => {
                return remap$(v, {
                    antiFraudServiceId: "anti_fraud_service_id",
                });
            });
}

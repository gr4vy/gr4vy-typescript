/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as z from "zod";

export type InboundWebhookRequest = {
    /**
     * Opaque data representing the service information associated with
     *
     * @remarks
     * the webhook endpoint.
     */
    payload: string;
    /**
     * Signature of the opaque data with the service information
     *
     * @remarks
     * used for the webhook endpoint.
     */
    signature: string;
};

/** @internal */
export const InboundWebhookRequest$inboundSchema: z.ZodType<
    InboundWebhookRequest,
    z.ZodTypeDef,
    unknown
> = z.object({
    payload: z.string(),
    signature: z.string(),
});

/** @internal */
export type InboundWebhookRequest$Outbound = {
    payload: string;
    signature: string;
};

/** @internal */
export const InboundWebhookRequest$outboundSchema: z.ZodType<
    InboundWebhookRequest$Outbound,
    z.ZodTypeDef,
    InboundWebhookRequest
> = z.object({
    payload: z.string(),
    signature: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace InboundWebhookRequest$ {
    /** @deprecated use `InboundWebhookRequest$inboundSchema` instead. */
    export const inboundSchema = InboundWebhookRequest$inboundSchema;
    /** @deprecated use `InboundWebhookRequest$outboundSchema` instead. */
    export const outboundSchema = InboundWebhookRequest$outboundSchema;
    /** @deprecated use `InboundWebhookRequest$Outbound` instead. */
    export type Outbound = InboundWebhookRequest$Outbound;
}

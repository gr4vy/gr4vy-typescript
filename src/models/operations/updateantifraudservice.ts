/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as components from "../components";
import * as z from "zod";

export type UpdateAntiFraudServiceRequest = {
    /**
     * The unique ID for an anti-fraud service.
     */
    antiFraudServiceId: string;
    antiFraudServiceUpdate?: components.AntiFraudServiceUpdate | undefined;
};

/** @internal */
export namespace UpdateAntiFraudServiceRequest$ {
    export type Inbound = {
        anti_fraud_service_id: string;
        AntiFraudServiceUpdate?: components.AntiFraudServiceUpdate$.Inbound | undefined;
    };

    export const inboundSchema: z.ZodType<UpdateAntiFraudServiceRequest, z.ZodTypeDef, Inbound> = z
        .object({
            anti_fraud_service_id: z.string(),
            AntiFraudServiceUpdate: components.AntiFraudServiceUpdate$.inboundSchema.optional(),
        })
        .transform((v) => {
            return {
                antiFraudServiceId: v.anti_fraud_service_id,
                ...(v.AntiFraudServiceUpdate === undefined
                    ? null
                    : { antiFraudServiceUpdate: v.AntiFraudServiceUpdate }),
            };
        });

    export type Outbound = {
        anti_fraud_service_id: string;
        AntiFraudServiceUpdate?: components.AntiFraudServiceUpdate$.Outbound | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, UpdateAntiFraudServiceRequest> =
        z
            .object({
                antiFraudServiceId: z.string(),
                antiFraudServiceUpdate:
                    components.AntiFraudServiceUpdate$.outboundSchema.optional(),
            })
            .transform((v) => {
                return {
                    anti_fraud_service_id: v.antiFraudServiceId,
                    ...(v.antiFraudServiceUpdate === undefined
                        ? null
                        : { AntiFraudServiceUpdate: v.antiFraudServiceUpdate }),
                };
            });
}

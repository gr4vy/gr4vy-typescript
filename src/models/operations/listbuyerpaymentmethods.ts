/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives";
import * as z from "zod";

export type ListBuyerPaymentMethodsRequest = {
    /**
     * Filters the results to only the items for which the `buyer` has an
     *
     * @remarks
     * `id` that matches this value.
     */
    buyerId?: string | undefined;
    /**
     * Filters the results to only the items for which the `buyer` has an
     *
     * @remarks
     * `external_identifier` that matches this value.
     */
    buyerExternalIdentifier?: string | undefined;
    /**
     * Filters the results to only the items which support this country code. A
     *
     * @remarks
     * country is formatted as 2-letter ISO country code.
     */
    country?: string | undefined;
    /**
     * Filters the results to only the items which support this currency code. A
     *
     * @remarks
     * currency is formatted as 3-letter ISO currency code.
     */
    currency?: string | undefined;
};

/** @internal */
export namespace ListBuyerPaymentMethodsRequest$ {
    export const inboundSchema: z.ZodType<ListBuyerPaymentMethodsRequest, z.ZodTypeDef, unknown> = z
        .object({
            buyer_id: z.string().optional(),
            buyer_external_identifier: z.string().optional(),
            country: z.string().optional(),
            currency: z.string().optional(),
        })
        .transform((v) => {
            return remap$(v, {
                buyer_id: "buyerId",
                buyer_external_identifier: "buyerExternalIdentifier",
            });
        });

    export type Outbound = {
        buyer_id?: string | undefined;
        buyer_external_identifier?: string | undefined;
        country?: string | undefined;
        currency?: string | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, ListBuyerPaymentMethodsRequest> =
        z
            .object({
                buyerId: z.string().optional(),
                buyerExternalIdentifier: z.string().optional(),
                country: z.string().optional(),
                currency: z.string().optional(),
            })
            .transform((v) => {
                return remap$(v, {
                    buyerId: "buyer_id",
                    buyerExternalIdentifier: "buyer_external_identifier",
                });
            });
}

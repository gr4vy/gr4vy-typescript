/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as z from "zod";

export type GetPaymentServiceTokensRequest = {
    /**
     * Filters for transactions that have a payment method with an ID that matches exactly with the provided value.
     */
    paymentMethodId?: string | undefined;
};

/** @internal */
export namespace GetPaymentServiceTokensRequest$ {
    export type Inbound = {
        payment_method_id?: string | undefined;
    };

    export const inboundSchema: z.ZodType<GetPaymentServiceTokensRequest, z.ZodTypeDef, Inbound> = z
        .object({
            payment_method_id: z.string().optional(),
        })
        .transform((v) => {
            return {
                ...(v.payment_method_id === undefined
                    ? null
                    : { paymentMethodId: v.payment_method_id }),
            };
        });

    export type Outbound = {
        payment_method_id?: string | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, GetPaymentServiceTokensRequest> =
        z
            .object({
                paymentMethodId: z.string().optional(),
            })
            .transform((v) => {
                return {
                    ...(v.paymentMethodId === undefined
                        ? null
                        : { payment_method_id: v.paymentMethodId }),
                };
            });
}

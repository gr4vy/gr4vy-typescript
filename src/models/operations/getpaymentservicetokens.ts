/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives";
import * as z from "zod";

export type GetPaymentServiceTokensRequest = {
    /**
     * Filters for transactions that have a payment method with an ID that matches exactly with the provided value.
     */
    paymentMethodId?: string | undefined;
};

/** @internal */
export namespace GetPaymentServiceTokensRequest$ {
    export const inboundSchema: z.ZodType<GetPaymentServiceTokensRequest, z.ZodTypeDef, unknown> = z
        .object({
            payment_method_id: z.string().optional(),
        })
        .transform((v) => {
            return remap$(v, {
                payment_method_id: "paymentMethodId",
            });
        });

    export type Outbound = {
        payment_method_id?: string | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, GetPaymentServiceTokensRequest> =
        z
            .object({
                paymentMethodId: z.string().optional(),
            })
            .transform((v) => {
                return remap$(v, {
                    paymentMethodId: "payment_method_id",
                });
            });
}

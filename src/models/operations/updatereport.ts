/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives.js";
import * as components from "../components/index.js";
import * as z from "zod";

export type UpdateReportRequest = {
    /**
     * The unique ID for a report.
     */
    reportId: string;
    reportUpdate?: components.ReportUpdate | undefined;
};

/** @internal */
export const UpdateReportRequest$inboundSchema: z.ZodType<
    UpdateReportRequest,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        report_id: z.string(),
        ReportUpdate: components.ReportUpdate$inboundSchema.optional(),
    })
    .transform((v) => {
        return remap$(v, {
            report_id: "reportId",
            ReportUpdate: "reportUpdate",
        });
    });

/** @internal */
export type UpdateReportRequest$Outbound = {
    report_id: string;
    ReportUpdate?: components.ReportUpdate$Outbound | undefined;
};

/** @internal */
export const UpdateReportRequest$outboundSchema: z.ZodType<
    UpdateReportRequest$Outbound,
    z.ZodTypeDef,
    UpdateReportRequest
> = z
    .object({
        reportId: z.string(),
        reportUpdate: components.ReportUpdate$outboundSchema.optional(),
    })
    .transform((v) => {
        return remap$(v, {
            reportId: "report_id",
            reportUpdate: "ReportUpdate",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateReportRequest$ {
    /** @deprecated use `UpdateReportRequest$inboundSchema` instead. */
    export const inboundSchema = UpdateReportRequest$inboundSchema;
    /** @deprecated use `UpdateReportRequest$outboundSchema` instead. */
    export const outboundSchema = UpdateReportRequest$outboundSchema;
    /** @deprecated use `UpdateReportRequest$Outbound` instead. */
    export type Outbound = UpdateReportRequest$Outbound;
}

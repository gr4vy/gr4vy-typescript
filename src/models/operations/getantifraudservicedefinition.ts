/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives";
import * as z from "zod";

export type GetAntiFraudServiceDefinitionRequest = {
    /**
     * The unique ID for an anti-fraud service definition.
     */
    antiFraudServiceDefinitionId: string;
};

/** @internal */
export namespace GetAntiFraudServiceDefinitionRequest$ {
    export const inboundSchema: z.ZodType<
        GetAntiFraudServiceDefinitionRequest,
        z.ZodTypeDef,
        unknown
    > = z
        .object({
            anti_fraud_service_definition_id: z.string(),
        })
        .transform((v) => {
            return remap$(v, {
                anti_fraud_service_definition_id: "antiFraudServiceDefinitionId",
            });
        });

    export type Outbound = {
        anti_fraud_service_definition_id: string;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        GetAntiFraudServiceDefinitionRequest
    > = z
        .object({
            antiFraudServiceDefinitionId: z.string(),
        })
        .transform((v) => {
            return remap$(v, {
                antiFraudServiceDefinitionId: "anti_fraud_service_definition_id",
            });
        });
}

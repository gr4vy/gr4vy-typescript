/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives.js";
import * as components from "../components/index.js";
import * as z from "zod";

export type NewTransactionRequest = {
    /**
     * A unique key that identifies this request. Providing this header will make
     *
     * @remarks
     * this an idempotent request. We recommend using V4 UUIDs, or another random
     * string with enough entropy to avoid collisions.
     */
    idempotencyKey?: string | undefined;
    transactionRequest?: components.TransactionRequest | undefined;
};

/** @internal */
export const NewTransactionRequest$inboundSchema: z.ZodType<
    NewTransactionRequest,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        "Idempotency-Key": z.string().optional(),
        TransactionRequest: components.TransactionRequest$inboundSchema.optional(),
    })
    .transform((v) => {
        return remap$(v, {
            "Idempotency-Key": "idempotencyKey",
            TransactionRequest: "transactionRequest",
        });
    });

/** @internal */
export type NewTransactionRequest$Outbound = {
    "Idempotency-Key"?: string | undefined;
    TransactionRequest?: components.TransactionRequest$Outbound | undefined;
};

/** @internal */
export const NewTransactionRequest$outboundSchema: z.ZodType<
    NewTransactionRequest$Outbound,
    z.ZodTypeDef,
    NewTransactionRequest
> = z
    .object({
        idempotencyKey: z.string().optional(),
        transactionRequest: components.TransactionRequest$outboundSchema.optional(),
    })
    .transform((v) => {
        return remap$(v, {
            idempotencyKey: "Idempotency-Key",
            transactionRequest: "TransactionRequest",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace NewTransactionRequest$ {
    /** @deprecated use `NewTransactionRequest$inboundSchema` instead. */
    export const inboundSchema = NewTransactionRequest$inboundSchema;
    /** @deprecated use `NewTransactionRequest$outboundSchema` instead. */
    export const outboundSchema = NewTransactionRequest$outboundSchema;
    /** @deprecated use `NewTransactionRequest$Outbound` instead. */
    export type Outbound = NewTransactionRequest$Outbound;
}

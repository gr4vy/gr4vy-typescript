/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type CreateGiftCardRequest = {
  timeoutInSeconds?: number | undefined;
  giftCardCreate: components.GiftCardCreate;
};

/** @internal */
export const CreateGiftCardRequest$inboundSchema: z.ZodType<
  CreateGiftCardRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  timeout_in_seconds: z.number().default(1),
  GiftCardCreate: components.GiftCardCreate$inboundSchema,
}).transform((v) => {
  return remap$(v, {
    "timeout_in_seconds": "timeoutInSeconds",
    "GiftCardCreate": "giftCardCreate",
  });
});

/** @internal */
export type CreateGiftCardRequest$Outbound = {
  timeout_in_seconds: number;
  GiftCardCreate: components.GiftCardCreate$Outbound;
};

/** @internal */
export const CreateGiftCardRequest$outboundSchema: z.ZodType<
  CreateGiftCardRequest$Outbound,
  z.ZodTypeDef,
  CreateGiftCardRequest
> = z.object({
  timeoutInSeconds: z.number().default(1),
  giftCardCreate: components.GiftCardCreate$outboundSchema,
}).transform((v) => {
  return remap$(v, {
    timeoutInSeconds: "timeout_in_seconds",
    giftCardCreate: "GiftCardCreate",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateGiftCardRequest$ {
  /** @deprecated use `CreateGiftCardRequest$inboundSchema` instead. */
  export const inboundSchema = CreateGiftCardRequest$inboundSchema;
  /** @deprecated use `CreateGiftCardRequest$outboundSchema` instead. */
  export const outboundSchema = CreateGiftCardRequest$outboundSchema;
  /** @deprecated use `CreateGiftCardRequest$Outbound` instead. */
  export type Outbound = CreateGiftCardRequest$Outbound;
}

export function createGiftCardRequestToJSON(
  createGiftCardRequest: CreateGiftCardRequest,
): string {
  return JSON.stringify(
    CreateGiftCardRequest$outboundSchema.parse(createGiftCardRequest),
  );
}

export function createGiftCardRequestFromJSON(
  jsonString: string,
): SafeParseResult<CreateGiftCardRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => CreateGiftCardRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CreateGiftCardRequest' from JSON`,
  );
}

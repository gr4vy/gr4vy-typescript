/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives.js";
import * as components from "../components/index.js";
import * as z from "zod";

export type UpdateBuyerRequest = {
    /**
     * The `id` of the buyer to update
     */
    buyerId: string;
    buyerUpdate: components.BuyerUpdate;
};

/** @internal */
export const UpdateBuyerRequest$inboundSchema: z.ZodType<
    UpdateBuyerRequest,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        buyer_id: z.string(),
        BuyerUpdate: components.BuyerUpdate$inboundSchema,
    })
    .transform((v) => {
        return remap$(v, {
            buyer_id: "buyerId",
            BuyerUpdate: "buyerUpdate",
        });
    });

/** @internal */
export type UpdateBuyerRequest$Outbound = {
    buyer_id: string;
    BuyerUpdate: components.BuyerUpdate$Outbound;
};

/** @internal */
export const UpdateBuyerRequest$outboundSchema: z.ZodType<
    UpdateBuyerRequest$Outbound,
    z.ZodTypeDef,
    UpdateBuyerRequest
> = z
    .object({
        buyerId: z.string(),
        buyerUpdate: components.BuyerUpdate$outboundSchema,
    })
    .transform((v) => {
        return remap$(v, {
            buyerId: "buyer_id",
            buyerUpdate: "BuyerUpdate",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateBuyerRequest$ {
    /** @deprecated use `UpdateBuyerRequest$inboundSchema` instead. */
    export const inboundSchema = UpdateBuyerRequest$inboundSchema;
    /** @deprecated use `UpdateBuyerRequest$outboundSchema` instead. */
    export const outboundSchema = UpdateBuyerRequest$outboundSchema;
    /** @deprecated use `UpdateBuyerRequest$Outbound` instead. */
    export type Outbound = UpdateBuyerRequest$Outbound;
}

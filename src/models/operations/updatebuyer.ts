/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type UpdateBuyerRequest = {
  /**
   * The ID of the buyer to edit.
   */
  buyerId: string;
  timeoutInSeconds?: number | undefined;
  /**
   * The ID of the merchant account to use for this request.
   */
  xGr4vyMerchantAccountId?: string | null | undefined;
  buyerUpdate: components.BuyerUpdate;
};

/** @internal */
export const UpdateBuyerRequest$inboundSchema: z.ZodType<
  UpdateBuyerRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  buyer_id: z.string(),
  timeout_in_seconds: z.number().default(1),
  "x-gr4vy-merchant-account-id": z.nullable(z.string()).optional(),
  BuyerUpdate: components.BuyerUpdate$inboundSchema,
}).transform((v) => {
  return remap$(v, {
    "buyer_id": "buyerId",
    "timeout_in_seconds": "timeoutInSeconds",
    "x-gr4vy-merchant-account-id": "xGr4vyMerchantAccountId",
    "BuyerUpdate": "buyerUpdate",
  });
});

/** @internal */
export type UpdateBuyerRequest$Outbound = {
  buyer_id: string;
  timeout_in_seconds: number;
  "x-gr4vy-merchant-account-id"?: string | null | undefined;
  BuyerUpdate: components.BuyerUpdate$Outbound;
};

/** @internal */
export const UpdateBuyerRequest$outboundSchema: z.ZodType<
  UpdateBuyerRequest$Outbound,
  z.ZodTypeDef,
  UpdateBuyerRequest
> = z.object({
  buyerId: z.string(),
  timeoutInSeconds: z.number().default(1),
  xGr4vyMerchantAccountId: z.nullable(z.string()).optional(),
  buyerUpdate: components.BuyerUpdate$outboundSchema,
}).transform((v) => {
  return remap$(v, {
    buyerId: "buyer_id",
    timeoutInSeconds: "timeout_in_seconds",
    xGr4vyMerchantAccountId: "x-gr4vy-merchant-account-id",
    buyerUpdate: "BuyerUpdate",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateBuyerRequest$ {
  /** @deprecated use `UpdateBuyerRequest$inboundSchema` instead. */
  export const inboundSchema = UpdateBuyerRequest$inboundSchema;
  /** @deprecated use `UpdateBuyerRequest$outboundSchema` instead. */
  export const outboundSchema = UpdateBuyerRequest$outboundSchema;
  /** @deprecated use `UpdateBuyerRequest$Outbound` instead. */
  export type Outbound = UpdateBuyerRequest$Outbound;
}

export function updateBuyerRequestToJSON(
  updateBuyerRequest: UpdateBuyerRequest,
): string {
  return JSON.stringify(
    UpdateBuyerRequest$outboundSchema.parse(updateBuyerRequest),
  );
}

export function updateBuyerRequestFromJSON(
  jsonString: string,
): SafeParseResult<UpdateBuyerRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => UpdateBuyerRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'UpdateBuyerRequest' from JSON`,
  );
}

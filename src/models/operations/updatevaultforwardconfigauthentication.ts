/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives.js";
import * as components from "../components/index.js";
import * as z from "zod";

export type UpdateVaultForwardConfigAuthenticationRequest = {
    /**
     * The ID of the Vault Forward configuration.
     */
    configId: string;
    /**
     * The ID of the Vault Forward authentication method.
     */
    authenticationId: string;
    pciForwardConfigAuthenticationUpdate?:
        | components.PCIForwardConfigAuthenticationUpdate
        | undefined;
};

/** @internal */
export const UpdateVaultForwardConfigAuthenticationRequest$inboundSchema: z.ZodType<
    UpdateVaultForwardConfigAuthenticationRequest,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        config_id: z.string(),
        authentication_id: z.string(),
        PCIForwardConfigAuthenticationUpdate:
            components.PCIForwardConfigAuthenticationUpdate$inboundSchema.optional(),
    })
    .transform((v) => {
        return remap$(v, {
            config_id: "configId",
            authentication_id: "authenticationId",
            PCIForwardConfigAuthenticationUpdate: "pciForwardConfigAuthenticationUpdate",
        });
    });

/** @internal */
export type UpdateVaultForwardConfigAuthenticationRequest$Outbound = {
    config_id: string;
    authentication_id: string;
    PCIForwardConfigAuthenticationUpdate?:
        | components.PCIForwardConfigAuthenticationUpdate$Outbound
        | undefined;
};

/** @internal */
export const UpdateVaultForwardConfigAuthenticationRequest$outboundSchema: z.ZodType<
    UpdateVaultForwardConfigAuthenticationRequest$Outbound,
    z.ZodTypeDef,
    UpdateVaultForwardConfigAuthenticationRequest
> = z
    .object({
        configId: z.string(),
        authenticationId: z.string(),
        pciForwardConfigAuthenticationUpdate:
            components.PCIForwardConfigAuthenticationUpdate$outboundSchema.optional(),
    })
    .transform((v) => {
        return remap$(v, {
            configId: "config_id",
            authenticationId: "authentication_id",
            pciForwardConfigAuthenticationUpdate: "PCIForwardConfigAuthenticationUpdate",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateVaultForwardConfigAuthenticationRequest$ {
    /** @deprecated use `UpdateVaultForwardConfigAuthenticationRequest$inboundSchema` instead. */
    export const inboundSchema = UpdateVaultForwardConfigAuthenticationRequest$inboundSchema;
    /** @deprecated use `UpdateVaultForwardConfigAuthenticationRequest$outboundSchema` instead. */
    export const outboundSchema = UpdateVaultForwardConfigAuthenticationRequest$outboundSchema;
    /** @deprecated use `UpdateVaultForwardConfigAuthenticationRequest$Outbound` instead. */
    export type Outbound = UpdateVaultForwardConfigAuthenticationRequest$Outbound;
}

/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives";
import * as z from "zod";

export type GenerateDownloadUrlRequest = {
    /**
     * The unique ID for a report.
     */
    reportId: string;
    /**
     * The unique ID for a report execution.
     */
    reportExecutionId: string;
};

/** @internal */
export namespace GenerateDownloadUrlRequest$ {
    export const inboundSchema: z.ZodType<GenerateDownloadUrlRequest, z.ZodTypeDef, unknown> = z
        .object({
            report_id: z.string(),
            report_execution_id: z.string(),
        })
        .transform((v) => {
            return remap$(v, {
                report_id: "reportId",
                report_execution_id: "reportExecutionId",
            });
        });

    export type Outbound = {
        report_id: string;
        report_execution_id: string;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, GenerateDownloadUrlRequest> = z
        .object({
            reportId: z.string(),
            reportExecutionId: z.string(),
        })
        .transform((v) => {
            return remap$(v, {
                reportId: "report_id",
                reportExecutionId: "report_execution_id",
            });
        });
}

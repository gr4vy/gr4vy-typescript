/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as components from "../components";
import * as z from "zod";

export type GenerateDownloadUrlRequest = {
    /**
     * The unique ID for a report.
     */
    reportId: string;
    /**
     * The unique ID for a report execution.
     */
    reportExecutionId: string;
};

export type GenerateDownloadUrlResponse = {
    httpMeta: components.HTTPMetadata;
    /**
     * Returns the signed download URL of a report execution result and its
     *
     * @remarks
     * expiration date and time.
     */
    reportExecutionUrl?: components.ReportExecutionUrl | undefined;
};

/** @internal */
export namespace GenerateDownloadUrlRequest$ {
    export type Inbound = {
        report_id: string;
        report_execution_id: string;
    };

    export const inboundSchema: z.ZodType<GenerateDownloadUrlRequest, z.ZodTypeDef, Inbound> = z
        .object({
            report_id: z.string(),
            report_execution_id: z.string(),
        })
        .transform((v) => {
            return {
                reportId: v.report_id,
                reportExecutionId: v.report_execution_id,
            };
        });

    export type Outbound = {
        report_id: string;
        report_execution_id: string;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, GenerateDownloadUrlRequest> = z
        .object({
            reportId: z.string(),
            reportExecutionId: z.string(),
        })
        .transform((v) => {
            return {
                report_id: v.reportId,
                report_execution_id: v.reportExecutionId,
            };
        });
}

/** @internal */
export namespace GenerateDownloadUrlResponse$ {
    export type Inbound = {
        HttpMeta: components.HTTPMetadata$.Inbound;
        ReportExecutionUrl?: components.ReportExecutionUrl$.Inbound | undefined;
    };

    export const inboundSchema: z.ZodType<GenerateDownloadUrlResponse, z.ZodTypeDef, Inbound> = z
        .object({
            HttpMeta: components.HTTPMetadata$.inboundSchema,
            ReportExecutionUrl: components.ReportExecutionUrl$.inboundSchema.optional(),
        })
        .transform((v) => {
            return {
                httpMeta: v.HttpMeta,
                ...(v.ReportExecutionUrl === undefined
                    ? null
                    : { reportExecutionUrl: v.ReportExecutionUrl }),
            };
        });

    export type Outbound = {
        HttpMeta: components.HTTPMetadata$.Outbound;
        ReportExecutionUrl?: components.ReportExecutionUrl$.Outbound | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, GenerateDownloadUrlResponse> = z
        .object({
            httpMeta: components.HTTPMetadata$.outboundSchema,
            reportExecutionUrl: components.ReportExecutionUrl$.outboundSchema.optional(),
        })
        .transform((v) => {
            return {
                HttpMeta: v.httpMeta,
                ...(v.reportExecutionUrl === undefined
                    ? null
                    : { ReportExecutionUrl: v.reportExecutionUrl }),
            };
        });
}

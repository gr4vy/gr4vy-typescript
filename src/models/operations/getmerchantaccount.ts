/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as components from "../components";
import * as z from "zod";

export type GetMerchantAccountRequest = {
    /**
     * The unique ID for a merchant account.
     */
    merchantAccountId: string;
};

export type GetMerchantAccountResponse = components.ErrorGeneric | components.MerchantAccount;

/** @internal */
export namespace GetMerchantAccountRequest$ {
    export type Inbound = {
        merchant_account_id: string;
    };

    export const inboundSchema: z.ZodType<GetMerchantAccountRequest, z.ZodTypeDef, Inbound> = z
        .object({
            merchant_account_id: z.string(),
        })
        .transform((v) => {
            return {
                merchantAccountId: v.merchant_account_id,
            };
        });

    export type Outbound = {
        merchant_account_id: string;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, GetMerchantAccountRequest> = z
        .object({
            merchantAccountId: z.string(),
        })
        .transform((v) => {
            return {
                merchant_account_id: v.merchantAccountId,
            };
        });
}

/** @internal */
export namespace GetMerchantAccountResponse$ {
    export type Inbound = components.ErrorGeneric$.Inbound | components.MerchantAccount$.Inbound;

    export type Outbound = components.ErrorGeneric$.Outbound | components.MerchantAccount$.Outbound;
    export const inboundSchema: z.ZodType<GetMerchantAccountResponse, z.ZodTypeDef, Inbound> =
        z.union([
            components.ErrorGeneric$.inboundSchema,
            components.MerchantAccount$.inboundSchema,
        ]);
    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, GetMerchantAccountResponse> =
        z.union([
            components.ErrorGeneric$.outboundSchema,
            components.MerchantAccount$.outboundSchema,
        ]);
}

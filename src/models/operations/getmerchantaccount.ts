/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives.js";
import * as z from "zod";

export type GetMerchantAccountRequest = {
    /**
     * The unique ID for a merchant account.
     */
    merchantAccountId: string;
};

/** @internal */
export const GetMerchantAccountRequest$inboundSchema: z.ZodType<
    GetMerchantAccountRequest,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        merchant_account_id: z.string(),
    })
    .transform((v) => {
        return remap$(v, {
            merchant_account_id: "merchantAccountId",
        });
    });

/** @internal */
export type GetMerchantAccountRequest$Outbound = {
    merchant_account_id: string;
};

/** @internal */
export const GetMerchantAccountRequest$outboundSchema: z.ZodType<
    GetMerchantAccountRequest$Outbound,
    z.ZodTypeDef,
    GetMerchantAccountRequest
> = z
    .object({
        merchantAccountId: z.string(),
    })
    .transform((v) => {
        return remap$(v, {
            merchantAccountId: "merchant_account_id",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetMerchantAccountRequest$ {
    /** @deprecated use `GetMerchantAccountRequest$inboundSchema` instead. */
    export const inboundSchema = GetMerchantAccountRequest$inboundSchema;
    /** @deprecated use `GetMerchantAccountRequest$outboundSchema` instead. */
    export const outboundSchema = GetMerchantAccountRequest$outboundSchema;
    /** @deprecated use `GetMerchantAccountRequest$Outbound` instead. */
    export type Outbound = GetMerchantAccountRequest$Outbound;
}

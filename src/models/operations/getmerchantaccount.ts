/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as components from "../components";
import * as z from "zod";

export type GetMerchantAccountRequest = {
    /**
     * The unique ID for a merchant account.
     */
    merchantAccountId: string;
};

export type GetMerchantAccountResponse = {
    httpMeta: components.HTTPMetadata;
    /**
     * Returns a merchant account.
     */
    merchantAccount?: components.MerchantAccount | undefined;
    /**
     * Returns a generic error.
     */
    errorGeneric?: components.ErrorGeneric | undefined;
};

/** @internal */
export namespace GetMerchantAccountRequest$ {
    export type Inbound = {
        merchant_account_id: string;
    };

    export const inboundSchema: z.ZodType<GetMerchantAccountRequest, z.ZodTypeDef, Inbound> = z
        .object({
            merchant_account_id: z.string(),
        })
        .transform((v) => {
            return {
                merchantAccountId: v.merchant_account_id,
            };
        });

    export type Outbound = {
        merchant_account_id: string;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, GetMerchantAccountRequest> = z
        .object({
            merchantAccountId: z.string(),
        })
        .transform((v) => {
            return {
                merchant_account_id: v.merchantAccountId,
            };
        });
}

/** @internal */
export namespace GetMerchantAccountResponse$ {
    export type Inbound = {
        HttpMeta: components.HTTPMetadata$.Inbound;
        MerchantAccount?: components.MerchantAccount$.Inbound | undefined;
        ErrorGeneric?: components.ErrorGeneric$.Inbound | undefined;
    };

    export const inboundSchema: z.ZodType<GetMerchantAccountResponse, z.ZodTypeDef, Inbound> = z
        .object({
            HttpMeta: components.HTTPMetadata$.inboundSchema,
            MerchantAccount: components.MerchantAccount$.inboundSchema.optional(),
            ErrorGeneric: components.ErrorGeneric$.inboundSchema.optional(),
        })
        .transform((v) => {
            return {
                httpMeta: v.HttpMeta,
                ...(v.MerchantAccount === undefined
                    ? null
                    : { merchantAccount: v.MerchantAccount }),
                ...(v.ErrorGeneric === undefined ? null : { errorGeneric: v.ErrorGeneric }),
            };
        });

    export type Outbound = {
        HttpMeta: components.HTTPMetadata$.Outbound;
        MerchantAccount?: components.MerchantAccount$.Outbound | undefined;
        ErrorGeneric?: components.ErrorGeneric$.Outbound | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, GetMerchantAccountResponse> = z
        .object({
            httpMeta: components.HTTPMetadata$.outboundSchema,
            merchantAccount: components.MerchantAccount$.outboundSchema.optional(),
            errorGeneric: components.ErrorGeneric$.outboundSchema.optional(),
        })
        .transform((v) => {
            return {
                HttpMeta: v.httpMeta,
                ...(v.merchantAccount === undefined
                    ? null
                    : { MerchantAccount: v.merchantAccount }),
                ...(v.errorGeneric === undefined ? null : { ErrorGeneric: v.errorGeneric }),
            };
        });
}

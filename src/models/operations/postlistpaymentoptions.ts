/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as components from "../components";
import * as z from "zod";

export type PostListPaymentOptionsResponse = {
    httpMeta: components.HTTPMetadata;
    /**
     * Returns a list of available payment options for the given query
     *
     * @remarks
     * parameters.
     */
    paymentOptions?: components.PaymentOptions | undefined;
};

/** @internal */
export namespace PostListPaymentOptionsResponse$ {
    export type Inbound = {
        HttpMeta: components.HTTPMetadata$.Inbound;
        PaymentOptions?: components.PaymentOptions$.Inbound | undefined;
    };

    export const inboundSchema: z.ZodType<PostListPaymentOptionsResponse, z.ZodTypeDef, Inbound> = z
        .object({
            HttpMeta: components.HTTPMetadata$.inboundSchema,
            PaymentOptions: components.PaymentOptions$.inboundSchema.optional(),
        })
        .transform((v) => {
            return {
                httpMeta: v.HttpMeta,
                ...(v.PaymentOptions === undefined ? null : { paymentOptions: v.PaymentOptions }),
            };
        });

    export type Outbound = {
        HttpMeta: components.HTTPMetadata$.Outbound;
        PaymentOptions?: components.PaymentOptions$.Outbound | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, PostListPaymentOptionsResponse> =
        z
            .object({
                httpMeta: components.HTTPMetadata$.outboundSchema,
                paymentOptions: components.PaymentOptions$.outboundSchema.optional(),
            })
            .transform((v) => {
                return {
                    HttpMeta: v.httpMeta,
                    ...(v.paymentOptions === undefined
                        ? null
                        : { PaymentOptions: v.paymentOptions }),
                };
            });
}

/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type CreateClickToPayDigitalWalletSessionRequest = {
  applicationName?: string | undefined;
  clickToPaySessionRequest: components.ClickToPaySessionRequest;
};

/** @internal */
export const CreateClickToPayDigitalWalletSessionRequest$inboundSchema:
  z.ZodType<
    CreateClickToPayDigitalWalletSessionRequest,
    z.ZodTypeDef,
    unknown
  > = z.object({
    application_name: z.string().default("core-api"),
    ClickToPaySessionRequest: components.ClickToPaySessionRequest$inboundSchema,
  }).transform((v) => {
    return remap$(v, {
      "application_name": "applicationName",
      "ClickToPaySessionRequest": "clickToPaySessionRequest",
    });
  });

/** @internal */
export type CreateClickToPayDigitalWalletSessionRequest$Outbound = {
  application_name: string;
  ClickToPaySessionRequest: components.ClickToPaySessionRequest$Outbound;
};

/** @internal */
export const CreateClickToPayDigitalWalletSessionRequest$outboundSchema:
  z.ZodType<
    CreateClickToPayDigitalWalletSessionRequest$Outbound,
    z.ZodTypeDef,
    CreateClickToPayDigitalWalletSessionRequest
  > = z.object({
    applicationName: z.string().default("core-api"),
    clickToPaySessionRequest:
      components.ClickToPaySessionRequest$outboundSchema,
  }).transform((v) => {
    return remap$(v, {
      applicationName: "application_name",
      clickToPaySessionRequest: "ClickToPaySessionRequest",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateClickToPayDigitalWalletSessionRequest$ {
  /** @deprecated use `CreateClickToPayDigitalWalletSessionRequest$inboundSchema` instead. */
  export const inboundSchema =
    CreateClickToPayDigitalWalletSessionRequest$inboundSchema;
  /** @deprecated use `CreateClickToPayDigitalWalletSessionRequest$outboundSchema` instead. */
  export const outboundSchema =
    CreateClickToPayDigitalWalletSessionRequest$outboundSchema;
  /** @deprecated use `CreateClickToPayDigitalWalletSessionRequest$Outbound` instead. */
  export type Outbound = CreateClickToPayDigitalWalletSessionRequest$Outbound;
}

export function createClickToPayDigitalWalletSessionRequestToJSON(
  createClickToPayDigitalWalletSessionRequest:
    CreateClickToPayDigitalWalletSessionRequest,
): string {
  return JSON.stringify(
    CreateClickToPayDigitalWalletSessionRequest$outboundSchema.parse(
      createClickToPayDigitalWalletSessionRequest,
    ),
  );
}

export function createClickToPayDigitalWalletSessionRequestFromJSON(
  jsonString: string,
): SafeParseResult<
  CreateClickToPayDigitalWalletSessionRequest,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      CreateClickToPayDigitalWalletSessionRequest$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'CreateClickToPayDigitalWalletSessionRequest' from JSON`,
  );
}

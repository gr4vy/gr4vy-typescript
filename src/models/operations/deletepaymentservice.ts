/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type DeletePaymentServiceGlobals = {
  merchantAccountId?: string | undefined;
};

export type DeletePaymentServiceRequest = {
  /**
   * the ID of the payment service
   */
  paymentServiceId: string;
  timeoutInSeconds?: number | undefined;
  /**
   * The ID of the merchant account to use for this request.
   */
  merchantAccountId?: string | null | undefined;
};

/** @internal */
export const DeletePaymentServiceGlobals$inboundSchema: z.ZodType<
  DeletePaymentServiceGlobals,
  z.ZodTypeDef,
  unknown
> = z.object({
  merchantAccountId: z.string().optional(),
});

/** @internal */
export type DeletePaymentServiceGlobals$Outbound = {
  merchantAccountId?: string | undefined;
};

/** @internal */
export const DeletePaymentServiceGlobals$outboundSchema: z.ZodType<
  DeletePaymentServiceGlobals$Outbound,
  z.ZodTypeDef,
  DeletePaymentServiceGlobals
> = z.object({
  merchantAccountId: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DeletePaymentServiceGlobals$ {
  /** @deprecated use `DeletePaymentServiceGlobals$inboundSchema` instead. */
  export const inboundSchema = DeletePaymentServiceGlobals$inboundSchema;
  /** @deprecated use `DeletePaymentServiceGlobals$outboundSchema` instead. */
  export const outboundSchema = DeletePaymentServiceGlobals$outboundSchema;
  /** @deprecated use `DeletePaymentServiceGlobals$Outbound` instead. */
  export type Outbound = DeletePaymentServiceGlobals$Outbound;
}

export function deletePaymentServiceGlobalsToJSON(
  deletePaymentServiceGlobals: DeletePaymentServiceGlobals,
): string {
  return JSON.stringify(
    DeletePaymentServiceGlobals$outboundSchema.parse(
      deletePaymentServiceGlobals,
    ),
  );
}

export function deletePaymentServiceGlobalsFromJSON(
  jsonString: string,
): SafeParseResult<DeletePaymentServiceGlobals, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => DeletePaymentServiceGlobals$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'DeletePaymentServiceGlobals' from JSON`,
  );
}

/** @internal */
export const DeletePaymentServiceRequest$inboundSchema: z.ZodType<
  DeletePaymentServiceRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  payment_service_id: z.string(),
  timeout_in_seconds: z.number().default(1),
  merchantAccountId: z.nullable(z.string()).optional(),
}).transform((v) => {
  return remap$(v, {
    "payment_service_id": "paymentServiceId",
    "timeout_in_seconds": "timeoutInSeconds",
  });
});

/** @internal */
export type DeletePaymentServiceRequest$Outbound = {
  payment_service_id: string;
  timeout_in_seconds: number;
  merchantAccountId?: string | null | undefined;
};

/** @internal */
export const DeletePaymentServiceRequest$outboundSchema: z.ZodType<
  DeletePaymentServiceRequest$Outbound,
  z.ZodTypeDef,
  DeletePaymentServiceRequest
> = z.object({
  paymentServiceId: z.string(),
  timeoutInSeconds: z.number().default(1),
  merchantAccountId: z.nullable(z.string()).optional(),
}).transform((v) => {
  return remap$(v, {
    paymentServiceId: "payment_service_id",
    timeoutInSeconds: "timeout_in_seconds",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DeletePaymentServiceRequest$ {
  /** @deprecated use `DeletePaymentServiceRequest$inboundSchema` instead. */
  export const inboundSchema = DeletePaymentServiceRequest$inboundSchema;
  /** @deprecated use `DeletePaymentServiceRequest$outboundSchema` instead. */
  export const outboundSchema = DeletePaymentServiceRequest$outboundSchema;
  /** @deprecated use `DeletePaymentServiceRequest$Outbound` instead. */
  export type Outbound = DeletePaymentServiceRequest$Outbound;
}

export function deletePaymentServiceRequestToJSON(
  deletePaymentServiceRequest: DeletePaymentServiceRequest,
): string {
  return JSON.stringify(
    DeletePaymentServiceRequest$outboundSchema.parse(
      deletePaymentServiceRequest,
    ),
  );
}

export function deletePaymentServiceRequestFromJSON(
  jsonString: string,
): SafeParseResult<DeletePaymentServiceRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => DeletePaymentServiceRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'DeletePaymentServiceRequest' from JSON`,
  );
}

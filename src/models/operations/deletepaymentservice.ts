/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives.js";
import * as z from "zod";

export type DeletePaymentServiceRequest = {
    /**
     * The ID of the payment service.
     */
    paymentServiceId: string;
};

/** @internal */
export const DeletePaymentServiceRequest$inboundSchema: z.ZodType<
    DeletePaymentServiceRequest,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        payment_service_id: z.string(),
    })
    .transform((v) => {
        return remap$(v, {
            payment_service_id: "paymentServiceId",
        });
    });

/** @internal */
export type DeletePaymentServiceRequest$Outbound = {
    payment_service_id: string;
};

/** @internal */
export const DeletePaymentServiceRequest$outboundSchema: z.ZodType<
    DeletePaymentServiceRequest$Outbound,
    z.ZodTypeDef,
    DeletePaymentServiceRequest
> = z
    .object({
        paymentServiceId: z.string(),
    })
    .transform((v) => {
        return remap$(v, {
            paymentServiceId: "payment_service_id",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DeletePaymentServiceRequest$ {
    /** @deprecated use `DeletePaymentServiceRequest$inboundSchema` instead. */
    export const inboundSchema = DeletePaymentServiceRequest$inboundSchema;
    /** @deprecated use `DeletePaymentServiceRequest$outboundSchema` instead. */
    export const outboundSchema = DeletePaymentServiceRequest$outboundSchema;
    /** @deprecated use `DeletePaymentServiceRequest$Outbound` instead. */
    export type Outbound = DeletePaymentServiceRequest$Outbound;
}

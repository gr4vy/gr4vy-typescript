/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives";
import * as z from "zod";

export type DeletePaymentServiceRequest = {
    /**
     * The ID of the payment service.
     */
    paymentServiceId: string;
};

/** @internal */
export namespace DeletePaymentServiceRequest$ {
    export const inboundSchema: z.ZodType<DeletePaymentServiceRequest, z.ZodTypeDef, unknown> = z
        .object({
            payment_service_id: z.string(),
        })
        .transform((v) => {
            return remap$(v, {
                payment_service_id: "paymentServiceId",
            });
        });

    export type Outbound = {
        payment_service_id: string;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, DeletePaymentServiceRequest> = z
        .object({
            paymentServiceId: z.string(),
        })
        .transform((v) => {
            return remap$(v, {
                paymentServiceId: "payment_service_id",
            });
        });
}

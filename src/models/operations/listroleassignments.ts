/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives.js";
import { ClosedEnum } from "../../types/enums.js";
import * as z from "zod";

/**
 * Filters for role assignments for the assignee of the given type.
 */
export const AssigneeType = {
    User: "user",
} as const;
/**
 * Filters for role assignments for the assignee of the given type.
 */
export type AssigneeType = ClosedEnum<typeof AssigneeType>;

export type ListRoleAssignmentsRequest = {
    /**
     * Filters for role assignments for the role that has a matching `id` value.
     */
    roleId?: string | undefined;
    /**
     * Filters for role assignments for the assignee of the given type.
     */
    assigneeType?: AssigneeType | undefined;
    /**
     * Filters for role assignments for the assignee that has a matching `id` value.
     *
     * @remarks
     * The `assignee_type` must also be specified.
     */
    assigneeId?: string | undefined;
    /**
     * Defines the maximum number of items to return for this request.
     */
    limit?: number | undefined;
    /**
     * A cursor that identifies the page of results to return. This is used to
     *
     * @remarks
     * paginate the results of this API.
     *
     * For the first page of results, this parameter can be left out.
     * For additional pages, use the value returned by the API in
     * the `next_cursor` field. Similarly the `previous_cursor` can be used to
     * reverse backwards in the list.
     */
    cursor?: string | undefined;
};

/** @internal */
export const AssigneeType$inboundSchema: z.ZodNativeEnum<typeof AssigneeType> =
    z.nativeEnum(AssigneeType);

/** @internal */
export const AssigneeType$outboundSchema: z.ZodNativeEnum<typeof AssigneeType> =
    AssigneeType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AssigneeType$ {
    /** @deprecated use `AssigneeType$inboundSchema` instead. */
    export const inboundSchema = AssigneeType$inboundSchema;
    /** @deprecated use `AssigneeType$outboundSchema` instead. */
    export const outboundSchema = AssigneeType$outboundSchema;
}

/** @internal */
export const ListRoleAssignmentsRequest$inboundSchema: z.ZodType<
    ListRoleAssignmentsRequest,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        role_id: z.string().optional(),
        assignee_type: AssigneeType$inboundSchema.optional(),
        assignee_id: z.string().optional(),
        limit: z.number().int().default(20),
        cursor: z.string().optional(),
    })
    .transform((v) => {
        return remap$(v, {
            role_id: "roleId",
            assignee_type: "assigneeType",
            assignee_id: "assigneeId",
        });
    });

/** @internal */
export type ListRoleAssignmentsRequest$Outbound = {
    role_id?: string | undefined;
    assignee_type?: string | undefined;
    assignee_id?: string | undefined;
    limit: number;
    cursor?: string | undefined;
};

/** @internal */
export const ListRoleAssignmentsRequest$outboundSchema: z.ZodType<
    ListRoleAssignmentsRequest$Outbound,
    z.ZodTypeDef,
    ListRoleAssignmentsRequest
> = z
    .object({
        roleId: z.string().optional(),
        assigneeType: AssigneeType$outboundSchema.optional(),
        assigneeId: z.string().optional(),
        limit: z.number().int().default(20),
        cursor: z.string().optional(),
    })
    .transform((v) => {
        return remap$(v, {
            roleId: "role_id",
            assigneeType: "assignee_type",
            assigneeId: "assignee_id",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ListRoleAssignmentsRequest$ {
    /** @deprecated use `ListRoleAssignmentsRequest$inboundSchema` instead. */
    export const inboundSchema = ListRoleAssignmentsRequest$inboundSchema;
    /** @deprecated use `ListRoleAssignmentsRequest$outboundSchema` instead. */
    export const outboundSchema = ListRoleAssignmentsRequest$outboundSchema;
    /** @deprecated use `ListRoleAssignmentsRequest$Outbound` instead. */
    export type Outbound = ListRoleAssignmentsRequest$Outbound;
}

/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives.js";
import * as z from "zod";

export type ListRoleAssignmentsRequest = {
    roleId?: string | undefined;
    assigneeId?: string | undefined;
    assigneeType?: string | undefined;
    cursor?: string | undefined;
    limit?: number | undefined;
};

export type ListRoleAssignmentsResponse = {
    result?: any | undefined;
};

/** @internal */
export const ListRoleAssignmentsRequest$inboundSchema: z.ZodType<
    ListRoleAssignmentsRequest,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        role_id: z.string().optional(),
        assignee_id: z.string().optional(),
        assignee_type: z.string().optional(),
        cursor: z.string().optional(),
        limit: z.number().int().default(20),
    })
    .transform((v) => {
        return remap$(v, {
            role_id: "roleId",
            assignee_id: "assigneeId",
            assignee_type: "assigneeType",
        });
    });

/** @internal */
export type ListRoleAssignmentsRequest$Outbound = {
    role_id?: string | undefined;
    assignee_id?: string | undefined;
    assignee_type?: string | undefined;
    cursor?: string | undefined;
    limit: number;
};

/** @internal */
export const ListRoleAssignmentsRequest$outboundSchema: z.ZodType<
    ListRoleAssignmentsRequest$Outbound,
    z.ZodTypeDef,
    ListRoleAssignmentsRequest
> = z
    .object({
        roleId: z.string().optional(),
        assigneeId: z.string().optional(),
        assigneeType: z.string().optional(),
        cursor: z.string().optional(),
        limit: z.number().int().default(20),
    })
    .transform((v) => {
        return remap$(v, {
            roleId: "role_id",
            assigneeId: "assignee_id",
            assigneeType: "assignee_type",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ListRoleAssignmentsRequest$ {
    /** @deprecated use `ListRoleAssignmentsRequest$inboundSchema` instead. */
    export const inboundSchema = ListRoleAssignmentsRequest$inboundSchema;
    /** @deprecated use `ListRoleAssignmentsRequest$outboundSchema` instead. */
    export const outboundSchema = ListRoleAssignmentsRequest$outboundSchema;
    /** @deprecated use `ListRoleAssignmentsRequest$Outbound` instead. */
    export type Outbound = ListRoleAssignmentsRequest$Outbound;
}

/** @internal */
export const ListRoleAssignmentsResponse$inboundSchema: z.ZodType<
    ListRoleAssignmentsResponse,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        Result: z.any().optional(),
    })
    .transform((v) => {
        return remap$(v, {
            Result: "result",
        });
    });

/** @internal */
export type ListRoleAssignmentsResponse$Outbound = {
    Result?: any | undefined;
};

/** @internal */
export const ListRoleAssignmentsResponse$outboundSchema: z.ZodType<
    ListRoleAssignmentsResponse$Outbound,
    z.ZodTypeDef,
    ListRoleAssignmentsResponse
> = z
    .object({
        result: z.any().optional(),
    })
    .transform((v) => {
        return remap$(v, {
            result: "Result",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ListRoleAssignmentsResponse$ {
    /** @deprecated use `ListRoleAssignmentsResponse$inboundSchema` instead. */
    export const inboundSchema = ListRoleAssignmentsResponse$inboundSchema;
    /** @deprecated use `ListRoleAssignmentsResponse$outboundSchema` instead. */
    export const outboundSchema = ListRoleAssignmentsResponse$outboundSchema;
    /** @deprecated use `ListRoleAssignmentsResponse$Outbound` instead. */
    export type Outbound = ListRoleAssignmentsResponse$Outbound;
}

/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives.js";
import * as components from "../components/index.js";
import * as z from "zod";

export type CreateNetworkTokenRequest = {
    paymentMethodId: string;
    networkTokenCreate: components.NetworkTokenCreate;
};

/** @internal */
export const CreateNetworkTokenRequest$inboundSchema: z.ZodType<
    CreateNetworkTokenRequest,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        payment_method_id: z.string(),
        NetworkTokenCreate: components.NetworkTokenCreate$inboundSchema,
    })
    .transform((v) => {
        return remap$(v, {
            payment_method_id: "paymentMethodId",
            NetworkTokenCreate: "networkTokenCreate",
        });
    });

/** @internal */
export type CreateNetworkTokenRequest$Outbound = {
    payment_method_id: string;
    NetworkTokenCreate: components.NetworkTokenCreate$Outbound;
};

/** @internal */
export const CreateNetworkTokenRequest$outboundSchema: z.ZodType<
    CreateNetworkTokenRequest$Outbound,
    z.ZodTypeDef,
    CreateNetworkTokenRequest
> = z
    .object({
        paymentMethodId: z.string(),
        networkTokenCreate: components.NetworkTokenCreate$outboundSchema,
    })
    .transform((v) => {
        return remap$(v, {
            paymentMethodId: "payment_method_id",
            networkTokenCreate: "NetworkTokenCreate",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateNetworkTokenRequest$ {
    /** @deprecated use `CreateNetworkTokenRequest$inboundSchema` instead. */
    export const inboundSchema = CreateNetworkTokenRequest$inboundSchema;
    /** @deprecated use `CreateNetworkTokenRequest$outboundSchema` instead. */
    export const outboundSchema = CreateNetworkTokenRequest$outboundSchema;
    /** @deprecated use `CreateNetworkTokenRequest$Outbound` instead. */
    export type Outbound = CreateNetworkTokenRequest$Outbound;
}

/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives.js";
import * as components from "../components/index.js";
import * as z from "zod";

export type CreateFlowActionRuleBody = {};

export type CreateFlowActionRuleRequest = {
    /**
     * An enumeration.
     */
    flow: components.Flow;
    /**
     * An enumeration.
     */
    action: components.FlowAction;
    requestBody: CreateFlowActionRuleBody;
};

/** @internal */
export const CreateFlowActionRuleBody$inboundSchema: z.ZodType<
    CreateFlowActionRuleBody,
    z.ZodTypeDef,
    unknown
> = z.object({});

/** @internal */
export type CreateFlowActionRuleBody$Outbound = {};

/** @internal */
export const CreateFlowActionRuleBody$outboundSchema: z.ZodType<
    CreateFlowActionRuleBody$Outbound,
    z.ZodTypeDef,
    CreateFlowActionRuleBody
> = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateFlowActionRuleBody$ {
    /** @deprecated use `CreateFlowActionRuleBody$inboundSchema` instead. */
    export const inboundSchema = CreateFlowActionRuleBody$inboundSchema;
    /** @deprecated use `CreateFlowActionRuleBody$outboundSchema` instead. */
    export const outboundSchema = CreateFlowActionRuleBody$outboundSchema;
    /** @deprecated use `CreateFlowActionRuleBody$Outbound` instead. */
    export type Outbound = CreateFlowActionRuleBody$Outbound;
}

/** @internal */
export const CreateFlowActionRuleRequest$inboundSchema: z.ZodType<
    CreateFlowActionRuleRequest,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        flow: components.Flow$inboundSchema,
        action: components.FlowAction$inboundSchema,
        RequestBody: z.lazy(() => CreateFlowActionRuleBody$inboundSchema),
    })
    .transform((v) => {
        return remap$(v, {
            RequestBody: "requestBody",
        });
    });

/** @internal */
export type CreateFlowActionRuleRequest$Outbound = {
    flow: string;
    action: string;
    RequestBody: CreateFlowActionRuleBody$Outbound;
};

/** @internal */
export const CreateFlowActionRuleRequest$outboundSchema: z.ZodType<
    CreateFlowActionRuleRequest$Outbound,
    z.ZodTypeDef,
    CreateFlowActionRuleRequest
> = z
    .object({
        flow: components.Flow$outboundSchema,
        action: components.FlowAction$outboundSchema,
        requestBody: z.lazy(() => CreateFlowActionRuleBody$outboundSchema),
    })
    .transform((v) => {
        return remap$(v, {
            requestBody: "RequestBody",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateFlowActionRuleRequest$ {
    /** @deprecated use `CreateFlowActionRuleRequest$inboundSchema` instead. */
    export const inboundSchema = CreateFlowActionRuleRequest$inboundSchema;
    /** @deprecated use `CreateFlowActionRuleRequest$outboundSchema` instead. */
    export const outboundSchema = CreateFlowActionRuleRequest$outboundSchema;
    /** @deprecated use `CreateFlowActionRuleRequest$Outbound` instead. */
    export type Outbound = CreateFlowActionRuleRequest$Outbound;
}

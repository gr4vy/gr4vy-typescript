/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as components from "../components";
import * as z from "zod";

export type ListBuyerGiftCardsRequest = {
    /**
     * Filters the results to only the items for which the `buyer` has an
     *
     * @remarks
     * `id` that matches this value.
     */
    buyerId?: string | undefined;
    /**
     * Filters the results to only the items for which the `buyer` has an
     *
     * @remarks
     * `external_identifier` that matches this value.
     */
    buyerExternalIdentifier?: string | undefined;
};

export type ListBuyerGiftCardsResponse = {
    httpMeta: components.HTTPMetadata;
    /**
     * Returns a list of available gift cards for a buyer.
     */
    giftCardsSummary?: components.GiftCardsSummary | undefined;
};

/** @internal */
export namespace ListBuyerGiftCardsRequest$ {
    export type Inbound = {
        buyer_id?: string | undefined;
        buyer_external_identifier?: string | undefined;
    };

    export const inboundSchema: z.ZodType<ListBuyerGiftCardsRequest, z.ZodTypeDef, Inbound> = z
        .object({
            buyer_id: z.string().optional(),
            buyer_external_identifier: z.string().optional(),
        })
        .transform((v) => {
            return {
                ...(v.buyer_id === undefined ? null : { buyerId: v.buyer_id }),
                ...(v.buyer_external_identifier === undefined
                    ? null
                    : { buyerExternalIdentifier: v.buyer_external_identifier }),
            };
        });

    export type Outbound = {
        buyer_id?: string | undefined;
        buyer_external_identifier?: string | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, ListBuyerGiftCardsRequest> = z
        .object({
            buyerId: z.string().optional(),
            buyerExternalIdentifier: z.string().optional(),
        })
        .transform((v) => {
            return {
                ...(v.buyerId === undefined ? null : { buyer_id: v.buyerId }),
                ...(v.buyerExternalIdentifier === undefined
                    ? null
                    : { buyer_external_identifier: v.buyerExternalIdentifier }),
            };
        });
}

/** @internal */
export namespace ListBuyerGiftCardsResponse$ {
    export type Inbound = {
        HttpMeta: components.HTTPMetadata$.Inbound;
        "GiftCards--Summary"?: components.GiftCardsSummary$.Inbound | undefined;
    };

    export const inboundSchema: z.ZodType<ListBuyerGiftCardsResponse, z.ZodTypeDef, Inbound> = z
        .object({
            HttpMeta: components.HTTPMetadata$.inboundSchema,
            "GiftCards--Summary": components.GiftCardsSummary$.inboundSchema.optional(),
        })
        .transform((v) => {
            return {
                httpMeta: v.HttpMeta,
                ...(v["GiftCards--Summary"] === undefined
                    ? null
                    : { giftCardsSummary: v["GiftCards--Summary"] }),
            };
        });

    export type Outbound = {
        HttpMeta: components.HTTPMetadata$.Outbound;
        "GiftCards--Summary"?: components.GiftCardsSummary$.Outbound | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, ListBuyerGiftCardsResponse> = z
        .object({
            httpMeta: components.HTTPMetadata$.outboundSchema,
            giftCardsSummary: components.GiftCardsSummary$.outboundSchema.optional(),
        })
        .transform((v) => {
            return {
                HttpMeta: v.httpMeta,
                ...(v.giftCardsSummary === undefined
                    ? null
                    : { "GiftCards--Summary": v.giftCardsSummary }),
            };
        });
}

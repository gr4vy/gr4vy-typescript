/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";

export type ListRolesRequest = {
    /**
     * Defines the maximum number of items to return for this request.
     */
    limit?: number | undefined;
    /**
     * A cursor that identifies the page of results to return. This is used to
     *
     * @remarks
     * paginate the results of this API.
     *
     * For the first page of results, this parameter can be left out.
     * For additional pages, use the value returned by the API in
     * the `next_cursor` field. Similarly the `previous_cursor` can be used to
     * reverse backwards in the list.
     */
    cursor?: string | undefined;
};

/** @internal */
export const ListRolesRequest$inboundSchema: z.ZodType<ListRolesRequest, z.ZodTypeDef, unknown> =
    z.object({
        limit: z.number().int().default(20),
        cursor: z.string().optional(),
    });

/** @internal */
export type ListRolesRequest$Outbound = {
    limit: number;
    cursor?: string | undefined;
};

/** @internal */
export const ListRolesRequest$outboundSchema: z.ZodType<
    ListRolesRequest$Outbound,
    z.ZodTypeDef,
    ListRolesRequest
> = z.object({
    limit: z.number().int().default(20),
    cursor: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ListRolesRequest$ {
    /** @deprecated use `ListRolesRequest$inboundSchema` instead. */
    export const inboundSchema = ListRolesRequest$inboundSchema;
    /** @deprecated use `ListRolesRequest$outboundSchema` instead. */
    export const outboundSchema = ListRolesRequest$outboundSchema;
    /** @deprecated use `ListRolesRequest$Outbound` instead. */
    export type Outbound = ListRolesRequest$Outbound;
}

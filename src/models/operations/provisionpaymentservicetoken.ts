/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as components from "../components";
import * as z from "zod";

export type ProvisionPaymentServiceTokenRequest = {
    /**
     * The ID of the payment method.
     */
    paymentMethodId: string;
    paymentServiceTokenRequest?: components.PaymentServiceTokenRequest | undefined;
};

export type ProvisionPaymentServiceTokenResponse = {
    httpMeta: components.HTTPMetadata;
    /**
     * Returns the created payment service token.
     */
    paymentServiceToken?: components.PaymentServiceToken | undefined;
};

/** @internal */
export namespace ProvisionPaymentServiceTokenRequest$ {
    export type Inbound = {
        payment_method_id: string;
        PaymentServiceTokenRequest?: components.PaymentServiceTokenRequest$.Inbound | undefined;
    };

    export const inboundSchema: z.ZodType<
        ProvisionPaymentServiceTokenRequest,
        z.ZodTypeDef,
        Inbound
    > = z
        .object({
            payment_method_id: z.string(),
            PaymentServiceTokenRequest:
                components.PaymentServiceTokenRequest$.inboundSchema.optional(),
        })
        .transform((v) => {
            return {
                paymentMethodId: v.payment_method_id,
                ...(v.PaymentServiceTokenRequest === undefined
                    ? null
                    : { paymentServiceTokenRequest: v.PaymentServiceTokenRequest }),
            };
        });

    export type Outbound = {
        payment_method_id: string;
        PaymentServiceTokenRequest?: components.PaymentServiceTokenRequest$.Outbound | undefined;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        ProvisionPaymentServiceTokenRequest
    > = z
        .object({
            paymentMethodId: z.string(),
            paymentServiceTokenRequest:
                components.PaymentServiceTokenRequest$.outboundSchema.optional(),
        })
        .transform((v) => {
            return {
                payment_method_id: v.paymentMethodId,
                ...(v.paymentServiceTokenRequest === undefined
                    ? null
                    : { PaymentServiceTokenRequest: v.paymentServiceTokenRequest }),
            };
        });
}

/** @internal */
export namespace ProvisionPaymentServiceTokenResponse$ {
    export type Inbound = {
        HttpMeta: components.HTTPMetadata$.Inbound;
        PaymentServiceToken?: components.PaymentServiceToken$.Inbound | undefined;
    };

    export const inboundSchema: z.ZodType<
        ProvisionPaymentServiceTokenResponse,
        z.ZodTypeDef,
        Inbound
    > = z
        .object({
            HttpMeta: components.HTTPMetadata$.inboundSchema,
            PaymentServiceToken: components.PaymentServiceToken$.inboundSchema.optional(),
        })
        .transform((v) => {
            return {
                httpMeta: v.HttpMeta,
                ...(v.PaymentServiceToken === undefined
                    ? null
                    : { paymentServiceToken: v.PaymentServiceToken }),
            };
        });

    export type Outbound = {
        HttpMeta: components.HTTPMetadata$.Outbound;
        PaymentServiceToken?: components.PaymentServiceToken$.Outbound | undefined;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        ProvisionPaymentServiceTokenResponse
    > = z
        .object({
            httpMeta: components.HTTPMetadata$.outboundSchema,
            paymentServiceToken: components.PaymentServiceToken$.outboundSchema.optional(),
        })
        .transform((v) => {
            return {
                HttpMeta: v.httpMeta,
                ...(v.paymentServiceToken === undefined
                    ? null
                    : { PaymentServiceToken: v.paymentServiceToken }),
            };
        });
}

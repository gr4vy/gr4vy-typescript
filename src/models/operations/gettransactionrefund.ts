/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives.js";
import * as z from "zod";

export type GetTransactionRefundRequest = {
    transactionId: string;
    refundId: string;
};

/** @internal */
export const GetTransactionRefundRequest$inboundSchema: z.ZodType<
    GetTransactionRefundRequest,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        transaction_id: z.string(),
        refund_id: z.string(),
    })
    .transform((v) => {
        return remap$(v, {
            transaction_id: "transactionId",
            refund_id: "refundId",
        });
    });

/** @internal */
export type GetTransactionRefundRequest$Outbound = {
    transaction_id: string;
    refund_id: string;
};

/** @internal */
export const GetTransactionRefundRequest$outboundSchema: z.ZodType<
    GetTransactionRefundRequest$Outbound,
    z.ZodTypeDef,
    GetTransactionRefundRequest
> = z
    .object({
        transactionId: z.string(),
        refundId: z.string(),
    })
    .transform((v) => {
        return remap$(v, {
            transactionId: "transaction_id",
            refundId: "refund_id",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetTransactionRefundRequest$ {
    /** @deprecated use `GetTransactionRefundRequest$inboundSchema` instead. */
    export const inboundSchema = GetTransactionRefundRequest$inboundSchema;
    /** @deprecated use `GetTransactionRefundRequest$outboundSchema` instead. */
    export const outboundSchema = GetTransactionRefundRequest$outboundSchema;
    /** @deprecated use `GetTransactionRefundRequest$Outbound` instead. */
    export type Outbound = GetTransactionRefundRequest$Outbound;
}

/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as components from "../components";
import * as z from "zod";

export type AddDigitalWalletDomainNameRequest = {
    /**
     * The ID of the registered digital wallet.
     */
    digitalWalletId: string;
    digitalWalletDomain?: components.DigitalWalletDomain | undefined;
};

export type AddDigitalWalletDomainNameResponse = {};

/** @internal */
export namespace AddDigitalWalletDomainNameRequest$ {
    export type Inbound = {
        digital_wallet_id: string;
        DigitalWalletDomain?: components.DigitalWalletDomain$.Inbound | undefined;
    };

    export const inboundSchema: z.ZodType<
        AddDigitalWalletDomainNameRequest,
        z.ZodTypeDef,
        Inbound
    > = z
        .object({
            digital_wallet_id: z.string(),
            DigitalWalletDomain: components.DigitalWalletDomain$.inboundSchema.optional(),
        })
        .transform((v) => {
            return {
                digitalWalletId: v.digital_wallet_id,
                ...(v.DigitalWalletDomain === undefined
                    ? null
                    : { digitalWalletDomain: v.DigitalWalletDomain }),
            };
        });

    export type Outbound = {
        digital_wallet_id: string;
        DigitalWalletDomain?: components.DigitalWalletDomain$.Outbound | undefined;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        AddDigitalWalletDomainNameRequest
    > = z
        .object({
            digitalWalletId: z.string(),
            digitalWalletDomain: components.DigitalWalletDomain$.outboundSchema.optional(),
        })
        .transform((v) => {
            return {
                digital_wallet_id: v.digitalWalletId,
                ...(v.digitalWalletDomain === undefined
                    ? null
                    : { DigitalWalletDomain: v.digitalWalletDomain }),
            };
        });
}

/** @internal */
export namespace AddDigitalWalletDomainNameResponse$ {
    export type Inbound = {};

    export const inboundSchema: z.ZodType<
        AddDigitalWalletDomainNameResponse,
        z.ZodTypeDef,
        Inbound
    > = z.object({});

    export type Outbound = {};

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        AddDigitalWalletDomainNameResponse
    > = z.object({});
}

/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives.js";
import * as z from "zod";

export type ListReportExecutionsRequest = {
    reportId: string;
    cursor?: string | undefined;
    limit?: number | undefined;
};

export type ListReportExecutionsResponse = {
    result?: any | undefined;
};

/** @internal */
export const ListReportExecutionsRequest$inboundSchema: z.ZodType<
    ListReportExecutionsRequest,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        report_id: z.string(),
        cursor: z.string().optional(),
        limit: z.number().int().default(20),
    })
    .transform((v) => {
        return remap$(v, {
            report_id: "reportId",
        });
    });

/** @internal */
export type ListReportExecutionsRequest$Outbound = {
    report_id: string;
    cursor?: string | undefined;
    limit: number;
};

/** @internal */
export const ListReportExecutionsRequest$outboundSchema: z.ZodType<
    ListReportExecutionsRequest$Outbound,
    z.ZodTypeDef,
    ListReportExecutionsRequest
> = z
    .object({
        reportId: z.string(),
        cursor: z.string().optional(),
        limit: z.number().int().default(20),
    })
    .transform((v) => {
        return remap$(v, {
            reportId: "report_id",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ListReportExecutionsRequest$ {
    /** @deprecated use `ListReportExecutionsRequest$inboundSchema` instead. */
    export const inboundSchema = ListReportExecutionsRequest$inboundSchema;
    /** @deprecated use `ListReportExecutionsRequest$outboundSchema` instead. */
    export const outboundSchema = ListReportExecutionsRequest$outboundSchema;
    /** @deprecated use `ListReportExecutionsRequest$Outbound` instead. */
    export type Outbound = ListReportExecutionsRequest$Outbound;
}

/** @internal */
export const ListReportExecutionsResponse$inboundSchema: z.ZodType<
    ListReportExecutionsResponse,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        Result: z.any().optional(),
    })
    .transform((v) => {
        return remap$(v, {
            Result: "result",
        });
    });

/** @internal */
export type ListReportExecutionsResponse$Outbound = {
    Result?: any | undefined;
};

/** @internal */
export const ListReportExecutionsResponse$outboundSchema: z.ZodType<
    ListReportExecutionsResponse$Outbound,
    z.ZodTypeDef,
    ListReportExecutionsResponse
> = z
    .object({
        result: z.any().optional(),
    })
    .transform((v) => {
        return remap$(v, {
            result: "Result",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ListReportExecutionsResponse$ {
    /** @deprecated use `ListReportExecutionsResponse$inboundSchema` instead. */
    export const inboundSchema = ListReportExecutionsResponse$inboundSchema;
    /** @deprecated use `ListReportExecutionsResponse$outboundSchema` instead. */
    export const outboundSchema = ListReportExecutionsResponse$outboundSchema;
    /** @deprecated use `ListReportExecutionsResponse$Outbound` instead. */
    export type Outbound = ListReportExecutionsResponse$Outbound;
}

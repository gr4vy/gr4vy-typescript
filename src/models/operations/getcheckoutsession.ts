/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type GetCheckoutSessionRequest = {
  /**
   * The ID of the checkout session.
   */
  sessionId: string;
  timeoutInSeconds?: number | undefined;
  /**
   * The ID of the merchant account to use for this request.
   */
  xGr4vyMerchantAccountId?: string | null | undefined;
};

/** @internal */
export const GetCheckoutSessionRequest$inboundSchema: z.ZodType<
  GetCheckoutSessionRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  session_id: z.string(),
  timeout_in_seconds: z.number().default(1),
  "x-gr4vy-merchant-account-id": z.nullable(z.string()).optional(),
}).transform((v) => {
  return remap$(v, {
    "session_id": "sessionId",
    "timeout_in_seconds": "timeoutInSeconds",
    "x-gr4vy-merchant-account-id": "xGr4vyMerchantAccountId",
  });
});

/** @internal */
export type GetCheckoutSessionRequest$Outbound = {
  session_id: string;
  timeout_in_seconds: number;
  "x-gr4vy-merchant-account-id"?: string | null | undefined;
};

/** @internal */
export const GetCheckoutSessionRequest$outboundSchema: z.ZodType<
  GetCheckoutSessionRequest$Outbound,
  z.ZodTypeDef,
  GetCheckoutSessionRequest
> = z.object({
  sessionId: z.string(),
  timeoutInSeconds: z.number().default(1),
  xGr4vyMerchantAccountId: z.nullable(z.string()).optional(),
}).transform((v) => {
  return remap$(v, {
    sessionId: "session_id",
    timeoutInSeconds: "timeout_in_seconds",
    xGr4vyMerchantAccountId: "x-gr4vy-merchant-account-id",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetCheckoutSessionRequest$ {
  /** @deprecated use `GetCheckoutSessionRequest$inboundSchema` instead. */
  export const inboundSchema = GetCheckoutSessionRequest$inboundSchema;
  /** @deprecated use `GetCheckoutSessionRequest$outboundSchema` instead. */
  export const outboundSchema = GetCheckoutSessionRequest$outboundSchema;
  /** @deprecated use `GetCheckoutSessionRequest$Outbound` instead. */
  export type Outbound = GetCheckoutSessionRequest$Outbound;
}

export function getCheckoutSessionRequestToJSON(
  getCheckoutSessionRequest: GetCheckoutSessionRequest,
): string {
  return JSON.stringify(
    GetCheckoutSessionRequest$outboundSchema.parse(getCheckoutSessionRequest),
  );
}

export function getCheckoutSessionRequestFromJSON(
  jsonString: string,
): SafeParseResult<GetCheckoutSessionRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetCheckoutSessionRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetCheckoutSessionRequest' from JSON`,
  );
}

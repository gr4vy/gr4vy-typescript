/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as components from "../components";
import * as z from "zod";

export type DeleteApplePayCertificateRequest = {
    /**
     * The unique ID for an Apple Pay certificate record.
     */
    applePayCertificateId: string;
};

export type DeleteApplePayCertificateResponse = {
    httpMeta: components.HTTPMetadata;
};

/** @internal */
export namespace DeleteApplePayCertificateRequest$ {
    export type Inbound = {
        apple_pay_certificate_id: string;
    };

    export const inboundSchema: z.ZodType<DeleteApplePayCertificateRequest, z.ZodTypeDef, Inbound> =
        z
            .object({
                apple_pay_certificate_id: z.string(),
            })
            .transform((v) => {
                return {
                    applePayCertificateId: v.apple_pay_certificate_id,
                };
            });

    export type Outbound = {
        apple_pay_certificate_id: string;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        DeleteApplePayCertificateRequest
    > = z
        .object({
            applePayCertificateId: z.string(),
        })
        .transform((v) => {
            return {
                apple_pay_certificate_id: v.applePayCertificateId,
            };
        });
}

/** @internal */
export namespace DeleteApplePayCertificateResponse$ {
    export type Inbound = {
        HttpMeta: components.HTTPMetadata$.Inbound;
    };

    export const inboundSchema: z.ZodType<
        DeleteApplePayCertificateResponse,
        z.ZodTypeDef,
        Inbound
    > = z
        .object({
            HttpMeta: components.HTTPMetadata$.inboundSchema,
        })
        .transform((v) => {
            return {
                httpMeta: v.HttpMeta,
            };
        });

    export type Outbound = {
        HttpMeta: components.HTTPMetadata$.Outbound;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        DeleteApplePayCertificateResponse
    > = z
        .object({
            httpMeta: components.HTTPMetadata$.outboundSchema,
        })
        .transform((v) => {
            return {
                HttpMeta: v.httpMeta,
            };
        });
}

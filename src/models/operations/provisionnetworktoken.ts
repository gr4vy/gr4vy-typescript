/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives";
import * as components from "../components";
import * as z from "zod";

export type ProvisionNetworkTokenRequest = {
    /**
     * The ID of the payment method.
     */
    paymentMethodId: string;
    networkTokenRequest?: components.NetworkTokenRequest | undefined;
};

/** @internal */
export namespace ProvisionNetworkTokenRequest$ {
    export const inboundSchema: z.ZodType<ProvisionNetworkTokenRequest, z.ZodTypeDef, unknown> = z
        .object({
            payment_method_id: z.string(),
            NetworkTokenRequest: components.NetworkTokenRequest$.inboundSchema.optional(),
        })
        .transform((v) => {
            return remap$(v, {
                payment_method_id: "paymentMethodId",
                NetworkTokenRequest: "networkTokenRequest",
            });
        });

    export type Outbound = {
        payment_method_id: string;
        NetworkTokenRequest?: components.NetworkTokenRequest$.Outbound | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, ProvisionNetworkTokenRequest> = z
        .object({
            paymentMethodId: z.string(),
            networkTokenRequest: components.NetworkTokenRequest$.outboundSchema.optional(),
        })
        .transform((v) => {
            return remap$(v, {
                paymentMethodId: "payment_method_id",
                networkTokenRequest: "NetworkTokenRequest",
            });
        });
}

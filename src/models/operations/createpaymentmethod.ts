/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type CreatePaymentMethodBody =
  | components.CheckoutSessionPaymentMethodCreate
  | components.RedirectPaymentMethodCreate
  | components.CardPaymentMethodCreate;

/** @internal */
export const CreatePaymentMethodBody$inboundSchema: z.ZodType<
  CreatePaymentMethodBody,
  z.ZodTypeDef,
  unknown
> = z.union([
  components.CheckoutSessionPaymentMethodCreate$inboundSchema,
  components.RedirectPaymentMethodCreate$inboundSchema,
  components.CardPaymentMethodCreate$inboundSchema,
]);

/** @internal */
export type CreatePaymentMethodBody$Outbound =
  | components.CheckoutSessionPaymentMethodCreate$Outbound
  | components.RedirectPaymentMethodCreate$Outbound
  | components.CardPaymentMethodCreate$Outbound;

/** @internal */
export const CreatePaymentMethodBody$outboundSchema: z.ZodType<
  CreatePaymentMethodBody$Outbound,
  z.ZodTypeDef,
  CreatePaymentMethodBody
> = z.union([
  components.CheckoutSessionPaymentMethodCreate$outboundSchema,
  components.RedirectPaymentMethodCreate$outboundSchema,
  components.CardPaymentMethodCreate$outboundSchema,
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreatePaymentMethodBody$ {
  /** @deprecated use `CreatePaymentMethodBody$inboundSchema` instead. */
  export const inboundSchema = CreatePaymentMethodBody$inboundSchema;
  /** @deprecated use `CreatePaymentMethodBody$outboundSchema` instead. */
  export const outboundSchema = CreatePaymentMethodBody$outboundSchema;
  /** @deprecated use `CreatePaymentMethodBody$Outbound` instead. */
  export type Outbound = CreatePaymentMethodBody$Outbound;
}

export function createPaymentMethodBodyToJSON(
  createPaymentMethodBody: CreatePaymentMethodBody,
): string {
  return JSON.stringify(
    CreatePaymentMethodBody$outboundSchema.parse(createPaymentMethodBody),
  );
}

export function createPaymentMethodBodyFromJSON(
  jsonString: string,
): SafeParseResult<CreatePaymentMethodBody, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => CreatePaymentMethodBody$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CreatePaymentMethodBody' from JSON`,
  );
}

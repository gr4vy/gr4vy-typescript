/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives.js";
import * as components from "../components/index.js";
import * as z from "zod";

export type GetFlowActionRuleRequest = {
    /**
     * An enumeration.
     */
    flow: components.Flow;
    /**
     * An enumeration.
     */
    action: components.FlowAction;
    ruleId: string;
};

/** @internal */
export const GetFlowActionRuleRequest$inboundSchema: z.ZodType<
    GetFlowActionRuleRequest,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        flow: components.Flow$inboundSchema,
        action: components.FlowAction$inboundSchema,
        rule_id: z.string(),
    })
    .transform((v) => {
        return remap$(v, {
            rule_id: "ruleId",
        });
    });

/** @internal */
export type GetFlowActionRuleRequest$Outbound = {
    flow: string;
    action: string;
    rule_id: string;
};

/** @internal */
export const GetFlowActionRuleRequest$outboundSchema: z.ZodType<
    GetFlowActionRuleRequest$Outbound,
    z.ZodTypeDef,
    GetFlowActionRuleRequest
> = z
    .object({
        flow: components.Flow$outboundSchema,
        action: components.FlowAction$outboundSchema,
        ruleId: z.string(),
    })
    .transform((v) => {
        return remap$(v, {
            ruleId: "rule_id",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetFlowActionRuleRequest$ {
    /** @deprecated use `GetFlowActionRuleRequest$inboundSchema` instead. */
    export const inboundSchema = GetFlowActionRuleRequest$inboundSchema;
    /** @deprecated use `GetFlowActionRuleRequest$outboundSchema` instead. */
    export const outboundSchema = GetFlowActionRuleRequest$outboundSchema;
    /** @deprecated use `GetFlowActionRuleRequest$Outbound` instead. */
    export type Outbound = GetFlowActionRuleRequest$Outbound;
}

/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives";
import * as z from "zod";

export type DeleteMerchantAccuontRequest = {
    /**
     * The unique ID for a merchant account.
     */
    merchantAccountId: string;
};

/** @internal */
export namespace DeleteMerchantAccuontRequest$ {
    export const inboundSchema: z.ZodType<DeleteMerchantAccuontRequest, z.ZodTypeDef, unknown> = z
        .object({
            merchant_account_id: z.string(),
        })
        .transform((v) => {
            return remap$(v, {
                merchant_account_id: "merchantAccountId",
            });
        });

    export type Outbound = {
        merchant_account_id: string;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, DeleteMerchantAccuontRequest> = z
        .object({
            merchantAccountId: z.string(),
        })
        .transform((v) => {
            return remap$(v, {
                merchantAccountId: "merchant_account_id",
            });
        });
}

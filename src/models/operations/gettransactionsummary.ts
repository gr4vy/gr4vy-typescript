/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives";
import * as z from "zod";

export type GetTransactionSummaryRequest = {
    /**
     * The ID for the transaction to get the information for.
     */
    transactionId: string;
};

/** @internal */
export namespace GetTransactionSummaryRequest$ {
    export const inboundSchema: z.ZodType<GetTransactionSummaryRequest, z.ZodTypeDef, unknown> = z
        .object({
            transaction_id: z.string(),
        })
        .transform((v) => {
            return remap$(v, {
                transaction_id: "transactionId",
            });
        });

    export type Outbound = {
        transaction_id: string;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, GetTransactionSummaryRequest> = z
        .object({
            transactionId: z.string(),
        })
        .transform((v) => {
            return remap$(v, {
                transactionId: "transaction_id",
            });
        });
}

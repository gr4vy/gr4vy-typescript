/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives";
import * as z from "zod";

export type DeleteGiftCardRequest = {
    /**
     * The unique ID of a stored gift card.
     */
    giftCardId: string;
};

/** @internal */
export namespace DeleteGiftCardRequest$ {
    export const inboundSchema: z.ZodType<DeleteGiftCardRequest, z.ZodTypeDef, unknown> = z
        .object({
            gift_card_id: z.string(),
        })
        .transform((v) => {
            return remap$(v, {
                gift_card_id: "giftCardId",
            });
        });

    export type Outbound = {
        gift_card_id: string;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, DeleteGiftCardRequest> = z
        .object({
            giftCardId: z.string(),
        })
        .transform((v) => {
            return remap$(v, {
                giftCardId: "gift_card_id",
            });
        });
}

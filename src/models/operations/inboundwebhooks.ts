/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as z from "zod";

/**
 * Resource type identifier to which the webhook data is related.
 */
export enum Resource {
    Af = "af",
    Ps = "ps",
}

export type InboundWebhooksRequest = {
    /**
     * Resource type identifier to which the webhook data is related.
     */
    resource: Resource;
    /**
     * Opaque data representing the service information associated with
     *
     * @remarks
     * the webhook endpoint.
     */
    payload: string;
    /**
     * Signature of the opaque data with the service information
     *
     * @remarks
     * used for the webhook endpoint.
     */
    signature: string;
};

export type InboundWebhooksResponse = {};

/** @internal */
export const Resource$: z.ZodNativeEnum<typeof Resource> = z.nativeEnum(Resource);

/** @internal */
export namespace InboundWebhooksRequest$ {
    export type Inbound = {
        resource: Resource;
        payload: string;
        signature: string;
    };

    export const inboundSchema: z.ZodType<InboundWebhooksRequest, z.ZodTypeDef, Inbound> = z
        .object({
            resource: Resource$,
            payload: z.string(),
            signature: z.string(),
        })
        .transform((v) => {
            return {
                resource: v.resource,
                payload: v.payload,
                signature: v.signature,
            };
        });

    export type Outbound = {
        resource: Resource;
        payload: string;
        signature: string;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, InboundWebhooksRequest> = z
        .object({
            resource: Resource$,
            payload: z.string(),
            signature: z.string(),
        })
        .transform((v) => {
            return {
                resource: v.resource,
                payload: v.payload,
                signature: v.signature,
            };
        });
}

/** @internal */
export namespace InboundWebhooksResponse$ {
    export type Inbound = {};

    export const inboundSchema: z.ZodType<InboundWebhooksResponse, z.ZodTypeDef, Inbound> =
        z.object({});

    export type Outbound = {};

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, InboundWebhooksResponse> =
        z.object({});
}

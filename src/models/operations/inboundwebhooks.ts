/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as z from "zod";

/**
 * Resource type identifier to which the webhook data is related.
 */
export enum Resource {
    Af = "af",
    Ps = "ps",
}

export type InboundWebhooksRequest = {
    /**
     * Resource type identifier to which the webhook data is related.
     */
    resource: Resource;
    /**
     * Opaque data representing the service information associated with
     *
     * @remarks
     * the webhook endpoint.
     */
    payload: string;
    /**
     * Signature of the opaque data with the service information
     *
     * @remarks
     * used for the webhook endpoint.
     */
    signature: string;
};

/** @internal */
export namespace Resource$ {
    export const inboundSchema = z.nativeEnum(Resource);
    export const outboundSchema = inboundSchema;
}

/** @internal */
export namespace InboundWebhooksRequest$ {
    export const inboundSchema: z.ZodType<InboundWebhooksRequest, z.ZodTypeDef, unknown> = z.object(
        {
            resource: Resource$.inboundSchema,
            payload: z.string(),
            signature: z.string(),
        }
    );

    export type Outbound = {
        resource: string;
        payload: string;
        signature: string;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, InboundWebhooksRequest> =
        z.object({
            resource: Resource$.outboundSchema,
            payload: z.string(),
            signature: z.string(),
        });
}

/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives.js";
import * as components from "../components/index.js";
import * as z from "zod";

export type RefundAllRequest = {
    /**
     * The ID for the transaction to get the information for.
     */
    transactionId: string;
    transactionRefundAllRequest?: components.TransactionRefundAllRequest | undefined;
};

/** @internal */
export const RefundAllRequest$inboundSchema: z.ZodType<RefundAllRequest, z.ZodTypeDef, unknown> = z
    .object({
        transaction_id: z.string(),
        TransactionRefundAllRequest:
            components.TransactionRefundAllRequest$inboundSchema.optional(),
    })
    .transform((v) => {
        return remap$(v, {
            transaction_id: "transactionId",
            TransactionRefundAllRequest: "transactionRefundAllRequest",
        });
    });

/** @internal */
export type RefundAllRequest$Outbound = {
    transaction_id: string;
    TransactionRefundAllRequest?: components.TransactionRefundAllRequest$Outbound | undefined;
};

/** @internal */
export const RefundAllRequest$outboundSchema: z.ZodType<
    RefundAllRequest$Outbound,
    z.ZodTypeDef,
    RefundAllRequest
> = z
    .object({
        transactionId: z.string(),
        transactionRefundAllRequest:
            components.TransactionRefundAllRequest$outboundSchema.optional(),
    })
    .transform((v) => {
        return remap$(v, {
            transactionId: "transaction_id",
            transactionRefundAllRequest: "TransactionRefundAllRequest",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RefundAllRequest$ {
    /** @deprecated use `RefundAllRequest$inboundSchema` instead. */
    export const inboundSchema = RefundAllRequest$inboundSchema;
    /** @deprecated use `RefundAllRequest$outboundSchema` instead. */
    export const outboundSchema = RefundAllRequest$outboundSchema;
    /** @deprecated use `RefundAllRequest$Outbound` instead. */
    export type Outbound = RefundAllRequest$Outbound;
}

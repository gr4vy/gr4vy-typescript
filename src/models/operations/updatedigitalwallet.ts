/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as components from "../components";
import * as z from "zod";

export type UpdateDigitalWalletRequest = {
    /**
     * The ID of the registered digital wallet.
     */
    digitalWalletId: string;
    digitalWalletUpdate?: components.DigitalWalletUpdate | undefined;
};

/** @internal */
export namespace UpdateDigitalWalletRequest$ {
    export type Inbound = {
        digital_wallet_id: string;
        DigitalWalletUpdate?: components.DigitalWalletUpdate$.Inbound | undefined;
    };

    export const inboundSchema: z.ZodType<UpdateDigitalWalletRequest, z.ZodTypeDef, Inbound> = z
        .object({
            digital_wallet_id: z.string(),
            DigitalWalletUpdate: components.DigitalWalletUpdate$.inboundSchema.optional(),
        })
        .transform((v) => {
            return {
                digitalWalletId: v.digital_wallet_id,
                ...(v.DigitalWalletUpdate === undefined
                    ? null
                    : { digitalWalletUpdate: v.DigitalWalletUpdate }),
            };
        });

    export type Outbound = {
        digital_wallet_id: string;
        DigitalWalletUpdate?: components.DigitalWalletUpdate$.Outbound | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, UpdateDigitalWalletRequest> = z
        .object({
            digitalWalletId: z.string(),
            digitalWalletUpdate: components.DigitalWalletUpdate$.outboundSchema.optional(),
        })
        .transform((v) => {
            return {
                digital_wallet_id: v.digitalWalletId,
                ...(v.digitalWalletUpdate === undefined
                    ? null
                    : { DigitalWalletUpdate: v.digitalWalletUpdate }),
            };
        });
}

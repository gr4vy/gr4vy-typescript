/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as z from "zod";

export type ListPaymentOptionsRequest = {
    /**
     * Filters the results to only the items which support this country code. A
     *
     * @remarks
     * country is formatted as 2-letter ISO country code.
     */
    country?: string | undefined;
    /**
     * Filters the results to only the items which support this currency code. A
     *
     * @remarks
     * currency is formatted as 3-letter ISO currency code.
     */
    currency?: string | undefined;
    /**
     * Used by the Flow engine to filter the results based on the transaction amount.
     */
    amount?: number | undefined;
    /**
     * Used by the Flow engine to filter available options based on various
     *
     * @remarks
     * client-defined parameters. If present, this must be a string representing
     * a valid JSON dictionary.
     */
    metadata?: string | undefined;
    /**
     * An ISO 639-1 Language Code and optional ISO 3166 Country Code. This locale
     *
     * @remarks
     * determines the language for the labels returned for every payment option.
     */
    locale?: string | undefined;
};

/** @internal */
export const ListPaymentOptionsRequest$inboundSchema: z.ZodType<
    ListPaymentOptionsRequest,
    z.ZodTypeDef,
    unknown
> = z.object({
    country: z.string().optional(),
    currency: z.string().optional(),
    amount: z.number().int().optional(),
    metadata: z.string().optional(),
    locale: z.string().default("en"),
});

/** @internal */
export type ListPaymentOptionsRequest$Outbound = {
    country?: string | undefined;
    currency?: string | undefined;
    amount?: number | undefined;
    metadata?: string | undefined;
    locale: string;
};

/** @internal */
export const ListPaymentOptionsRequest$outboundSchema: z.ZodType<
    ListPaymentOptionsRequest$Outbound,
    z.ZodTypeDef,
    ListPaymentOptionsRequest
> = z.object({
    country: z.string().optional(),
    currency: z.string().optional(),
    amount: z.number().int().optional(),
    metadata: z.string().optional(),
    locale: z.string().default("en"),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ListPaymentOptionsRequest$ {
    /** @deprecated use `ListPaymentOptionsRequest$inboundSchema` instead. */
    export const inboundSchema = ListPaymentOptionsRequest$inboundSchema;
    /** @deprecated use `ListPaymentOptionsRequest$outboundSchema` instead. */
    export const outboundSchema = ListPaymentOptionsRequest$outboundSchema;
    /** @deprecated use `ListPaymentOptionsRequest$Outbound` instead. */
    export type Outbound = ListPaymentOptionsRequest$Outbound;
}

/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type GetTreansactionRefundRequest = {
  transactionId: string;
  refundId: string;
};

/** @internal */
export const GetTreansactionRefundRequest$inboundSchema: z.ZodType<
  GetTreansactionRefundRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  transaction_id: z.string(),
  refund_id: z.string(),
}).transform((v) => {
  return remap$(v, {
    "transaction_id": "transactionId",
    "refund_id": "refundId",
  });
});

/** @internal */
export type GetTreansactionRefundRequest$Outbound = {
  transaction_id: string;
  refund_id: string;
};

/** @internal */
export const GetTreansactionRefundRequest$outboundSchema: z.ZodType<
  GetTreansactionRefundRequest$Outbound,
  z.ZodTypeDef,
  GetTreansactionRefundRequest
> = z.object({
  transactionId: z.string(),
  refundId: z.string(),
}).transform((v) => {
  return remap$(v, {
    transactionId: "transaction_id",
    refundId: "refund_id",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetTreansactionRefundRequest$ {
  /** @deprecated use `GetTreansactionRefundRequest$inboundSchema` instead. */
  export const inboundSchema = GetTreansactionRefundRequest$inboundSchema;
  /** @deprecated use `GetTreansactionRefundRequest$outboundSchema` instead. */
  export const outboundSchema = GetTreansactionRefundRequest$outboundSchema;
  /** @deprecated use `GetTreansactionRefundRequest$Outbound` instead. */
  export type Outbound = GetTreansactionRefundRequest$Outbound;
}

export function getTreansactionRefundRequestToJSON(
  getTreansactionRefundRequest: GetTreansactionRefundRequest,
): string {
  return JSON.stringify(
    GetTreansactionRefundRequest$outboundSchema.parse(
      getTreansactionRefundRequest,
    ),
  );
}

export function getTreansactionRefundRequestFromJSON(
  jsonString: string,
): SafeParseResult<GetTreansactionRefundRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetTreansactionRefundRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetTreansactionRefundRequest' from JSON`,
  );
}

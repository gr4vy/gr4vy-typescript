/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as components from "../components";
import * as z from "zod";

export type GetGiftCardRequest = {
    /**
     * The unique ID of a stored gift card.
     */
    giftCardId: string;
};

export type GetGiftCardResponse = {
    httpMeta: components.HTTPMetadata;
    /**
     * Returns a stored gift card.
     */
    giftCard?: components.GiftCard | undefined;
    /**
     * Returns a generic error.
     */
    errorGeneric?: components.ErrorGeneric | undefined;
};

/** @internal */
export namespace GetGiftCardRequest$ {
    export type Inbound = {
        gift_card_id: string;
    };

    export const inboundSchema: z.ZodType<GetGiftCardRequest, z.ZodTypeDef, Inbound> = z
        .object({
            gift_card_id: z.string(),
        })
        .transform((v) => {
            return {
                giftCardId: v.gift_card_id,
            };
        });

    export type Outbound = {
        gift_card_id: string;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, GetGiftCardRequest> = z
        .object({
            giftCardId: z.string(),
        })
        .transform((v) => {
            return {
                gift_card_id: v.giftCardId,
            };
        });
}

/** @internal */
export namespace GetGiftCardResponse$ {
    export type Inbound = {
        HttpMeta: components.HTTPMetadata$.Inbound;
        GiftCard?: components.GiftCard$.Inbound | undefined;
        ErrorGeneric?: components.ErrorGeneric$.Inbound | undefined;
    };

    export const inboundSchema: z.ZodType<GetGiftCardResponse, z.ZodTypeDef, Inbound> = z
        .object({
            HttpMeta: components.HTTPMetadata$.inboundSchema,
            GiftCard: components.GiftCard$.inboundSchema.optional(),
            ErrorGeneric: components.ErrorGeneric$.inboundSchema.optional(),
        })
        .transform((v) => {
            return {
                httpMeta: v.HttpMeta,
                ...(v.GiftCard === undefined ? null : { giftCard: v.GiftCard }),
                ...(v.ErrorGeneric === undefined ? null : { errorGeneric: v.ErrorGeneric }),
            };
        });

    export type Outbound = {
        HttpMeta: components.HTTPMetadata$.Outbound;
        GiftCard?: components.GiftCard$.Outbound | undefined;
        ErrorGeneric?: components.ErrorGeneric$.Outbound | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, GetGiftCardResponse> = z
        .object({
            httpMeta: components.HTTPMetadata$.outboundSchema,
            giftCard: components.GiftCard$.outboundSchema.optional(),
            errorGeneric: components.ErrorGeneric$.outboundSchema.optional(),
        })
        .transform((v) => {
            return {
                HttpMeta: v.httpMeta,
                ...(v.giftCard === undefined ? null : { GiftCard: v.giftCard }),
                ...(v.errorGeneric === undefined ? null : { ErrorGeneric: v.errorGeneric }),
            };
        });
}

/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as components from "../components";
import * as z from "zod";

export type GetGiftCardRequest = {
    /**
     * The unique ID of a stored gift card.
     */
    giftCardId: string;
};

export type GetGiftCardResponse = components.ErrorGeneric | components.GiftCard;

/** @internal */
export namespace GetGiftCardRequest$ {
    export type Inbound = {
        gift_card_id: string;
    };

    export const inboundSchema: z.ZodType<GetGiftCardRequest, z.ZodTypeDef, Inbound> = z
        .object({
            gift_card_id: z.string(),
        })
        .transform((v) => {
            return {
                giftCardId: v.gift_card_id,
            };
        });

    export type Outbound = {
        gift_card_id: string;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, GetGiftCardRequest> = z
        .object({
            giftCardId: z.string(),
        })
        .transform((v) => {
            return {
                gift_card_id: v.giftCardId,
            };
        });
}

/** @internal */
export namespace GetGiftCardResponse$ {
    export type Inbound = components.ErrorGeneric$.Inbound | components.GiftCard$.Inbound;

    export type Outbound = components.ErrorGeneric$.Outbound | components.GiftCard$.Outbound;
    export const inboundSchema: z.ZodType<GetGiftCardResponse, z.ZodTypeDef, Inbound> = z.union([
        components.ErrorGeneric$.inboundSchema,
        components.GiftCard$.inboundSchema,
    ]);
    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, GetGiftCardResponse> = z.union([
        components.ErrorGeneric$.outboundSchema,
        components.GiftCard$.outboundSchema,
    ]);
}

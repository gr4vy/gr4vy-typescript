/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type GetGiftCardRequest = {
  /**
   * The ID of the gift card.
   */
  giftCardId: string;
};

/** @internal */
export const GetGiftCardRequest$inboundSchema: z.ZodType<
  GetGiftCardRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  gift_card_id: z.string(),
}).transform((v) => {
  return remap$(v, {
    "gift_card_id": "giftCardId",
  });
});

/** @internal */
export type GetGiftCardRequest$Outbound = {
  gift_card_id: string;
};

/** @internal */
export const GetGiftCardRequest$outboundSchema: z.ZodType<
  GetGiftCardRequest$Outbound,
  z.ZodTypeDef,
  GetGiftCardRequest
> = z.object({
  giftCardId: z.string(),
}).transform((v) => {
  return remap$(v, {
    giftCardId: "gift_card_id",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetGiftCardRequest$ {
  /** @deprecated use `GetGiftCardRequest$inboundSchema` instead. */
  export const inboundSchema = GetGiftCardRequest$inboundSchema;
  /** @deprecated use `GetGiftCardRequest$outboundSchema` instead. */
  export const outboundSchema = GetGiftCardRequest$outboundSchema;
  /** @deprecated use `GetGiftCardRequest$Outbound` instead. */
  export type Outbound = GetGiftCardRequest$Outbound;
}

export function getGiftCardRequestToJSON(
  getGiftCardRequest: GetGiftCardRequest,
): string {
  return JSON.stringify(
    GetGiftCardRequest$outboundSchema.parse(getGiftCardRequest),
  );
}

export function getGiftCardRequestFromJSON(
  jsonString: string,
): SafeParseResult<GetGiftCardRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetGiftCardRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetGiftCardRequest' from JSON`,
  );
}

/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type CreateCheckoutSessionGlobals = {
  merchantAccountId?: string | undefined;
};

export type CreateCheckoutSessionRequest = {
  timeoutInSeconds?: number | undefined;
  /**
   * The ID of the merchant account to use for this request.
   */
  merchantAccountId?: string | null | undefined;
  checkoutSessionCreate?: components.CheckoutSessionCreate | undefined;
};

/** @internal */
export const CreateCheckoutSessionGlobals$inboundSchema: z.ZodType<
  CreateCheckoutSessionGlobals,
  z.ZodTypeDef,
  unknown
> = z.object({
  merchantAccountId: z.string().optional(),
});

/** @internal */
export type CreateCheckoutSessionGlobals$Outbound = {
  merchantAccountId?: string | undefined;
};

/** @internal */
export const CreateCheckoutSessionGlobals$outboundSchema: z.ZodType<
  CreateCheckoutSessionGlobals$Outbound,
  z.ZodTypeDef,
  CreateCheckoutSessionGlobals
> = z.object({
  merchantAccountId: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateCheckoutSessionGlobals$ {
  /** @deprecated use `CreateCheckoutSessionGlobals$inboundSchema` instead. */
  export const inboundSchema = CreateCheckoutSessionGlobals$inboundSchema;
  /** @deprecated use `CreateCheckoutSessionGlobals$outboundSchema` instead. */
  export const outboundSchema = CreateCheckoutSessionGlobals$outboundSchema;
  /** @deprecated use `CreateCheckoutSessionGlobals$Outbound` instead. */
  export type Outbound = CreateCheckoutSessionGlobals$Outbound;
}

export function createCheckoutSessionGlobalsToJSON(
  createCheckoutSessionGlobals: CreateCheckoutSessionGlobals,
): string {
  return JSON.stringify(
    CreateCheckoutSessionGlobals$outboundSchema.parse(
      createCheckoutSessionGlobals,
    ),
  );
}

export function createCheckoutSessionGlobalsFromJSON(
  jsonString: string,
): SafeParseResult<CreateCheckoutSessionGlobals, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => CreateCheckoutSessionGlobals$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CreateCheckoutSessionGlobals' from JSON`,
  );
}

/** @internal */
export const CreateCheckoutSessionRequest$inboundSchema: z.ZodType<
  CreateCheckoutSessionRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  timeout_in_seconds: z.number().default(1),
  merchantAccountId: z.nullable(z.string()).optional(),
  CheckoutSessionCreate: components.CheckoutSessionCreate$inboundSchema
    .optional(),
}).transform((v) => {
  return remap$(v, {
    "timeout_in_seconds": "timeoutInSeconds",
    "CheckoutSessionCreate": "checkoutSessionCreate",
  });
});

/** @internal */
export type CreateCheckoutSessionRequest$Outbound = {
  timeout_in_seconds: number;
  merchantAccountId?: string | null | undefined;
  CheckoutSessionCreate?: components.CheckoutSessionCreate$Outbound | undefined;
};

/** @internal */
export const CreateCheckoutSessionRequest$outboundSchema: z.ZodType<
  CreateCheckoutSessionRequest$Outbound,
  z.ZodTypeDef,
  CreateCheckoutSessionRequest
> = z.object({
  timeoutInSeconds: z.number().default(1),
  merchantAccountId: z.nullable(z.string()).optional(),
  checkoutSessionCreate: components.CheckoutSessionCreate$outboundSchema
    .optional(),
}).transform((v) => {
  return remap$(v, {
    timeoutInSeconds: "timeout_in_seconds",
    checkoutSessionCreate: "CheckoutSessionCreate",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateCheckoutSessionRequest$ {
  /** @deprecated use `CreateCheckoutSessionRequest$inboundSchema` instead. */
  export const inboundSchema = CreateCheckoutSessionRequest$inboundSchema;
  /** @deprecated use `CreateCheckoutSessionRequest$outboundSchema` instead. */
  export const outboundSchema = CreateCheckoutSessionRequest$outboundSchema;
  /** @deprecated use `CreateCheckoutSessionRequest$Outbound` instead. */
  export type Outbound = CreateCheckoutSessionRequest$Outbound;
}

export function createCheckoutSessionRequestToJSON(
  createCheckoutSessionRequest: CreateCheckoutSessionRequest,
): string {
  return JSON.stringify(
    CreateCheckoutSessionRequest$outboundSchema.parse(
      createCheckoutSessionRequest,
    ),
  );
}

export function createCheckoutSessionRequestFromJSON(
  jsonString: string,
): SafeParseResult<CreateCheckoutSessionRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => CreateCheckoutSessionRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CreateCheckoutSessionRequest' from JSON`,
  );
}

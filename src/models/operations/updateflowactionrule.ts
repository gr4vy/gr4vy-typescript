/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives.js";
import * as components from "../components/index.js";
import * as z from "zod";

export type UpdateFlowActionRuleBody = {};

export type UpdateFlowActionRuleRequest = {
    /**
     * An enumeration.
     */
    flow: components.Flow;
    /**
     * An enumeration.
     */
    action: components.FlowAction;
    ruleId: string;
    requestBody: UpdateFlowActionRuleBody;
};

/** @internal */
export const UpdateFlowActionRuleBody$inboundSchema: z.ZodType<
    UpdateFlowActionRuleBody,
    z.ZodTypeDef,
    unknown
> = z.object({});

/** @internal */
export type UpdateFlowActionRuleBody$Outbound = {};

/** @internal */
export const UpdateFlowActionRuleBody$outboundSchema: z.ZodType<
    UpdateFlowActionRuleBody$Outbound,
    z.ZodTypeDef,
    UpdateFlowActionRuleBody
> = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateFlowActionRuleBody$ {
    /** @deprecated use `UpdateFlowActionRuleBody$inboundSchema` instead. */
    export const inboundSchema = UpdateFlowActionRuleBody$inboundSchema;
    /** @deprecated use `UpdateFlowActionRuleBody$outboundSchema` instead. */
    export const outboundSchema = UpdateFlowActionRuleBody$outboundSchema;
    /** @deprecated use `UpdateFlowActionRuleBody$Outbound` instead. */
    export type Outbound = UpdateFlowActionRuleBody$Outbound;
}

/** @internal */
export const UpdateFlowActionRuleRequest$inboundSchema: z.ZodType<
    UpdateFlowActionRuleRequest,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        flow: components.Flow$inboundSchema,
        action: components.FlowAction$inboundSchema,
        rule_id: z.string(),
        RequestBody: z.lazy(() => UpdateFlowActionRuleBody$inboundSchema),
    })
    .transform((v) => {
        return remap$(v, {
            rule_id: "ruleId",
            RequestBody: "requestBody",
        });
    });

/** @internal */
export type UpdateFlowActionRuleRequest$Outbound = {
    flow: string;
    action: string;
    rule_id: string;
    RequestBody: UpdateFlowActionRuleBody$Outbound;
};

/** @internal */
export const UpdateFlowActionRuleRequest$outboundSchema: z.ZodType<
    UpdateFlowActionRuleRequest$Outbound,
    z.ZodTypeDef,
    UpdateFlowActionRuleRequest
> = z
    .object({
        flow: components.Flow$outboundSchema,
        action: components.FlowAction$outboundSchema,
        ruleId: z.string(),
        requestBody: z.lazy(() => UpdateFlowActionRuleBody$outboundSchema),
    })
    .transform((v) => {
        return remap$(v, {
            ruleId: "rule_id",
            requestBody: "RequestBody",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateFlowActionRuleRequest$ {
    /** @deprecated use `UpdateFlowActionRuleRequest$inboundSchema` instead. */
    export const inboundSchema = UpdateFlowActionRuleRequest$inboundSchema;
    /** @deprecated use `UpdateFlowActionRuleRequest$outboundSchema` instead. */
    export const outboundSchema = UpdateFlowActionRuleRequest$outboundSchema;
    /** @deprecated use `UpdateFlowActionRuleRequest$Outbound` instead. */
    export type Outbound = UpdateFlowActionRuleRequest$Outbound;
}

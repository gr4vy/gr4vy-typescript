/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as components from "../components";
import * as z from "zod";

export type DeleteCheckoutSessionRequest = {
    /**
     * The unique ID for a Checkout Session.
     */
    checkoutSessionId: string;
};

export type DeleteCheckoutSessionResponse = {
    httpMeta: components.HTTPMetadata;
    /**
     * Returns a generic error.
     */
    errorGeneric?: components.ErrorGeneric | undefined;
};

/** @internal */
export namespace DeleteCheckoutSessionRequest$ {
    export type Inbound = {
        checkout_session_id: string;
    };

    export const inboundSchema: z.ZodType<DeleteCheckoutSessionRequest, z.ZodTypeDef, Inbound> = z
        .object({
            checkout_session_id: z.string(),
        })
        .transform((v) => {
            return {
                checkoutSessionId: v.checkout_session_id,
            };
        });

    export type Outbound = {
        checkout_session_id: string;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, DeleteCheckoutSessionRequest> = z
        .object({
            checkoutSessionId: z.string(),
        })
        .transform((v) => {
            return {
                checkout_session_id: v.checkoutSessionId,
            };
        });
}

/** @internal */
export namespace DeleteCheckoutSessionResponse$ {
    export type Inbound = {
        HttpMeta: components.HTTPMetadata$.Inbound;
        ErrorGeneric?: components.ErrorGeneric$.Inbound | undefined;
    };

    export const inboundSchema: z.ZodType<DeleteCheckoutSessionResponse, z.ZodTypeDef, Inbound> = z
        .object({
            HttpMeta: components.HTTPMetadata$.inboundSchema,
            ErrorGeneric: components.ErrorGeneric$.inboundSchema.optional(),
        })
        .transform((v) => {
            return {
                httpMeta: v.HttpMeta,
                ...(v.ErrorGeneric === undefined ? null : { errorGeneric: v.ErrorGeneric }),
            };
        });

    export type Outbound = {
        HttpMeta: components.HTTPMetadata$.Outbound;
        ErrorGeneric?: components.ErrorGeneric$.Outbound | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, DeleteCheckoutSessionResponse> =
        z
            .object({
                httpMeta: components.HTTPMetadata$.outboundSchema,
                errorGeneric: components.ErrorGeneric$.outboundSchema.optional(),
            })
            .transform((v) => {
                return {
                    HttpMeta: v.httpMeta,
                    ...(v.errorGeneric === undefined ? null : { ErrorGeneric: v.errorGeneric }),
                };
            });
}

/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives.js";
import * as z from "zod";

export type DeleteCheckoutSessionRequest = {
    sessionId: string;
};

/** @internal */
export const DeleteCheckoutSessionRequest$inboundSchema: z.ZodType<
    DeleteCheckoutSessionRequest,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        session_id: z.string(),
    })
    .transform((v) => {
        return remap$(v, {
            session_id: "sessionId",
        });
    });

/** @internal */
export type DeleteCheckoutSessionRequest$Outbound = {
    session_id: string;
};

/** @internal */
export const DeleteCheckoutSessionRequest$outboundSchema: z.ZodType<
    DeleteCheckoutSessionRequest$Outbound,
    z.ZodTypeDef,
    DeleteCheckoutSessionRequest
> = z
    .object({
        sessionId: z.string(),
    })
    .transform((v) => {
        return remap$(v, {
            sessionId: "session_id",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DeleteCheckoutSessionRequest$ {
    /** @deprecated use `DeleteCheckoutSessionRequest$inboundSchema` instead. */
    export const inboundSchema = DeleteCheckoutSessionRequest$inboundSchema;
    /** @deprecated use `DeleteCheckoutSessionRequest$outboundSchema` instead. */
    export const outboundSchema = DeleteCheckoutSessionRequest$outboundSchema;
    /** @deprecated use `DeleteCheckoutSessionRequest$Outbound` instead. */
    export type Outbound = DeleteCheckoutSessionRequest$Outbound;
}

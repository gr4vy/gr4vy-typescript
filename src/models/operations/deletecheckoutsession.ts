/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as z from "zod";

export type DeleteCheckoutSessionRequest = {
    /**
     * The unique ID for a Checkout Session.
     */
    checkoutSessionId: string;
};

export type DeleteCheckoutSessionResponse = {};

/** @internal */
export namespace DeleteCheckoutSessionRequest$ {
    export type Inbound = {
        checkout_session_id: string;
    };

    export const inboundSchema: z.ZodType<DeleteCheckoutSessionRequest, z.ZodTypeDef, Inbound> = z
        .object({
            checkout_session_id: z.string(),
        })
        .transform((v) => {
            return {
                checkoutSessionId: v.checkout_session_id,
            };
        });

    export type Outbound = {
        checkout_session_id: string;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, DeleteCheckoutSessionRequest> = z
        .object({
            checkoutSessionId: z.string(),
        })
        .transform((v) => {
            return {
                checkout_session_id: v.checkoutSessionId,
            };
        });
}

/** @internal */
export namespace DeleteCheckoutSessionResponse$ {
    export type Inbound = {};

    export const inboundSchema: z.ZodType<DeleteCheckoutSessionResponse, z.ZodTypeDef, Inbound> =
        z.object({});

    export type Outbound = {};

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, DeleteCheckoutSessionResponse> =
        z.object({});
}

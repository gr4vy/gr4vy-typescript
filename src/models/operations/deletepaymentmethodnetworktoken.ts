/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type DeletePaymentMethodNetworkTokenRequest = {
  /**
   * The ID of the payment method
   */
  paymentMethodId: string;
  /**
   * The ID of the network token
   */
  networkTokenId: string;
  timeoutInSeconds?: number | undefined;
};

/** @internal */
export const DeletePaymentMethodNetworkTokenRequest$inboundSchema: z.ZodType<
  DeletePaymentMethodNetworkTokenRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  payment_method_id: z.string(),
  network_token_id: z.string(),
  timeout_in_seconds: z.number().default(1),
}).transform((v) => {
  return remap$(v, {
    "payment_method_id": "paymentMethodId",
    "network_token_id": "networkTokenId",
    "timeout_in_seconds": "timeoutInSeconds",
  });
});

/** @internal */
export type DeletePaymentMethodNetworkTokenRequest$Outbound = {
  payment_method_id: string;
  network_token_id: string;
  timeout_in_seconds: number;
};

/** @internal */
export const DeletePaymentMethodNetworkTokenRequest$outboundSchema: z.ZodType<
  DeletePaymentMethodNetworkTokenRequest$Outbound,
  z.ZodTypeDef,
  DeletePaymentMethodNetworkTokenRequest
> = z.object({
  paymentMethodId: z.string(),
  networkTokenId: z.string(),
  timeoutInSeconds: z.number().default(1),
}).transform((v) => {
  return remap$(v, {
    paymentMethodId: "payment_method_id",
    networkTokenId: "network_token_id",
    timeoutInSeconds: "timeout_in_seconds",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DeletePaymentMethodNetworkTokenRequest$ {
  /** @deprecated use `DeletePaymentMethodNetworkTokenRequest$inboundSchema` instead. */
  export const inboundSchema =
    DeletePaymentMethodNetworkTokenRequest$inboundSchema;
  /** @deprecated use `DeletePaymentMethodNetworkTokenRequest$outboundSchema` instead. */
  export const outboundSchema =
    DeletePaymentMethodNetworkTokenRequest$outboundSchema;
  /** @deprecated use `DeletePaymentMethodNetworkTokenRequest$Outbound` instead. */
  export type Outbound = DeletePaymentMethodNetworkTokenRequest$Outbound;
}

export function deletePaymentMethodNetworkTokenRequestToJSON(
  deletePaymentMethodNetworkTokenRequest:
    DeletePaymentMethodNetworkTokenRequest,
): string {
  return JSON.stringify(
    DeletePaymentMethodNetworkTokenRequest$outboundSchema.parse(
      deletePaymentMethodNetworkTokenRequest,
    ),
  );
}

export function deletePaymentMethodNetworkTokenRequestFromJSON(
  jsonString: string,
): SafeParseResult<DeletePaymentMethodNetworkTokenRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      DeletePaymentMethodNetworkTokenRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'DeletePaymentMethodNetworkTokenRequest' from JSON`,
  );
}

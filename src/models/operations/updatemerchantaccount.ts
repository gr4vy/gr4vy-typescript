/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as components from "../components";
import * as z from "zod";

export type UpdateMerchantAccountRequest = {
    /**
     * The unique ID for a merchant account.
     */
    merchantAccountId: string;
    merchantAccountUpdate?: components.MerchantAccountUpdate | undefined;
};

/** @internal */
export namespace UpdateMerchantAccountRequest$ {
    export type Inbound = {
        merchant_account_id: string;
        MerchantAccountUpdate?: components.MerchantAccountUpdate$.Inbound | undefined;
    };

    export const inboundSchema: z.ZodType<UpdateMerchantAccountRequest, z.ZodTypeDef, Inbound> = z
        .object({
            merchant_account_id: z.string(),
            MerchantAccountUpdate: components.MerchantAccountUpdate$.inboundSchema.optional(),
        })
        .transform((v) => {
            return {
                merchantAccountId: v.merchant_account_id,
                ...(v.MerchantAccountUpdate === undefined
                    ? null
                    : { merchantAccountUpdate: v.MerchantAccountUpdate }),
            };
        });

    export type Outbound = {
        merchant_account_id: string;
        MerchantAccountUpdate?: components.MerchantAccountUpdate$.Outbound | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, UpdateMerchantAccountRequest> = z
        .object({
            merchantAccountId: z.string(),
            merchantAccountUpdate: components.MerchantAccountUpdate$.outboundSchema.optional(),
        })
        .transform((v) => {
            return {
                merchant_account_id: v.merchantAccountId,
                ...(v.merchantAccountUpdate === undefined
                    ? null
                    : { MerchantAccountUpdate: v.merchantAccountUpdate }),
            };
        });
}

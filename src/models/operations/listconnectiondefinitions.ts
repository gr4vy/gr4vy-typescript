/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as components from "../components";
import * as z from "zod";

export type ListConnectionDefinitionsResponse = {
    httpMeta: components.HTTPMetadata;
    /**
     * Returns a list of connection definitions.
     */
    connectionDefinitions?: components.ConnectionDefinitions | undefined;
};

/** @internal */
export namespace ListConnectionDefinitionsResponse$ {
    export type Inbound = {
        HttpMeta: components.HTTPMetadata$.Inbound;
        ConnectionDefinitions?: components.ConnectionDefinitions$.Inbound | undefined;
    };

    export const inboundSchema: z.ZodType<
        ListConnectionDefinitionsResponse,
        z.ZodTypeDef,
        Inbound
    > = z
        .object({
            HttpMeta: components.HTTPMetadata$.inboundSchema,
            ConnectionDefinitions: components.ConnectionDefinitions$.inboundSchema.optional(),
        })
        .transform((v) => {
            return {
                httpMeta: v.HttpMeta,
                ...(v.ConnectionDefinitions === undefined
                    ? null
                    : { connectionDefinitions: v.ConnectionDefinitions }),
            };
        });

    export type Outbound = {
        HttpMeta: components.HTTPMetadata$.Outbound;
        ConnectionDefinitions?: components.ConnectionDefinitions$.Outbound | undefined;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        ListConnectionDefinitionsResponse
    > = z
        .object({
            httpMeta: components.HTTPMetadata$.outboundSchema,
            connectionDefinitions: components.ConnectionDefinitions$.outboundSchema.optional(),
        })
        .transform((v) => {
            return {
                HttpMeta: v.httpMeta,
                ...(v.connectionDefinitions === undefined
                    ? null
                    : { ConnectionDefinitions: v.connectionDefinitions }),
            };
        });
}

/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type GetPaymentMethodRequest = {
  /**
   * The ID of the payment method
   */
  paymentMethodId: string;
};

/** @internal */
export const GetPaymentMethodRequest$inboundSchema: z.ZodType<
  GetPaymentMethodRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  payment_method_id: z.string(),
}).transform((v) => {
  return remap$(v, {
    "payment_method_id": "paymentMethodId",
  });
});

/** @internal */
export type GetPaymentMethodRequest$Outbound = {
  payment_method_id: string;
};

/** @internal */
export const GetPaymentMethodRequest$outboundSchema: z.ZodType<
  GetPaymentMethodRequest$Outbound,
  z.ZodTypeDef,
  GetPaymentMethodRequest
> = z.object({
  paymentMethodId: z.string(),
}).transform((v) => {
  return remap$(v, {
    paymentMethodId: "payment_method_id",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetPaymentMethodRequest$ {
  /** @deprecated use `GetPaymentMethodRequest$inboundSchema` instead. */
  export const inboundSchema = GetPaymentMethodRequest$inboundSchema;
  /** @deprecated use `GetPaymentMethodRequest$outboundSchema` instead. */
  export const outboundSchema = GetPaymentMethodRequest$outboundSchema;
  /** @deprecated use `GetPaymentMethodRequest$Outbound` instead. */
  export type Outbound = GetPaymentMethodRequest$Outbound;
}

export function getPaymentMethodRequestToJSON(
  getPaymentMethodRequest: GetPaymentMethodRequest,
): string {
  return JSON.stringify(
    GetPaymentMethodRequest$outboundSchema.parse(getPaymentMethodRequest),
  );
}

export function getPaymentMethodRequestFromJSON(
  jsonString: string,
): SafeParseResult<GetPaymentMethodRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetPaymentMethodRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetPaymentMethodRequest' from JSON`,
  );
}

/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as components from "../components";
import * as z from "zod";

export type GetGiftCardServiceRequest = {
    /**
     * The unique ID of the gift card service.
     */
    giftCardServiceId: string;
};

export type GetGiftCardServiceResponse = {
    httpMeta: components.HTTPMetadata;
    /**
     * Returns a gift card service.
     */
    giftCardService?: components.GiftCardService | undefined;
};

/** @internal */
export namespace GetGiftCardServiceRequest$ {
    export type Inbound = {
        gift_card_service_id: string;
    };

    export const inboundSchema: z.ZodType<GetGiftCardServiceRequest, z.ZodTypeDef, Inbound> = z
        .object({
            gift_card_service_id: z.string(),
        })
        .transform((v) => {
            return {
                giftCardServiceId: v.gift_card_service_id,
            };
        });

    export type Outbound = {
        gift_card_service_id: string;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, GetGiftCardServiceRequest> = z
        .object({
            giftCardServiceId: z.string(),
        })
        .transform((v) => {
            return {
                gift_card_service_id: v.giftCardServiceId,
            };
        });
}

/** @internal */
export namespace GetGiftCardServiceResponse$ {
    export type Inbound = {
        HttpMeta: components.HTTPMetadata$.Inbound;
        GiftCardService?: components.GiftCardService$.Inbound | undefined;
    };

    export const inboundSchema: z.ZodType<GetGiftCardServiceResponse, z.ZodTypeDef, Inbound> = z
        .object({
            HttpMeta: components.HTTPMetadata$.inboundSchema,
            GiftCardService: components.GiftCardService$.inboundSchema.optional(),
        })
        .transform((v) => {
            return {
                httpMeta: v.HttpMeta,
                ...(v.GiftCardService === undefined
                    ? null
                    : { giftCardService: v.GiftCardService }),
            };
        });

    export type Outbound = {
        HttpMeta: components.HTTPMetadata$.Outbound;
        GiftCardService?: components.GiftCardService$.Outbound | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, GetGiftCardServiceResponse> = z
        .object({
            httpMeta: components.HTTPMetadata$.outboundSchema,
            giftCardService: components.GiftCardService$.outboundSchema.optional(),
        })
        .transform((v) => {
            return {
                HttpMeta: v.httpMeta,
                ...(v.giftCardService === undefined
                    ? null
                    : { GiftCardService: v.giftCardService }),
            };
        });
}

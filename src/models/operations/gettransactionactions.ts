/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as components from "../components";
import * as z from "zod";

export type GetTransactionActionsRequest = {
    /**
     * The ID for the transaction to get the information for.
     */
    transactionId: string;
};

export type GetTransactionActionsResponse = {
    httpMeta: components.HTTPMetadata;
    /**
     * Returns associated actions.
     */
    actions?: components.Actions | undefined;
};

/** @internal */
export namespace GetTransactionActionsRequest$ {
    export type Inbound = {
        transaction_id: string;
    };

    export const inboundSchema: z.ZodType<GetTransactionActionsRequest, z.ZodTypeDef, Inbound> = z
        .object({
            transaction_id: z.string(),
        })
        .transform((v) => {
            return {
                transactionId: v.transaction_id,
            };
        });

    export type Outbound = {
        transaction_id: string;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, GetTransactionActionsRequest> = z
        .object({
            transactionId: z.string(),
        })
        .transform((v) => {
            return {
                transaction_id: v.transactionId,
            };
        });
}

/** @internal */
export namespace GetTransactionActionsResponse$ {
    export type Inbound = {
        HttpMeta: components.HTTPMetadata$.Inbound;
        Actions?: components.Actions$.Inbound | undefined;
    };

    export const inboundSchema: z.ZodType<GetTransactionActionsResponse, z.ZodTypeDef, Inbound> = z
        .object({
            HttpMeta: components.HTTPMetadata$.inboundSchema,
            Actions: components.Actions$.inboundSchema.optional(),
        })
        .transform((v) => {
            return {
                httpMeta: v.HttpMeta,
                ...(v.Actions === undefined ? null : { actions: v.Actions }),
            };
        });

    export type Outbound = {
        HttpMeta: components.HTTPMetadata$.Outbound;
        Actions?: components.Actions$.Outbound | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, GetTransactionActionsResponse> =
        z
            .object({
                httpMeta: components.HTTPMetadata$.outboundSchema,
                actions: components.Actions$.outboundSchema.optional(),
            })
            .transform((v) => {
                return {
                    HttpMeta: v.httpMeta,
                    ...(v.actions === undefined ? null : { Actions: v.actions }),
                };
            });
}

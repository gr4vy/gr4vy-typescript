/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as components from "../components";
import * as z from "zod";

export type UpdateGiftCardServiceRequest = {
    /**
     * The unique ID of the gift card service.
     */
    giftCardServiceId: string;
    giftCardServiceUpdateRequest?: components.GiftCardServiceUpdateRequest | undefined;
};

/** @internal */
export namespace UpdateGiftCardServiceRequest$ {
    export type Inbound = {
        gift_card_service_id: string;
        GiftCardServiceUpdateRequest?: components.GiftCardServiceUpdateRequest$.Inbound | undefined;
    };

    export const inboundSchema: z.ZodType<UpdateGiftCardServiceRequest, z.ZodTypeDef, Inbound> = z
        .object({
            gift_card_service_id: z.string(),
            GiftCardServiceUpdateRequest:
                components.GiftCardServiceUpdateRequest$.inboundSchema.optional(),
        })
        .transform((v) => {
            return {
                giftCardServiceId: v.gift_card_service_id,
                ...(v.GiftCardServiceUpdateRequest === undefined
                    ? null
                    : { giftCardServiceUpdateRequest: v.GiftCardServiceUpdateRequest }),
            };
        });

    export type Outbound = {
        gift_card_service_id: string;
        GiftCardServiceUpdateRequest?:
            | components.GiftCardServiceUpdateRequest$.Outbound
            | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, UpdateGiftCardServiceRequest> = z
        .object({
            giftCardServiceId: z.string(),
            giftCardServiceUpdateRequest:
                components.GiftCardServiceUpdateRequest$.outboundSchema.optional(),
        })
        .transform((v) => {
            return {
                gift_card_service_id: v.giftCardServiceId,
                ...(v.giftCardServiceUpdateRequest === undefined
                    ? null
                    : { GiftCardServiceUpdateRequest: v.giftCardServiceUpdateRequest }),
            };
        });
}

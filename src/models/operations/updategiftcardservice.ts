/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives";
import * as components from "../components";
import * as z from "zod";

export type UpdateGiftCardServiceRequest = {
    /**
     * The unique ID of the gift card service.
     */
    giftCardServiceId: string;
    giftCardServiceUpdateRequest?: components.GiftCardServiceUpdateRequest | undefined;
};

/** @internal */
export namespace UpdateGiftCardServiceRequest$ {
    export const inboundSchema: z.ZodType<UpdateGiftCardServiceRequest, z.ZodTypeDef, unknown> = z
        .object({
            gift_card_service_id: z.string(),
            GiftCardServiceUpdateRequest:
                components.GiftCardServiceUpdateRequest$.inboundSchema.optional(),
        })
        .transform((v) => {
            return remap$(v, {
                gift_card_service_id: "giftCardServiceId",
                GiftCardServiceUpdateRequest: "giftCardServiceUpdateRequest",
            });
        });

    export type Outbound = {
        gift_card_service_id: string;
        GiftCardServiceUpdateRequest?:
            | components.GiftCardServiceUpdateRequest$.Outbound
            | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, UpdateGiftCardServiceRequest> = z
        .object({
            giftCardServiceId: z.string(),
            giftCardServiceUpdateRequest:
                components.GiftCardServiceUpdateRequest$.outboundSchema.optional(),
        })
        .transform((v) => {
            return remap$(v, {
                giftCardServiceId: "gift_card_service_id",
                giftCardServiceUpdateRequest: "GiftCardServiceUpdateRequest",
            });
        });
}

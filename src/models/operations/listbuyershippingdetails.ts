/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type ListBuyerShippingDetailsGlobals = {
  merchantAccountId?: string | undefined;
};

export type ListBuyerShippingDetailsRequest = {
  /**
   * The ID of the buyer to retrieve shipping details for.
   */
  buyerId: string;
  applicationName?: string | undefined;
  /**
   * The ID of the merchant account to use for this request.
   */
  merchantAccountId?: string | null | undefined;
};

/** @internal */
export const ListBuyerShippingDetailsGlobals$inboundSchema: z.ZodType<
  ListBuyerShippingDetailsGlobals,
  z.ZodTypeDef,
  unknown
> = z.object({
  merchantAccountId: z.string().optional(),
});

/** @internal */
export type ListBuyerShippingDetailsGlobals$Outbound = {
  merchantAccountId?: string | undefined;
};

/** @internal */
export const ListBuyerShippingDetailsGlobals$outboundSchema: z.ZodType<
  ListBuyerShippingDetailsGlobals$Outbound,
  z.ZodTypeDef,
  ListBuyerShippingDetailsGlobals
> = z.object({
  merchantAccountId: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ListBuyerShippingDetailsGlobals$ {
  /** @deprecated use `ListBuyerShippingDetailsGlobals$inboundSchema` instead. */
  export const inboundSchema = ListBuyerShippingDetailsGlobals$inboundSchema;
  /** @deprecated use `ListBuyerShippingDetailsGlobals$outboundSchema` instead. */
  export const outboundSchema = ListBuyerShippingDetailsGlobals$outboundSchema;
  /** @deprecated use `ListBuyerShippingDetailsGlobals$Outbound` instead. */
  export type Outbound = ListBuyerShippingDetailsGlobals$Outbound;
}

export function listBuyerShippingDetailsGlobalsToJSON(
  listBuyerShippingDetailsGlobals: ListBuyerShippingDetailsGlobals,
): string {
  return JSON.stringify(
    ListBuyerShippingDetailsGlobals$outboundSchema.parse(
      listBuyerShippingDetailsGlobals,
    ),
  );
}

export function listBuyerShippingDetailsGlobalsFromJSON(
  jsonString: string,
): SafeParseResult<ListBuyerShippingDetailsGlobals, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ListBuyerShippingDetailsGlobals$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ListBuyerShippingDetailsGlobals' from JSON`,
  );
}

/** @internal */
export const ListBuyerShippingDetailsRequest$inboundSchema: z.ZodType<
  ListBuyerShippingDetailsRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  buyer_id: z.string(),
  application_name: z.string().default("core-api"),
  merchantAccountId: z.nullable(z.string()).optional(),
}).transform((v) => {
  return remap$(v, {
    "buyer_id": "buyerId",
    "application_name": "applicationName",
  });
});

/** @internal */
export type ListBuyerShippingDetailsRequest$Outbound = {
  buyer_id: string;
  application_name: string;
  merchantAccountId?: string | null | undefined;
};

/** @internal */
export const ListBuyerShippingDetailsRequest$outboundSchema: z.ZodType<
  ListBuyerShippingDetailsRequest$Outbound,
  z.ZodTypeDef,
  ListBuyerShippingDetailsRequest
> = z.object({
  buyerId: z.string(),
  applicationName: z.string().default("core-api"),
  merchantAccountId: z.nullable(z.string()).optional(),
}).transform((v) => {
  return remap$(v, {
    buyerId: "buyer_id",
    applicationName: "application_name",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ListBuyerShippingDetailsRequest$ {
  /** @deprecated use `ListBuyerShippingDetailsRequest$inboundSchema` instead. */
  export const inboundSchema = ListBuyerShippingDetailsRequest$inboundSchema;
  /** @deprecated use `ListBuyerShippingDetailsRequest$outboundSchema` instead. */
  export const outboundSchema = ListBuyerShippingDetailsRequest$outboundSchema;
  /** @deprecated use `ListBuyerShippingDetailsRequest$Outbound` instead. */
  export type Outbound = ListBuyerShippingDetailsRequest$Outbound;
}

export function listBuyerShippingDetailsRequestToJSON(
  listBuyerShippingDetailsRequest: ListBuyerShippingDetailsRequest,
): string {
  return JSON.stringify(
    ListBuyerShippingDetailsRequest$outboundSchema.parse(
      listBuyerShippingDetailsRequest,
    ),
  );
}

export function listBuyerShippingDetailsRequestFromJSON(
  jsonString: string,
): SafeParseResult<ListBuyerShippingDetailsRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ListBuyerShippingDetailsRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ListBuyerShippingDetailsRequest' from JSON`,
  );
}

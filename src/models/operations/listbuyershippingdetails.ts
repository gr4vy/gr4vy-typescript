/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as components from "../components";
import * as z from "zod";

export type ListBuyerShippingDetailsRequest = {
    /**
     * The unique ID for a buyer.
     */
    buyerId: string;
};

export type ListBuyerShippingDetailsResponse = {
    httpMeta: components.HTTPMetadata;
    /**
     * Returns all associated shipping details.
     */
    shippingDetails?: components.ShippingDetails | undefined;
    /**
     * Returns a generic error.
     */
    errorGeneric?: components.ErrorGeneric | undefined;
};

/** @internal */
export namespace ListBuyerShippingDetailsRequest$ {
    export type Inbound = {
        buyer_id: string;
    };

    export const inboundSchema: z.ZodType<ListBuyerShippingDetailsRequest, z.ZodTypeDef, Inbound> =
        z
            .object({
                buyer_id: z.string(),
            })
            .transform((v) => {
                return {
                    buyerId: v.buyer_id,
                };
            });

    export type Outbound = {
        buyer_id: string;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        ListBuyerShippingDetailsRequest
    > = z
        .object({
            buyerId: z.string(),
        })
        .transform((v) => {
            return {
                buyer_id: v.buyerId,
            };
        });
}

/** @internal */
export namespace ListBuyerShippingDetailsResponse$ {
    export type Inbound = {
        HttpMeta: components.HTTPMetadata$.Inbound;
        ShippingDetails?: components.ShippingDetails$.Inbound | undefined;
        ErrorGeneric?: components.ErrorGeneric$.Inbound | undefined;
    };

    export const inboundSchema: z.ZodType<ListBuyerShippingDetailsResponse, z.ZodTypeDef, Inbound> =
        z
            .object({
                HttpMeta: components.HTTPMetadata$.inboundSchema,
                ShippingDetails: components.ShippingDetails$.inboundSchema.optional(),
                ErrorGeneric: components.ErrorGeneric$.inboundSchema.optional(),
            })
            .transform((v) => {
                return {
                    httpMeta: v.HttpMeta,
                    ...(v.ShippingDetails === undefined
                        ? null
                        : { shippingDetails: v.ShippingDetails }),
                    ...(v.ErrorGeneric === undefined ? null : { errorGeneric: v.ErrorGeneric }),
                };
            });

    export type Outbound = {
        HttpMeta: components.HTTPMetadata$.Outbound;
        ShippingDetails?: components.ShippingDetails$.Outbound | undefined;
        ErrorGeneric?: components.ErrorGeneric$.Outbound | undefined;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        ListBuyerShippingDetailsResponse
    > = z
        .object({
            httpMeta: components.HTTPMetadata$.outboundSchema,
            shippingDetails: components.ShippingDetails$.outboundSchema.optional(),
            errorGeneric: components.ErrorGeneric$.outboundSchema.optional(),
        })
        .transform((v) => {
            return {
                HttpMeta: v.httpMeta,
                ...(v.shippingDetails === undefined
                    ? null
                    : { ShippingDetails: v.shippingDetails }),
                ...(v.errorGeneric === undefined ? null : { ErrorGeneric: v.errorGeneric }),
            };
        });
}

/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as components from "../components";
import * as z from "zod";

export type ListBuyerShippingDetailsRequest = {
    /**
     * The unique ID for a buyer.
     */
    buyerId: string;
};

export type ListBuyerShippingDetailsResponse = components.ShippingDetails | components.ErrorGeneric;

/** @internal */
export namespace ListBuyerShippingDetailsRequest$ {
    export type Inbound = {
        buyer_id: string;
    };

    export const inboundSchema: z.ZodType<ListBuyerShippingDetailsRequest, z.ZodTypeDef, Inbound> =
        z
            .object({
                buyer_id: z.string(),
            })
            .transform((v) => {
                return {
                    buyerId: v.buyer_id,
                };
            });

    export type Outbound = {
        buyer_id: string;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        ListBuyerShippingDetailsRequest
    > = z
        .object({
            buyerId: z.string(),
        })
        .transform((v) => {
            return {
                buyer_id: v.buyerId,
            };
        });
}

/** @internal */
export namespace ListBuyerShippingDetailsResponse$ {
    export type Inbound = components.ShippingDetails$.Inbound | components.ErrorGeneric$.Inbound;

    export type Outbound = components.ShippingDetails$.Outbound | components.ErrorGeneric$.Outbound;
    export const inboundSchema: z.ZodType<ListBuyerShippingDetailsResponse, z.ZodTypeDef, Inbound> =
        z.union([
            components.ShippingDetails$.inboundSchema,
            components.ErrorGeneric$.inboundSchema,
        ]);
    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        ListBuyerShippingDetailsResponse
    > = z.union([
        components.ShippingDetails$.outboundSchema,
        components.ErrorGeneric$.outboundSchema,
    ]);
}
